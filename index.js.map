{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///index.js","webpack:///webpack/bootstrap d37c0eded387c2549593","webpack:///./src/util.ts","webpack:///./src/bibfile/datatype/string/QuotedString.ts","webpack:///./src/bibfile/datatype/string/BracedString.ts","webpack:///./src/bibfile/datatype/string/bib-string-utils.ts","webpack:///./src/bibfile/datatype/string/BibStringComponent.ts","webpack:///./src/bibfile/datatype/string/StringRef.ts","webpack:///./src/bibfile/datatype/KeyVal.ts","webpack:///./src/bibfile/bib-entry/BibStringEntry.ts","webpack:///./src/bibfile/bib-entry/bibliographic-entity/Author.ts","webpack:///./src/bibfile/bib-entry/bibliographic-entity/Authors.ts","webpack:///./src/bibfile/bib-entry/BibComment.ts","webpack:///./src/bibfile/bib-entry/BibEntry.ts","webpack:///./src/bibfile/bib-entry/BibPreamble.ts","webpack:///./src/bibfile/BibFile.ts","webpack:///./src/lexer/Token.ts","webpack:///./src/lexer/WhitespaceToken.ts","webpack:///./src/lexer/NumericToken.ts","webpack:///./src/index.ts","webpack:///./src/bibfile/bib-entry/bibliographic-entity/mandatory-and-optional-fields.ts","webpack:///./node_modules/nearley/lib/nearley.js","webpack:///./src/parser/ts-parser.ts","webpack:///./src/lexer/Lexer.ts","webpack:///./src/lexer/IdToken.ts","webpack:///./src/lexer/BibBlockTypes.ts"],"names":["root","factory","exports","module","define","amd","a","i","this","modules","__webpack_require__","moduleId","installedModules","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","mustBeString","str","Error","JSON","stringify","mustBeDefined","t","undefined","mustBeArray","isArray","data","constructor","Array","isNumber","isString","value","flattenMyArray","arr","result","length","i_1","length_1","value2","push","isOuterQuotedString","x","type","isQuotedString","__extends","extendStatics","setPrototypeOf","__proto__","b","__","create","BibStringComponent_1","QuotedString","_super","braceDepth","BibStringComponent","OuterQuotedString","BibOuterStringComponent","isOuterBracedString","isBracedString","BracedString","_this","isSpecialCharacter","OuterBracedString","isBibStringComponent","isContiguousSimpleString","util_1","joinContiguousSimpleStrings","join","parseStringComponent","obj","StringRef_1","isStringRef","StringRef","stringref","string","BracedString_1","map","e","flattened","QuotedString_1","toStringBibStringDatum","toStringBibStringData","flattenQuotedStrings","hideQuotes","_i","data_1","datum","flattenned","flattenQuotedString","concat","flattenedQuotedString","doubleQuotes","globContiguousStrings","data_2","element","contiguousSimpleString","lastElement","splitOnAnd","splitOnPattern","splitOnComma","limit","pattern","stopAfter","splitted","buffer","data_3","match","exec","end","prevEnd","index","substring","stringifyDatum","toString","isKeyVal","key","newKeyVal","parseFieldValue","bib_string_utils_1","normalizeFieldValue","field","newStringEntry","_a","convertToKeyVal","BibStringEntry","KeyVal_1","resolveStrings","strings","resolved","keys","forEach","resolveStringReference","resolveStringReferences","seenBeforeStack","alreadyResolved","refs","resolveStringRef","copyWithResolvedStringReferences","copyOuterWithResolvedStringReferences","refName","assign","newData","copied","getFirstLetter","bsd","asString","charAt","startsWithLowerCaseBSD","authorToken","startsWithLowerCase","ch","toLowerCase","toUpperCase","firstVonLast","outer","authorTokens","WHITESPACES","vonStartInclusive","vonEndExclusive","firstNameEndExclusive","von","getSubStringAsArray","firstName","lastName","Math","max","AuthorName","vonLastFirst","vonLastStr","firstStr","vonLast","first","tokens","startIncl","endExcl","vonLastJrFirst","jrStr","jr","parseAuthorName","normalizedFieldValue","partitions","mdbsd","isdbsd","firstNames","vons","lastNames","jrs","firstNames$","vons$","lastNames$","jrs$","initials","id","parseAuthor","Author_1","determineAuthorNames$","determineAuthorNames","globbed","normalizedString","mustBeAuthors","isAuthors","Authors","fieldValue","authorNames","authors$","isBibComment","flattenPlainText","flattenO","BibComment","CommentEntry","wrapper","parseEntryFields","fields","fieldz","isBibEntry","processEntry","entry","strings$","processedFields","fields$","field$","BibStringEntry_1","Authors_1","BibEntry","_id","sortkey$","title$","getField","getFieldAsString","getAuthors","isPreamble","newPreambleNode","BibFile_1","parseBibEntriesAndNonEntries","Preamble","parseNonEntry","nonEntry","BibComment_1","parseEntry","BibEntry_1","BibPreamble_1","parseBibFile","input","nearley","Parser","ts_parser_1","grammar","ParserRules","ParserStart","feed","Lexer_1","default","readTokens","res","results","parse","BibFilePresenter","content","comments","filter","preambles_raw","preamble$","strings_raw","entries_raw","entryMap","entries$","getEntry","entity","newToken","isSpecialChar","specialChars","isEscapableChar","escapableChars","@","(",")","{","}","#","=",",","\\","\"","newWhitespace","isWhitespace","token","WS","isSingleWhiteSpaceCharacter","singleWhitespaces"," ","\t","\r","\n","newNumber","isNum","numericChars","0","1","2","3","4","5","6","7","8","9","__export","hasOptionalFields","optionalFields","hasMandatoryFields","mandatoryFields","getMandatoryFields","getOptionalFields","address","author","booktitle","chapter","edition","editor","howpublished","institution","journal","month","note","number","organization","pages","publisher","school","series","title","volume","year","book","booklet","conference","inproceedings","inbook","incollection","manual","mastersthesis","misc","phdthesis","proceedings","techreport","unpublished","article","findError","hasAllFields","reduce","acc","fieldName","Rule","symbols","postprocess","highestId","State","rule","dot","reference","wantedBy","isComplete","Column","states","wants","scannable","completed","Grammar","rules","start","byName","StreamLexer","reset","options","fromCompiled","keepHistory","lexer","lexerState","column","table","predict","process","current","withCursorAt","stringifySymbolSequence","literal","symbolSequence","slice","nextState","child","state","left","right","build","children","node","reverse","finish","fail","nextColumn","w","complete","exp","nulls","r","inp","copy","Lexer","g","line","lastLineBreak","col","next","save","formatError","message","nextLineBreak","indexOf","chunk","expect","test","isToken","err","offset","restore","splice","rewind","considerations","addToObj","keyval","joinTokens","strs","Number","tok_id","entry_type_bib","entry_type_string","entry_type_preamble","entry_type_comment","ws","num","pound","eq","esc","paren_l","paren_r","brace_l","brace_r","quote_dbl","comma","topLevelObjects","toeknz","tk","keyvals","kv","tkz","tks","tokenz","Ti","Token_1","WhitespaceToken_1","NumericToken_1","IdToken_1","BibBlockTypes_1","len","pos","getStringUntilNonEscapedChar","terminalRegex","chars","nextToken","readNextToken","currentChar","eatWhiteSpace","eatSpecialChars","eatNumericString","eatIdString","pos2","charAtI","isIdChar","newIdToken","trim","startAt","nums","nextPos","newPos","newChar","numericString","parseInt","isFinite","isBibType","bibTypes","isIdToken","preamble","comment","bib"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 17);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction mustBeString(str, o) {\r\n    if (typeof str !== \"string\")\r\n        throw new Error(\"Expected to be string: \" + JSON.stringify(o ? o : str));\r\n    return str;\r\n}\r\nexports.mustBeString = mustBeString;\r\nfunction mustBeDefined(t, o) {\r\n    if (t === undefined)\r\n        throw new Error(\"Expected to be defined: \" + JSON.stringify(o ? o : t));\r\n    return t;\r\n}\r\nexports.mustBeDefined = mustBeDefined;\r\nfunction mustBeArray(str, o) {\r\n    if (!isArray(str))\r\n        throw new Error(\"Expected to be array: \" + JSON.stringify(o ? o : str));\r\n    return str;\r\n}\r\nexports.mustBeArray = mustBeArray;\r\nfunction isArray(data) {\r\n    return !!data && data.constructor === Array;\r\n}\r\nexports.isArray = isArray;\r\nfunction isNumber(data) {\r\n    return typeof data === \"number\";\r\n}\r\nexports.isNumber = isNumber;\r\nfunction isString(data) {\r\n    return typeof data === \"string\";\r\n}\r\nexports.isString = isString;\r\nexports.flattenMyArray = function (arr, result) {\r\n    if (!result)\r\n        result = [];\r\n    for (var i = 0, length = arr.length; i < length; i++) {\r\n        var value = arr[i];\r\n        if (Array.isArray(value)) {\r\n            for (var i_1 = 0, length_1 = value.length; i_1 < length_1; i_1++) {\r\n                var value2 = value[i_1];\r\n                if (Array.isArray(value2)) {\r\n                    exports.flattenMyArray(value2, result);\r\n                }\r\n                else {\r\n                    result.push(value2);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            result.push(value);\r\n        }\r\n    }\r\n    return result;\r\n};\r\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar BibStringComponent_1 = __webpack_require__(4);\r\nvar QuotedString = (function (_super) {\r\n    __extends(QuotedString, _super);\r\n    function QuotedString(braceDepth, data) {\r\n        return _super.call(this, \"quotedstring\", braceDepth, data) || this;\r\n    }\r\n    return QuotedString;\r\n}(BibStringComponent_1.BibStringComponent));\r\nexports.QuotedString = QuotedString;\r\nvar OuterQuotedString = (function (_super) {\r\n    __extends(OuterQuotedString, _super);\r\n    function OuterQuotedString(data) {\r\n        return _super.call(this, \"quotedstringwrapper\", data) || this;\r\n    }\r\n    return OuterQuotedString;\r\n}(BibStringComponent_1.BibOuterStringComponent));\r\nexports.OuterQuotedString = OuterQuotedString;\r\nfunction isOuterQuotedString(x) {\r\n    return x.type === \"quotedstringwrapper\";\r\n}\r\nexports.isOuterQuotedString = isOuterQuotedString;\r\nfunction isQuotedString(x) {\r\n    return x.type === \"quotedstring\";\r\n}\r\nexports.isQuotedString = isQuotedString;\r\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar BibStringComponent_1 = __webpack_require__(4);\r\nvar BracedString = (function (_super) {\r\n    __extends(BracedString, _super);\r\n    function BracedString(braceDepth, data) {\r\n        var _this = _super.call(this, \"bracedstring\", braceDepth, data) || this;\r\n        _this.isSpecialCharacter = braceDepth === 0 && data[0] === \"\\\\\";\r\n        return _this;\r\n    }\r\n    return BracedString;\r\n}(BibStringComponent_1.BibStringComponent));\r\nexports.BracedString = BracedString;\r\nvar OuterBracedString = (function (_super) {\r\n    __extends(OuterBracedString, _super);\r\n    function OuterBracedString(data) {\r\n        return _super.call(this, \"bracedstringwrapper\", data) || this;\r\n    }\r\n    return OuterBracedString;\r\n}(BibStringComponent_1.BibOuterStringComponent));\r\nexports.OuterBracedString = OuterBracedString;\r\nfunction isOuterBracedString(x) {\r\n    return x.type === \"bracedstringwrapper\";\r\n}\r\nexports.isOuterBracedString = isOuterBracedString;\r\nfunction isBracedString(x) {\r\n    return x.type === \"bracedstring\";\r\n}\r\nexports.isBracedString = isBracedString;\r\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar StringRef_1 = __webpack_require__(5);\r\nvar BracedString_1 = __webpack_require__(2);\r\nvar QuotedString_1 = __webpack_require__(1);\r\nvar util_1 = __webpack_require__(0);\r\nfunction isBibStringComponent(x) {\r\n    return typeof x.braceDepth === \"number\" && typeof x.type === \"string\";\r\n}\r\nexports.isBibStringComponent = isBibStringComponent;\r\nfunction isContiguousSimpleString(x) {\r\n    return x.type === \"ContiguousSimpleString\" && util_1.isArray(x.data);\r\n}\r\nexports.isContiguousSimpleString = isContiguousSimpleString;\r\nfunction joinContiguousSimpleStrings(x) {\r\n    return x.data.join(\"\");\r\n}\r\nexports.joinContiguousSimpleStrings = joinContiguousSimpleStrings;\r\nfunction parseStringComponent(braceDepth, obj) {\r\n    if (util_1.isNumber(obj) || util_1.isString(obj))\r\n        return obj;\r\n    if (StringRef_1.isStringRef(obj))\r\n        return new StringRef_1.StringRef(0, obj.stringref);\r\n    switch (util_1.mustBeString(obj.type, obj)) {\r\n        case \"id\":\r\n        case \"ws\":\r\n        case \"number\":\r\n            return util_1.mustBeString(obj.string);\r\n        case \"bracedstring\":\r\n        case \"braced\":\r\n            if (!util_1.isArray(obj.data)) {\r\n                throw new Error(\"Expect array for data: \" + JSON.stringify(obj));\r\n            }\r\n            return new BracedString_1.BracedString(braceDepth, util_1.flattenMyArray(obj.data).map(function (e) { return parseStringComponent(braceDepth + 1, e); }));\r\n        case \"quotedstring\":\r\n            if (!util_1.isArray(obj.data)) {\r\n                throw new Error(\"Expect array for data: \" + JSON.stringify(obj));\r\n            }\r\n            var flattened = util_1.flattenMyArray(obj.data);\r\n            return new QuotedString_1.QuotedString(braceDepth, flattened.map(function (e) { return parseStringComponent(braceDepth, e); }));\r\n        default:\r\n            throw new Error(\"Unexpected complex string type: \" + obj.type);\r\n    }\r\n}\r\nexports.parseStringComponent = parseStringComponent;\r\nfunction toStringBibStringDatum(data) {\r\n    if (util_1.isString(data))\r\n        return data;\r\n    if (util_1.isNumber(data))\r\n        return data + \"\";\r\n    if (BracedString_1.isBracedString(data)\r\n        || QuotedString_1.isQuotedString(data)\r\n        || QuotedString_1.isOuterQuotedString(data)\r\n        || BracedString_1.isOuterBracedString(data))\r\n        return toStringBibStringData(data.data);\r\n    throw new Error(JSON.stringify(data));\r\n}\r\nexports.toStringBibStringDatum = toStringBibStringDatum;\r\nfunction toStringBibStringData(data) {\r\n    return data.map(toStringBibStringDatum).join(\"\");\r\n}\r\nexports.toStringBibStringData = toStringBibStringData;\r\nfunction flattenQuotedStrings(data, hideQuotes) {\r\n    var result = [];\r\n    for (var _i = 0, data_1 = data; _i < data_1.length; _i++) {\r\n        var datum = data_1[_i];\r\n        var flattenned = flattenQuotedString(datum, hideQuotes);\r\n        if (util_1.isArray(flattenned)) {\r\n            result = result.concat(flattenned);\r\n        }\r\n        else {\r\n            result.push(flattenned);\r\n        }\r\n    }\r\n    return result;\r\n}\r\nexports.flattenQuotedStrings = flattenQuotedStrings;\r\nvar doubleQuotes = [\"\\\"\"];\r\nfunction flattenQuotedString(data, hideQuotes) {\r\n    if (BracedString_1.isBracedString(data))\r\n        return data;\r\n    if (QuotedString_1.isQuotedString(data)) {\r\n        var flattenedQuotedString = flattenQuotedStrings(data.data, true);\r\n        if (util_1.isArray(flattenedQuotedString)) {\r\n            return hideQuotes\r\n                ? flattenedQuotedString\r\n                : doubleQuotes.concat(flattenedQuotedString).concat(doubleQuotes);\r\n        }\r\n        else if (hideQuotes)\r\n            return flattenedQuotedString;\r\n        else\r\n            return [\"\\\"\", flattenedQuotedString, \"\\\"\"];\r\n    }\r\n    if (QuotedString_1.isOuterQuotedString(data))\r\n        return flattenQuotedStrings(data.data, true);\r\n    if (BracedString_1.isOuterBracedString(data))\r\n        return flattenQuotedStrings(data.data, false);\r\n    if (util_1.isString(data) || util_1.isNumber(data))\r\n        return data;\r\n    if (StringRef_1.isStringRef(data))\r\n        throw new Error(\"StringRef should be resolved at this point!\");\r\n    else\r\n        throw new Error();\r\n}\r\nfunction globContiguousStrings(data) {\r\n    var result = [];\r\n    for (var _i = 0, data_2 = data; _i < data_2.length; _i++) {\r\n        var element = data_2[_i];\r\n        if (util_1.isString(element) || util_1.isNumber(element)) {\r\n            if (result.length <= 0) {\r\n                var contiguousSimpleString = {\r\n                    type: \"ContiguousSimpleString\",\r\n                    data: [element]\r\n                };\r\n                result.push(contiguousSimpleString);\r\n            }\r\n            else {\r\n                var lastElement = result[result.length - 1];\r\n                if (isContiguousSimpleString(lastElement)) {\r\n                    lastElement.data.push(element);\r\n                }\r\n                else {\r\n                    var contiguousSimpleString = {\r\n                        type: \"ContiguousSimpleString\",\r\n                        data: [element]\r\n                    };\r\n                    result.push(contiguousSimpleString);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            result.push(element);\r\n        }\r\n    }\r\n    return result;\r\n}\r\nexports.globContiguousStrings = globContiguousStrings;\r\nfunction splitOnAnd(data) {\r\n    return splitOnPattern(data, /\\s+and\\s+/g);\r\n}\r\nexports.splitOnAnd = splitOnAnd;\r\nfunction splitOnComma(data, limit) {\r\n    if (limit === void 0) { limit = 2; }\r\n    return splitOnPattern(data, /\\s*,\\s*/g, limit);\r\n}\r\nexports.splitOnComma = splitOnComma;\r\nfunction splitOnPattern(data, pattern, stopAfter) {\r\n    var splitted = [];\r\n    var buffer = [];\r\n    for (var _i = 0, data_3 = data; _i < data_3.length; _i++) {\r\n        var datum = data_3[_i];\r\n        if (util_1.isString(datum) && (stopAfter === undefined || stopAfter > 0)) {\r\n            var match = pattern.exec(datum);\r\n            var end = 0;\r\n            if (match) {\r\n                do {\r\n                    var prevEnd = end;\r\n                    end = match.index + match[0].length;\r\n                    buffer.push(datum.substring(prevEnd, match.index));\r\n                    if (stopAfter === undefined || stopAfter > 0) {\r\n                        splitted.push(buffer);\r\n                        buffer = [];\r\n                        if (stopAfter !== undefined && stopAfter > 0)\r\n                            stopAfter--;\r\n                    }\r\n                    if (stopAfter === undefined || stopAfter > 0)\r\n                        match = pattern.exec(datum);\r\n                    else\r\n                        match = undefined;\r\n                } while (match);\r\n                if (end > 0 && end < datum.length)\r\n                    buffer.push(datum.substring(end));\r\n            }\r\n            else {\r\n                buffer.push(datum);\r\n            }\r\n        }\r\n        else\r\n            buffer.push(datum);\r\n    }\r\n    if (buffer.length > 0)\r\n        splitted.push(buffer);\r\n    return splitted;\r\n}\r\nexports.splitOnPattern = splitOnPattern;\r\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar util_1 = __webpack_require__(0);\r\nvar BibStringComponent = (function () {\r\n    function BibStringComponent(type, braceDepth, data) {\r\n        this.type = type;\r\n        this.braceDepth = braceDepth;\r\n        this.data = data;\r\n    }\r\n    BibStringComponent.prototype.stringify = function () {\r\n        return this.data.map(stringifyDatum).join(\"\");\r\n    };\r\n    return BibStringComponent;\r\n}());\r\nexports.BibStringComponent = BibStringComponent;\r\nfunction isBibStringComponent(x) {\r\n    return typeof x.braceDepth === \"number\" && typeof x.type === \"string\";\r\n}\r\nfunction stringifyDatum(datum) {\r\n    if (util_1.isString(datum))\r\n        return datum;\r\n    if (util_1.isNumber(datum))\r\n        return datum.toString();\r\n    if (isBibStringComponent(datum))\r\n        return datum.stringify();\r\n    else\r\n        throw new Error(\"Unexpected state\");\r\n}\r\nexports.stringifyDatum = stringifyDatum;\r\nvar BibOuterStringComponent = (function (_super) {\r\n    __extends(BibOuterStringComponent, _super);\r\n    function BibOuterStringComponent(type, data) {\r\n        return _super.call(this, type, 0, data) || this;\r\n    }\r\n    return BibOuterStringComponent;\r\n}(BibStringComponent));\r\nexports.BibOuterStringComponent = BibOuterStringComponent;\r\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar StringRef = (function () {\r\n    function StringRef(braceDepth, stringref) {\r\n        this.braceDepth = braceDepth;\r\n        this.stringref = stringref;\r\n    }\r\n    return StringRef;\r\n}());\r\nexports.StringRef = StringRef;\r\nfunction isStringRef(stringref) {\r\n    return typeof stringref.stringref === \"string\";\r\n}\r\nexports.isStringRef = isStringRef;\r\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar BracedString_1 = __webpack_require__(2);\r\nvar QuotedString_1 = __webpack_require__(1);\r\nvar util_1 = __webpack_require__(0);\r\nvar bib_string_utils_1 = __webpack_require__(3);\r\nfunction isKeyVal(data) {\r\n    return typeof data.key === \"string\"\r\n        && data.value !== undefined;\r\n}\r\nexports.isKeyVal = isKeyVal;\r\nfunction newKeyVal(data) {\r\n    if (isKeyVal(data)) {\r\n        return {\r\n            key: data.key,\r\n            value: parseFieldValue(data.value),\r\n        };\r\n    }\r\n    else {\r\n        throw new Error(\"Was not a KeyVal: \" + JSON.stringify(data));\r\n    }\r\n}\r\nexports.newKeyVal = newKeyVal;\r\nfunction parseFieldValue(value) {\r\n    if (util_1.isNumber(value)) {\r\n        return value;\r\n    }\r\n    var data = util_1.mustBeArray(value.data);\r\n    switch (value.type) {\r\n        case \"quotedstringwrapper\":\r\n            if (data.length === 1 && util_1.isNumber(data[0]))\r\n                return data[0];\r\n            return new QuotedString_1.OuterQuotedString(data.map(function (e) { return bib_string_utils_1.parseStringComponent(0, e); }));\r\n        case \"bracedstringwrapper\":\r\n            return new BracedString_1.OuterBracedString(data.map(function (e) { return bib_string_utils_1.parseStringComponent(0, e); }));\r\n        default:\r\n            throw new Error(\"Unexpected value: \" + JSON.stringify(value));\r\n    }\r\n}\r\nexports.parseFieldValue = parseFieldValue;\r\nfunction normalizeFieldValue(field) {\r\n    if (!field)\r\n        return undefined;\r\n    if (util_1.isNumber(field))\r\n        return field;\r\n    else\r\n        return field.stringify();\r\n}\r\nexports.normalizeFieldValue = normalizeFieldValue;\r\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar KeyVal_1 = __webpack_require__(6);\r\nvar StringRef_1 = __webpack_require__(5);\r\nvar QuotedString_1 = __webpack_require__(1);\r\nvar BracedString_1 = __webpack_require__(2);\r\nvar util_1 = __webpack_require__(0);\r\nvar bib_string_utils_1 = __webpack_require__(3);\r\nvar BibStringEntry = (function () {\r\n    function BibStringEntry(key, value) {\r\n        this.type = \"string\";\r\n        this.key = key;\r\n        this.value = value;\r\n    }\r\n    return BibStringEntry;\r\n}());\r\nexports.BibStringEntry = BibStringEntry;\r\nfunction newStringEntry(data) {\r\n    var _a = convertToKeyVal(data), key = _a.key, value = _a.value;\r\n    return new BibStringEntry(key, value);\r\n}\r\nexports.newStringEntry = newStringEntry;\r\nfunction convertToKeyVal(data) {\r\n    if (KeyVal_1.isKeyVal(data)) {\r\n        return KeyVal_1.newKeyVal(data);\r\n    }\r\n    else {\r\n        if (data.type !== \"string\") {\r\n            throw new Error(\"Unexpected node: \" + JSON.stringify(data));\r\n        }\r\n        return convertToKeyVal(data.data);\r\n    }\r\n}\r\nfunction resolveStrings(strings) {\r\n    var resolved = {};\r\n    Object.keys(strings).forEach(function (key) {\r\n        if (!resolved[key])\r\n            resolved[key] = resolveStringReference({}, resolved, strings, strings[key]);\r\n    });\r\n    return resolved;\r\n}\r\nexports.resolveStrings = resolveStrings;\r\nfunction resolveStringReferences(o, seenBeforeStack, alreadyResolved, refs) {\r\n    return o.data.map(function (datum) {\r\n        if (util_1.isString(datum) || util_1.isNumber(datum))\r\n            return datum;\r\n        else if (StringRef_1.isStringRef(datum))\r\n            return resolveStringRef(seenBeforeStack, refs, datum, alreadyResolved);\r\n        else if (bib_string_utils_1.isBibStringComponent(datum))\r\n            return copyWithResolvedStringReferences(datum, seenBeforeStack, alreadyResolved, refs);\r\n        else\r\n            throw new Error();\r\n    });\r\n}\r\nexports.resolveStringReferences = resolveStringReferences;\r\nfunction resolveStringReference(seenBeforeStack, alreadyResolved, refs, data) {\r\n    if (util_1.isNumber(data)) {\r\n        return data;\r\n    }\r\n    else if (BracedString_1.isOuterBracedString(data) || QuotedString_1.isOuterQuotedString(data)) {\r\n        return copyOuterWithResolvedStringReferences(data, seenBeforeStack, alreadyResolved, refs);\r\n    }\r\n    if (StringRef_1.isStringRef(data)) {\r\n        return resolveStringRef(seenBeforeStack, refs, data, alreadyResolved);\r\n    }\r\n    return data;\r\n}\r\nexports.resolveStringReference = resolveStringReference;\r\nfunction resolveStringRef(seenBeforeStack, refs, data, alreadyResolved) {\r\n    var refName = data.stringref;\r\n    if (seenBeforeStack[refName])\r\n        throw new Error(\"Cycle detected: \" + refName);\r\n    if (alreadyResolved[refName]) {\r\n        return alreadyResolved[refName];\r\n    }\r\n    if (!refs[refName])\r\n        throw new Error(\"Unresolved reference: \\\"\" + data.stringref + \"\\\" (\" + JSON.stringify(data) + \")\");\r\n    alreadyResolved[refName] = resolveStringReference(Object.assign({}, seenBeforeStack, (_a = {}, _a[refName] = true, _a)), alreadyResolved, refs, refs[refName]);\r\n    return alreadyResolved[refName];\r\n    var _a;\r\n}\r\nfunction copyWithResolvedStringReferences(obj, seenBeforeStack, alreadyResolved, refs) {\r\n    var newData = resolveStringReferences(obj, seenBeforeStack, alreadyResolved, refs);\r\n    var braceDepth = obj.braceDepth;\r\n    if (QuotedString_1.isQuotedString(obj))\r\n        return new QuotedString_1.QuotedString(braceDepth, newData);\r\n    if (BracedString_1.isBracedString(obj))\r\n        return new BracedString_1.BracedString(braceDepth, newData);\r\n    if (QuotedString_1.isOuterQuotedString(obj))\r\n        return new QuotedString_1.OuterQuotedString(newData);\r\n    if (BracedString_1.isOuterBracedString(obj))\r\n        return new BracedString_1.OuterBracedString(newData);\r\n    else\r\n        throw new Error();\r\n}\r\nexports.copyWithResolvedStringReferences = copyWithResolvedStringReferences;\r\nfunction copyOuterWithResolvedStringReferences(obj, seenBeforeStack, alreadyResolved, refs) {\r\n    var copied = copyWithResolvedStringReferences(obj, seenBeforeStack, alreadyResolved, refs);\r\n    if (!BracedString_1.isOuterBracedString(copied) && !QuotedString_1.isOuterQuotedString(copied))\r\n        throw new Error();\r\n    return copied;\r\n}\r\nexports.copyOuterWithResolvedStringReferences = copyOuterWithResolvedStringReferences;\r\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar util_1 = __webpack_require__(0);\r\nvar QuotedString_1 = __webpack_require__(1);\r\nvar StringRef_1 = __webpack_require__(5);\r\nvar BracedString_1 = __webpack_require__(2);\r\nvar bib_string_utils_1 = __webpack_require__(3);\r\nfunction word2string(obj) {\r\n    if (typeof obj === \"string\")\r\n        return obj;\r\n    else if (obj.type == \"braced\")\r\n        return word2string(obj.data);\r\n    else if (obj.unicode)\r\n        return obj.unicode;\r\n    else if (obj.string)\r\n        return obj.string;\r\n    else if (obj.constructor == Array)\r\n        return obj.map(word2string).join(\"\");\r\n    else\r\n        throw new Error(\"? \" + JSON.stringify(obj));\r\n}\r\nvar WHITESPACES = /\\s+/g;\r\nvar AuthorName = (function () {\r\n    function AuthorName(firstNames, vons, lastNames, jrs) {\r\n        this.firstNames$ = firstNames;\r\n        this.vons$ = vons;\r\n        this.lastNames$ = lastNames;\r\n        this.jrs$ = jrs;\r\n        this.initials = firstNames.map(getFirstLetter);\r\n        this.firstNames = firstNames.map(bib_string_utils_1.toStringBibStringData);\r\n        this.vons = vons.map(bib_string_utils_1.toStringBibStringData);\r\n        this.lastNames = lastNames.map(bib_string_utils_1.toStringBibStringData);\r\n        this.jrs = jrs.map(bib_string_utils_1.toStringBibStringData);\r\n        this.id = this.firstNames.join(\"-\") + \"-\"\r\n            + this.vons.join(\"-\") + \"-\"\r\n            + this.lastNames.join(\"-\") + \"-\"\r\n            + this.jrs.join(\"-\");\r\n    }\r\n    return AuthorName;\r\n}());\r\nexports.AuthorName = AuthorName;\r\nfunction getFirstLetter(bsd) {\r\n    var asString = bib_string_utils_1.toStringBibStringData(bsd);\r\n    return asString ? asString.charAt(0) : \"\";\r\n}\r\nfunction isPartOfName(char) {\r\n    return (char === \",\" || char.match(/\\s/));\r\n}\r\nfunction startsWithLowerCaseBSD(authorToken) {\r\n    if (authorToken.length > 0)\r\n        return startsWithLowerCase(authorToken[0]);\r\n    else\r\n        return false;\r\n}\r\nfunction startsWithLowerCase(authorToken) {\r\n    if (util_1.isString(authorToken)) {\r\n        if (!authorToken)\r\n            return false;\r\n        var ch = authorToken.charAt(0);\r\n        return ch.toLowerCase() === ch && ch.toUpperCase() !== ch;\r\n    }\r\n    if (QuotedString_1.isQuotedString(authorToken)) {\r\n        if (!authorToken.data || authorToken.data.length <= 0)\r\n            return false;\r\n        return startsWithLowerCase(authorToken.data[0]);\r\n    }\r\n    if (StringRef_1.isStringRef(authorToken)\r\n        || QuotedString_1.isOuterQuotedString(authorToken)\r\n        || BracedString_1.isOuterBracedString(authorToken))\r\n        throw new Error(\"Should not do this test on this type\");\r\n    return false;\r\n}\r\nfunction firstVonLast(outer) {\r\n    var authorTokens = bib_string_utils_1.splitOnPattern(outer, WHITESPACES);\r\n    var vonStartInclusive = -1;\r\n    var vonEndExclusive = -1;\r\n    var firstNameEndExclusive = -1;\r\n    for (var i = 0; i < authorTokens.length - 1; i++) {\r\n        if (startsWithLowerCaseBSD(authorTokens[i])) {\r\n            if (vonStartInclusive < 0)\r\n                vonStartInclusive = i;\r\n            vonEndExclusive = i + 1;\r\n        }\r\n    }\r\n    if (vonStartInclusive >= 0)\r\n        firstNameEndExclusive = vonStartInclusive;\r\n    else\r\n        firstNameEndExclusive = authorTokens.length - 1;\r\n    var von = vonStartInclusive >= 0 ? getSubStringAsArray(authorTokens, vonStartInclusive, vonEndExclusive) : [];\r\n    var firstName = getSubStringAsArray(authorTokens, 0, firstNameEndExclusive);\r\n    var lastName = getSubStringAsArray(authorTokens, Math.max(vonEndExclusive, firstNameEndExclusive), authorTokens.length);\r\n    return new AuthorName(firstName, von, lastName, []);\r\n}\r\nfunction vonLastFirst(vonLastStr, firstStr) {\r\n    var vonLast = bib_string_utils_1.splitOnPattern(vonLastStr, WHITESPACES);\r\n    var first = bib_string_utils_1.splitOnPattern(firstStr, WHITESPACES);\r\n    var vonStartInclusive = -1;\r\n    var vonEndExclusive = -1;\r\n    for (var i = 0; i < vonLast.length - 1; i++)\r\n        if (startsWithLowerCaseBSD(vonLast[i])) {\r\n            if (vonStartInclusive < 0)\r\n                vonStartInclusive = i;\r\n            vonEndExclusive = i + 1;\r\n        }\r\n    var von = vonStartInclusive >= 0 ? getSubStringAsArray(vonLast, 0, vonEndExclusive) : [];\r\n    var firstName = first;\r\n    var lastName = getSubStringAsArray(vonLast, Math.max(vonEndExclusive, 0));\r\n    return new AuthorName(firstName, von, lastName, []);\r\n}\r\nfunction getSubStringAsArray(tokens, startIncl, endExcl) {\r\n    var arr = [];\r\n    for (var i = startIncl; i < (endExcl === undefined ? tokens.length : endExcl); i++) {\r\n        arr.push(tokens[i]);\r\n    }\r\n    return arr;\r\n}\r\nfunction vonLastJrFirst(vonLastStr, jrStr, firstStr) {\r\n    var vonLast = bib_string_utils_1.splitOnPattern(vonLastStr, WHITESPACES);\r\n    var first = bib_string_utils_1.splitOnPattern(firstStr, WHITESPACES);\r\n    var jr = bib_string_utils_1.splitOnPattern(jrStr, WHITESPACES);\r\n    var vonStartInclusive = -1;\r\n    var vonEndExclusive = -1;\r\n    for (var i = 0; i < vonLast.length - 1; i++)\r\n        if (startsWithLowerCaseBSD(vonLast[i])) {\r\n            if (vonStartInclusive < 0)\r\n                vonStartInclusive = i;\r\n            vonEndExclusive = i + 1;\r\n        }\r\n    var von = vonStartInclusive >= 0 ? getSubStringAsArray(vonLast, 0, vonEndExclusive) : [];\r\n    var lastName = getSubStringAsArray(vonLast, Math.max(vonEndExclusive, 0));\r\n    return new AuthorName(first, von, lastName, jr);\r\n}\r\nfunction parseAuthorName(normalizedFieldValue) {\r\n    var partitions = bib_string_utils_1.splitOnComma(normalizedFieldValue);\r\n    switch (partitions.length) {\r\n        case 1:\r\n            return firstVonLast(partitions[0]);\r\n        case 2:\r\n            return vonLastFirst(mdbsd(partitions[0]), mdbsd(partitions[1]));\r\n        case 3:\r\n            return vonLastJrFirst(mdbsd(partitions[0]), mdbsd(partitions[1]), mdbsd(partitions[2]));\r\n        default:\r\n            throw new Error(\"Could not parse author name: partitioned as \" + JSON.stringify(partitions) + \" in \" + JSON.stringify(normalizedFieldValue));\r\n    }\r\n}\r\nexports.parseAuthorName = parseAuthorName;\r\nfunction isdbsd(x) {\r\n    return x !== undefined;\r\n}\r\nfunction mdbsd(x) {\r\n    if (isdbsd(x))\r\n        return x;\r\n    else\r\n        throw new Error(\"???????\");\r\n}\r\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar util_1 = __webpack_require__(0);\r\nvar Author_1 = __webpack_require__(8);\r\nvar QuotedString_1 = __webpack_require__(1);\r\nvar BibStringComponent_1 = __webpack_require__(4);\r\nvar bib_string_utils_1 = __webpack_require__(3);\r\nvar Authors = (function (_super) {\r\n    __extends(Authors, _super);\r\n    function Authors(fieldValue) {\r\n        var _this = this;\r\n        var data = util_1.isNumber(fieldValue) ? [fieldValue] : fieldValue.data;\r\n        _this = _super.call(this, \"authors\", data) || this;\r\n        var authorNames = determineAuthorNames$(fieldValue);\r\n        _this.authors$ = authorNames.map(function (name) { return parseAuthor(name); });\r\n        return _this;\r\n    }\r\n    return Authors;\r\n}(BibStringComponent_1.BibOuterStringComponent));\r\nexports.Authors = Authors;\r\nfunction parseAuthor(data) {\r\n    return Author_1.parseAuthorName(data);\r\n}\r\nfunction determineAuthorNames$(data) {\r\n    if (util_1.isNumber(data)) {\r\n        return determineAuthorNames([data]);\r\n    }\r\n    else {\r\n        return determineAuthorNames(data.data, QuotedString_1.isOuterQuotedString(data));\r\n    }\r\n}\r\nexports.determineAuthorNames$ = determineAuthorNames$;\r\nfunction determineAuthorNames(data, hideQuotes) {\r\n    var globbed = bib_string_utils_1.globContiguousStrings(bib_string_utils_1.flattenQuotedStrings(data, hideQuotes));\r\n    var normalizedString = globbed.map(function (e) { return bib_string_utils_1.isContiguousSimpleString(e) ? bib_string_utils_1.joinContiguousSimpleStrings(e) : e; });\r\n    return bib_string_utils_1.splitOnAnd(normalizedString);\r\n}\r\nfunction mustBeAuthors(x) {\r\n    if (!isAuthors(x))\r\n        throw new Error();\r\n    return x;\r\n}\r\nexports.mustBeAuthors = mustBeAuthors;\r\nfunction isAuthors(x) {\r\n    return (util_1.isArray(x[\"authors$\"]) && x.type === \"authors\");\r\n}\r\nexports.isAuthors = isAuthors;\r\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar util_1 = __webpack_require__(0);\r\nvar BibComment = (function () {\r\n    function BibComment(data) {\r\n        this.type = \"comment\";\r\n        this.data = data;\r\n        this.string = data.join(\"\");\r\n    }\r\n    BibComment.prototype.toString = function () {\r\n        return this.string;\r\n    };\r\n    return BibComment;\r\n}());\r\nexports.BibComment = BibComment;\r\nvar CommentEntry = (function () {\r\n    function CommentEntry(type, data) {\r\n        this.type = type;\r\n        this.data = data;\r\n        this.string = data.join(\"\");\r\n    }\r\n    CommentEntry.prototype.toString = function () {\r\n        return this.string;\r\n    };\r\n    return CommentEntry;\r\n}());\r\nexports.CommentEntry = CommentEntry;\r\nfunction isBibComment(n) {\r\n    return n.type === \"comment\" && util_1.isArray(n.data);\r\n}\r\nexports.isBibComment = isBibComment;\r\nvar flattenO = function (wrapper) { return util_1.isString(wrapper) ? wrapper\r\n    : typeof wrapper === \"number\" ? wrapper.toString()\r\n        : wrapper[\"type\"] === \"@bib\" ? \"@\" + util_1.mustBeString(wrapper.string)\r\n            : wrapper[\"type\"] === \"escapedEntry\" ? \"\\\\\" + flattenO(wrapper.data)\r\n                : util_1.mustBeString(wrapper.string); };\r\nfunction flattenPlainText(data) {\r\n    return util_1.flattenMyArray(data).map(flattenO);\r\n}\r\nexports.flattenPlainText = flattenPlainText;\r\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Authors_1 = __webpack_require__(9);\r\nvar BibStringEntry_1 = __webpack_require__(7);\r\nvar KeyVal_1 = __webpack_require__(6);\r\nvar BibEntry = (function () {\r\n    function BibEntry(type, id, fields) {\r\n        this.type = type;\r\n        this._id = id;\r\n        this.fields = fields;\r\n        this.sortkey$ = \"\";\r\n        this.title$ = \"\";\r\n    }\r\n    BibEntry.prototype.getField = function (key) {\r\n        return this.fields[key];\r\n    };\r\n    BibEntry.prototype.getFieldAsString = function (key) {\r\n        var field = this.getField(key);\r\n        return KeyVal_1.normalizeFieldValue(field);\r\n    };\r\n    BibEntry.prototype.getAuthors = function () {\r\n        var field = this.fields[\"author\"];\r\n        if (field === undefined)\r\n            return field;\r\n        return Authors_1.mustBeAuthors(field);\r\n    };\r\n    return BibEntry;\r\n}());\r\nexports.BibEntry = BibEntry;\r\nfunction parseEntryFields(fields) {\r\n    var fieldz = {};\r\n    Object.keys(fields).forEach(function (key) {\r\n        switch (key) {\r\n            default:\r\n                fieldz[key] = KeyVal_1.parseFieldValue(fields[key]);\r\n                break;\r\n        }\r\n    });\r\n    return fieldz;\r\n}\r\nexports.parseEntryFields = parseEntryFields;\r\nfunction isBibEntry(x) {\r\n    return typeof x[\"type\"] === \"string\"\r\n        && typeof x[\"_id\"] === \"string\"\r\n        && !!x[\"fields\"];\r\n}\r\nexports.isBibEntry = isBibEntry;\r\nfunction processEntry(entry, strings$) {\r\n    var processedFields = {};\r\n    var fields$ = entry.fields;\r\n    Object.keys(entry.fields).forEach(function (key) {\r\n        var field$ = BibStringEntry_1.resolveStringReference({}, processedFields, strings$, fields$[key]);\r\n        switch (key) {\r\n            case \"author\":\r\n                processedFields[key] = new Authors_1.Authors(field$);\r\n                break;\r\n            case \"title\":\r\n                processedFields[key] = (field$);\r\n                break;\r\n            case \"incollection\":\r\n            default:\r\n                processedFields[key] = field$;\r\n                break;\r\n        }\r\n    });\r\n    return new BibEntry(entry.type, entry._id, processedFields);\r\n}\r\nexports.processEntry = processEntry;\r\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar util_1 = __webpack_require__(0);\r\nvar BibFile_1 = __webpack_require__(13);\r\nvar Preamble = (function () {\r\n    function Preamble(data) {\r\n        this.type = (\"preamble\");\r\n        this.data = data;\r\n        this.string = data.join(\"\");\r\n    }\r\n    Preamble.prototype.toString = function () {\r\n        return this.string;\r\n    };\r\n    return Preamble;\r\n}());\r\nexports.Preamble = Preamble;\r\nfunction isPreamble(x) {\r\n    return x.type === \"preamble\" && !!x.data;\r\n}\r\nexports.isPreamble = isPreamble;\r\nfunction newPreambleNode(data) {\r\n    var flattened = BibFile_1.parseBibEntriesAndNonEntries(util_1.mustBeArray(data.data));\r\n    return new Preamble(flattened);\r\n}\r\nexports.newPreambleNode = newPreambleNode;\r\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar nearley = __webpack_require__(19);\r\nvar ts_parser_1 = __webpack_require__(20);\r\nvar util_1 = __webpack_require__(0);\r\nvar KeyVal_1 = __webpack_require__(6);\r\nvar BibEntry_1 = __webpack_require__(11);\r\nvar BibComment_1 = __webpack_require__(10);\r\nvar BibPreamble_1 = __webpack_require__(12);\r\nvar BibStringEntry_1 = __webpack_require__(7);\r\nvar Lexer_1 = __webpack_require__(21);\r\nvar BibFilePresenter = (function () {\r\n    function BibFilePresenter(content) {\r\n        var _this = this;\r\n        this.content = content;\r\n        this.comments = content.filter(BibComment_1.isBibComment).map(function (c) {\r\n            if (BibComment_1.isBibComment(c))\r\n                return c;\r\n            else\r\n                throw new Error();\r\n        });\r\n        this.preambles_raw = content.filter(function (c) { return BibPreamble_1.isPreamble(c); }).map(function (c) {\r\n            if (BibPreamble_1.isPreamble(c))\r\n                return c;\r\n            else\r\n                throw new Error();\r\n        });\r\n        this.preamble$ = this.preambles_raw.map(function (p) { return p.toString(); }).join(\"\\n\");\r\n        var strings = {};\r\n        this.content.forEach(function (entry) {\r\n            if (KeyVal_1.isKeyVal(entry)) {\r\n                if (!!strings[entry.key])\r\n                    throw new Error(\"String with id \" + entry.key + \" was defined more than once\");\r\n                strings[entry.key] = entry.value;\r\n            }\r\n        });\r\n        this.strings_raw = strings;\r\n        this.strings$ = BibStringEntry_1.resolveStrings(strings);\r\n        this.entries_raw = content.filter(function (c) { return BibEntry_1.isBibEntry(c); }).map(function (c) {\r\n            if (BibEntry_1.isBibEntry(c))\r\n                return c;\r\n            else\r\n                throw new Error();\r\n        });\r\n        var entryMap = {};\r\n        this.entries_raw.forEach(function (entry) {\r\n            var key = entry._id;\r\n            if (!!entryMap[key])\r\n                throw new Error(\"Entry with id \" + key + \" was defined more than once\");\r\n            entryMap[key] = BibEntry_1.processEntry(entry, _this.strings$);\r\n        });\r\n        this.entries$ = entryMap;\r\n    }\r\n    BibFilePresenter.prototype.getEntry = function (id) {\r\n        return this.entries$[id];\r\n    };\r\n    return BibFilePresenter;\r\n}());\r\nexports.BibFilePresenter = BibFilePresenter;\r\nfunction parseNonEntry(nonEntry) {\r\n    if (!util_1.isArray(nonEntry.data) || nonEntry.type !== \"NON_ENTRY\")\r\n        throw new Error();\r\n    return new BibComment_1.BibComment(BibComment_1.flattenPlainText(nonEntry.data));\r\n}\r\nfunction parseEntry(entry) {\r\n    switch (typeof entry) {\r\n        case \"object\":\r\n            var data = entry.data;\r\n            if (typeof data[\"@type\"] === \"string\") {\r\n                return new BibEntry_1.BibEntry(data[\"@type\"], data._id, BibEntry_1.parseEntryFields(data.fields));\r\n            }\r\n            var type = util_1.mustBeString(data.type);\r\n            switch (type) {\r\n                case \"string\":\r\n                    return BibStringEntry_1.newStringEntry(data);\r\n                case \"preamble\":\r\n                    return BibPreamble_1.newPreambleNode(data);\r\n                default:\r\n                    throw new Error(\"Unexpected entry parsed: \" + data.type);\r\n            }\r\n        default:\r\n            throw new Error(\"Expected object as data for entry\");\r\n    }\r\n}\r\nexports.parseBibEntriesAndNonEntries = function (parse) {\r\n    return parse.map(function (entity) {\r\n        switch (entity.type) {\r\n            case \"NON_ENTRY\":\r\n                return (parseNonEntry(entity));\r\n            case \"ENTRY\":\r\n                return (parseEntry(entity));\r\n            default:\r\n                throw new Error(\"Expected ENTRY or NON_ENTRY\");\r\n        }\r\n    });\r\n};\r\nfunction parseBibFile(input) {\r\n    var p = new nearley.Parser(ts_parser_1.grammar.ParserRules, ts_parser_1.grammar.ParserStart);\r\n    p.feed(new Lexer_1.default(input).readTokens());\r\n    var res = p.results;\r\n    var parse = res[0];\r\n    return new BibFilePresenter(exports.parseBibEntriesAndNonEntries(parse));\r\n}\r\nexports.parseBibFile = parseBibFile;\r\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction newToken(type, string) {\r\n    return {\r\n        type: type,\r\n        string: string\r\n    };\r\n}\r\nexports.newToken = newToken;\r\nexports.specialChars = {\r\n    \"@\": true,\r\n    \"(\": true,\r\n    \")\": true,\r\n    \"{\": true,\r\n    \"}\": true,\r\n    \"#\": true,\r\n    \"=\": true,\r\n    \",\": true,\r\n    \"\\\\\": true,\r\n    \"\\\"\": true,\r\n};\r\nfunction isSpecialChar(c) {\r\n    return exports.specialChars.hasOwnProperty(c);\r\n}\r\nexports.isSpecialChar = isSpecialChar;\r\nexports.escapableChars = {\r\n    \"\\\\\": true,\r\n    \"@\": true,\r\n    \"{\": true,\r\n    \"}\": true\r\n};\r\nfunction isEscapableChar(c) {\r\n    return exports.escapableChars.hasOwnProperty(c);\r\n}\r\nexports.isEscapableChar = isEscapableChar;\r\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.WS = \"ws\";\r\nfunction newWhitespace(string) {\r\n    return {\r\n        type: \"ws\",\r\n        string: string\r\n    };\r\n}\r\nexports.newWhitespace = newWhitespace;\r\nfunction isWhitespace(token) {\r\n    return typeof token.string === \"string\" && token.type === exports.WS;\r\n}\r\nexports.isWhitespace = isWhitespace;\r\nexports.singleWhitespaces = {\r\n    \" \": true,\r\n    \"\\t\": true,\r\n    \"\\r\": true,\r\n    \"\\n\": true\r\n};\r\nfunction isSingleWhiteSpaceCharacter(c) {\r\n    return exports.singleWhitespaces.hasOwnProperty(c);\r\n}\r\nexports.isSingleWhiteSpaceCharacter = isSingleWhiteSpaceCharacter;\r\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction newNumber(string) {\r\n    return {\r\n        type: \"number\",\r\n        string: string\r\n    };\r\n}\r\nexports.newNumber = newNumber;\r\nexports.numericChars = {\r\n    \"0\": true,\r\n    \"1\": true,\r\n    \"2\": true,\r\n    \"3\": true,\r\n    \"4\": true,\r\n    \"5\": true,\r\n    \"6\": true,\r\n    \"7\": true,\r\n    \"8\": true,\r\n    \"9\": true\r\n};\r\nfunction isNum(c) {\r\n    return exports.numericChars.hasOwnProperty(c);\r\n}\r\nexports.isNum = isNum;\r\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__export(__webpack_require__(8));\r\n__export(__webpack_require__(9));\r\n__export(__webpack_require__(18));\r\n__export(__webpack_require__(10));\r\n__export(__webpack_require__(11));\r\n__export(__webpack_require__(12));\r\n__export(__webpack_require__(7));\r\n__export(__webpack_require__(3));\r\n__export(__webpack_require__(4));\r\n__export(__webpack_require__(2));\r\n__export(__webpack_require__(1));\r\n__export(__webpack_require__(5));\r\n__export(__webpack_require__(6));\r\n__export(__webpack_require__(13));\r\n__export(__webpack_require__(0));\r\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar util_1 = __webpack_require__(0);\r\nexports.address = \"address\";\r\nexports.author = \"author\";\r\nexports.booktitle = \"booktitle\";\r\nexports.chapter = \"chapter\";\r\nexports.edition = \"edition\";\r\nexports.editor = \"editor\";\r\nexports.howpublished = \"howpublished\";\r\nexports.institution = \"institution\";\r\nexports.journal = \"journal\";\r\nexports.month = \"month\";\r\nexports.note = \"note\";\r\nexports.number = \"number\";\r\nexports.organization = \"organization\";\r\nexports.pages = \"pages\";\r\nexports.publisher = \"publisher\";\r\nexports.school = \"school\";\r\nexports.series = \"series\";\r\nexports.title = \"title\";\r\nexports.type = \"type\";\r\nexports.volume = \"volume\";\r\nexports.year = \"year\";\r\nexports.optionalFields = {\r\n    \"book\": [[\"volume\", \"number\"], \"series\", \"address\", \"edition\", \"month\", \"note\"],\r\n    \"booklet\": [\"author\", \"howpublished\", \"address\", \"address\", \"month\", \"year\", \"note\"],\r\n    \"conference\": [\"editor\", [\"volume\", \"number\"], \"series\", \"pages\", \"address\", \"month\", \"organization\", \"publisher\", \"note\"],\r\n    \"inproceedings\": [\"editor\", [\"volume\", \"number\"], exports.series, \"pages\", \"address\", \"month\", \"organization\", \"publisher\", \"note\"],\r\n    \"inbook\": [\"volume\", \"number\", \"series\", \"type\", \"address\", \"edition\", \"month\", \"note\"],\r\n    \"incollection\": [\"editor\", [\"volume\", \"number\"], \"series\", \"type\", \"chapter\", \"pages\", \"address\", \"edition\", \"month\", \"note\"],\r\n    \"manual\": [\"author\", \"organization\", \"year\", \"address\", \"edition\", \"month\", \"note\"],\r\n    \"mastersthesis\": [\"type\", \"address\", \"month\", \"note\"],\r\n    \"misc\": [],\r\n    \"phdthesis\": [\"type\", \"address\", \"month\", \"note\"],\r\n    \"proceedings\": [\"editor\", [\"volume\", \"number\"], \"series\", \"address\", \"month\", \"organization\", \"publisher\", \"note\"],\r\n    \"techreport\": [\"type\", \"address\", \"number\", \"month\", \"note\"],\r\n    \"unpublished\": [\"month\", \"year\"]\r\n};\r\nexports.mandatoryFields = {\r\n    \"article\": [\"author\", \"title\", \"year\", \"journal\"],\r\n    \"book\": [[\"author\", \"editor\"], \"title\", \"publisher\", \"year\"],\r\n    \"booklet\": [\"title\"],\r\n    \"conference\": [\"author\", \"title\", \"booktitle\", \"year\"],\r\n    \"inproceedings\": [\"author\", \"title\", \"booktitle\", \"year\"],\r\n    \"inbook\": [[\"author\", \"editor\"], \"title\", [\"chapter\", \"pages\"]],\r\n    \"incollection\": [\"author\", \"title\", \"booktitle\", \"publisher\", \"year\"],\r\n    \"manual\": [\"title\"],\r\n    \"mastersthesis\": [\"author\", \"title\", \"school\", \"year\"],\r\n    \"misc\": [[\"author\", \"title\", \"howpublished\", \"year\", \"month\", \"note\"]],\r\n    \"phdthesis\": [\"author\", \"title\", \"school\", \"year\"],\r\n    \"proceedings\": [\"year\", \"title\"],\r\n    \"techreport\": [\"author\", \"title\", \"institution\", \"year\"],\r\n    \"unpublished\": [\"author\", \"title\", \"note\"]\r\n};\r\nfunction hasOptionalFields(s) {\r\n    return exports.optionalFields.hasOwnProperty(s);\r\n}\r\nexports.hasOptionalFields = hasOptionalFields;\r\nfunction hasMandatoryFields(s) {\r\n    return exports.mandatoryFields.hasOwnProperty(s);\r\n}\r\nexports.hasMandatoryFields = hasMandatoryFields;\r\nfunction getMandatoryFields(s) {\r\n    if (hasMandatoryFields(s)) {\r\n        return exports.mandatoryFields[s];\r\n    }\r\n    else {\r\n        return [];\r\n    }\r\n}\r\nexports.getMandatoryFields = getMandatoryFields;\r\nfunction getOptionalFields(s) {\r\n    if (hasOptionalFields(s)) {\r\n        return exports.optionalFields[s];\r\n    }\r\n    else {\r\n        return [];\r\n    }\r\n}\r\nexports.getOptionalFields = getOptionalFields;\r\nexports.findError = function (entry, field) {\r\n    var fields = entry.fields;\r\n    if (util_1.isString(field)) {\r\n        if (!fields[field])\r\n            return new Error(\"Warning: expected \" + entry.type + \" with id \" + entry._id\r\n                + \" to have the field: \" + field);\r\n    }\r\n    else if (util_1.isArray(field)) {\r\n        var hasAllFields = field.reduce(function (acc, fieldName) {\r\n            if (util_1.isString(fieldName)) {\r\n                return (acc && fields.hasOwnProperty(fieldName));\r\n            }\r\n            else\r\n                throw new Error();\r\n        }, true);\r\n        if (!hasAllFields) {\r\n            return new Error(\"Expected \" + entry.type + \" with id \" + entry._id\r\n                + \" to have one of the following fields: \" + field);\r\n        }\r\n    }\r\n};\r\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports) {\n\n(function(root, factory) {\n    if (typeof module === 'object' && module.exports) {\n        module.exports = factory();\n    } else {\n        root.nearley = factory();\n    }\n}(this, function() {\n\nfunction Rule(name, symbols, postprocess) {\n    this.id = ++Rule.highestId;\n    this.name = name;\n    this.symbols = symbols;        // a list of literal | regex class | nonterminal\n    this.postprocess = postprocess;\n    return this;\n}\nRule.highestId = 0;\n\nRule.prototype.toString = function(withCursorAt) {\n    function stringifySymbolSequence (e) {\n        return e.literal ? JSON.stringify(e.literal) :\n               e.type ? '%' + e.type : e.toString();\n    }\n    var symbolSequence = (typeof withCursorAt === \"undefined\")\n                         ? this.symbols.map(stringifySymbolSequence).join(' ')\n                         : (   this.symbols.slice(0, withCursorAt).map(stringifySymbolSequence).join(' ')\n                             + \" ● \"\n                             + this.symbols.slice(withCursorAt).map(stringifySymbolSequence).join(' ')     );\n    return this.name + \" → \" + symbolSequence;\n}\n\n\n// a State is a rule at a position from a given starting point in the input stream (reference)\nfunction State(rule, dot, reference, wantedBy) {\n    this.rule = rule;\n    this.dot = dot;\n    this.reference = reference;\n    this.data = [];\n    this.wantedBy = wantedBy;\n    this.isComplete = this.dot === rule.symbols.length;\n}\n\nState.prototype.toString = function() {\n    return \"{\" + this.rule.toString(this.dot) + \"}, from: \" + (this.reference || 0);\n};\n\nState.prototype.nextState = function(child) {\n    var state = new State(this.rule, this.dot + 1, this.reference, this.wantedBy);\n    state.left = this;\n    state.right = child;\n    if (state.isComplete) {\n        state.data = state.build();\n    }\n    return state;\n};\n\nState.prototype.build = function() {\n    var children = [];\n    var node = this;\n    do {\n        children.push(node.right.data);\n        node = node.left;\n    } while (node.left);\n    children.reverse();\n    return children;\n};\n\nState.prototype.finish = function() {\n    if (this.rule.postprocess) {\n        this.data = this.rule.postprocess(this.data, this.reference, Parser.fail);\n    }\n};\n\n\nfunction Column(grammar, index) {\n    this.grammar = grammar;\n    this.index = index;\n    this.states = [];\n    this.wants = {}; // states indexed by the non-terminal they expect\n    this.scannable = []; // list of states that expect a token\n    this.completed = {}; // states that are nullable\n}\n\n\nColumn.prototype.process = function(nextColumn) {\n    var states = this.states;\n    var wants = this.wants;\n    var completed = this.completed;\n\n    for (var w = 0; w < states.length; w++) { // nb. we push() during iteration\n        var state = states[w];\n\n        if (state.isComplete) {\n            state.finish();\n            if (state.data !== Parser.fail) {\n                // complete\n                var wantedBy = state.wantedBy;\n                for (var i = wantedBy.length; i--; ) { // this line is hot\n                    var left = wantedBy[i];\n                    this.complete(left, state);\n                }\n\n                // special-case nullables\n                if (state.reference === this.index) {\n                    // make sure future predictors of this rule get completed.\n                    var exp = state.rule.name;\n                    (this.completed[exp] = this.completed[exp] || []).push(state);\n                }\n            }\n\n        } else {\n            // queue scannable states\n            var exp = state.rule.symbols[state.dot];\n            if (typeof exp !== 'string') {\n                this.scannable.push(state);\n                continue;\n            }\n\n            // predict\n            if (wants[exp]) {\n                wants[exp].push(state);\n\n                if (completed.hasOwnProperty(exp)) {\n                    var nulls = completed[exp];\n                    for (var i = 0; i < nulls.length; i++) {\n                        var right = nulls[i];\n                        this.complete(state, right);\n                    }\n                }\n            } else {\n                wants[exp] = [state];\n                this.predict(exp);\n            }\n        }\n    }\n}\n\nColumn.prototype.predict = function(exp) {\n    var rules = this.grammar.byName[exp] || [];\n\n    for (var i = 0; i < rules.length; i++) {\n        var r = rules[i];\n        var wantedBy = this.wants[exp];\n        var s = new State(r, 0, this.index, wantedBy);\n        this.states.push(s);\n    }\n}\n\nColumn.prototype.complete = function(left, right) {\n    var inp = right.rule.name;\n    if (left.rule.symbols[left.dot] === inp) {\n        var copy = left.nextState(right);\n        this.states.push(copy);\n    }\n}\n\n\nfunction Grammar(rules, start) {\n    this.rules = rules;\n    this.start = start || this.rules[0].name;\n    var byName = this.byName = {};\n    this.rules.forEach(function(rule) {\n        if (!byName.hasOwnProperty(rule.name)) {\n            byName[rule.name] = [];\n        }\n        byName[rule.name].push(rule);\n    });\n}\n\n// So we can allow passing (rules, start) directly to Parser for backwards compatibility\nGrammar.fromCompiled = function(rules, start) {\n    var lexer = rules.Lexer;\n    if (rules.ParserStart) {\n      start = rules.ParserStart;\n      rules = rules.ParserRules;\n    }\n    var rules = rules.map(function (r) { return (new Rule(r.name, r.symbols, r.postprocess)); });\n    var g = new Grammar(rules, start);\n    g.lexer = lexer; // nb. storing lexer on Grammar is iffy, but unavoidable\n    return g;\n}\n\n\nfunction StreamLexer() {\n  this.reset(\"\");\n}\n\nStreamLexer.prototype.reset = function(data, state) {\n    this.buffer = data;\n    this.index = 0;\n    this.line = state ? state.line : 1;\n    this.lastLineBreak = state ? -state.col : 0;\n}\n\nStreamLexer.prototype.next = function() {\n    if (this.index < this.buffer.length) {\n        var ch = this.buffer[this.index++];\n        if (ch === '\\n') {\n          this.line += 1;\n          this.lastLineBreak = this.index;\n        }\n        return {value: ch};\n    }\n}\n\nStreamLexer.prototype.save = function() {\n  return {\n    line: this.line,\n    col: this.index - this.lastLineBreak,\n  }\n}\n\nStreamLexer.prototype.formatError = function(token, message) {\n    // nb. this gets called after consuming the offending token,\n    // so the culprit is index-1\n    var buffer = this.buffer;\n    if (typeof buffer === 'string') {\n        var nextLineBreak = buffer.indexOf('\\n', this.index);\n        if (nextLineBreak === -1) nextLineBreak = buffer.length;\n        var line = buffer.substring(this.lastLineBreak, nextLineBreak)\n        var col = this.index - this.lastLineBreak;\n        message += \" at line \" + this.line + \" col \" + col + \":\\n\\n\";\n        message += \"  \" + line + \"\\n\"\n        message += \"  \" + Array(col).join(\" \") + \"^\"\n        return message;\n    } else {\n        return message + \" at index \" + (this.index - 1);\n    }\n}\n\n\nfunction Parser(rules, start, options) {\n    if (rules instanceof Grammar) {\n        var grammar = rules;\n        var options = start;\n    } else {\n        var grammar = Grammar.fromCompiled(rules, start);\n    }\n    this.grammar = grammar;\n\n    // Read options\n    this.options = {\n        keepHistory: false,\n        lexer: grammar.lexer || new StreamLexer,\n    };\n    for (var key in (options || {})) {\n        this.options[key] = options[key];\n    }\n\n    // Setup lexer\n    this.lexer = this.options.lexer;\n    this.lexerState = undefined;\n\n    // Setup a table\n    var column = new Column(grammar, 0);\n    var table = this.table = [column];\n\n    // I could be expecting anything.\n    column.wants[grammar.start] = [];\n    column.predict(grammar.start);\n    // TODO what if start rule is nullable?\n    column.process();\n    this.current = 0; // token index\n}\n\n// create a reserved token for indicating a parse fail\nParser.fail = {};\n\nParser.prototype.feed = function(chunk) {\n    var lexer = this.lexer;\n    lexer.reset(chunk, this.lexerState);\n\n    var token;\n    while (token = lexer.next()) {\n        // We add new states to table[current+1]\n        var column = this.table[this.current];\n\n        // GC unused states\n        if (!this.options.keepHistory) {\n            delete this.table[this.current - 1];\n        }\n\n        var n = this.current + 1;\n        var nextColumn = new Column(this.grammar, n);\n        this.table.push(nextColumn);\n\n        // Advance all tokens that expect the symbol\n        var literal = token.value;\n        var value = lexer.constructor === StreamLexer ? token.value : token;\n        var scannable = column.scannable;\n        for (var w = scannable.length; w--; ) {\n            var state = scannable[w];\n            var expect = state.rule.symbols[state.dot];\n            // Try to consume the token\n            // either regex or literal\n            if (expect.test ? expect.test(value) :\n                expect.type ? expect.type === token.type\n                            : expect.literal === literal) {\n                // Add it\n                var next = state.nextState({data: value, token: token, isToken: true, reference: n - 1});\n                nextColumn.states.push(next);\n            }\n        }\n\n        // Next, for each of the rules, we either\n        // (a) complete it, and try to see if the reference row expected that\n        //     rule\n        // (b) predict the next nonterminal it expects by adding that\n        //     nonterminal's start state\n        // To prevent duplication, we also keep track of rules we have already\n        // added\n\n        nextColumn.process();\n\n        // If needed, throw an error:\n        if (nextColumn.states.length === 0) {\n            // No states at all! This is not good.\n            var message = this.lexer.formatError(token, \"invalid syntax\") + \"\\n\";\n            message += \"Unexpected \" + (token.type ? token.type + \" token: \" : \"\");\n            message += JSON.stringify(token.value !== undefined ? token.value : token) + \"\\n\";\n            var err = new Error(message);\n            err.offset = this.current;\n            err.token = token;\n            throw err;\n        }\n\n        // maybe save lexer state\n        if (this.options.keepHistory) {\n          column.lexerState = lexer.save()\n        }\n\n        this.current++;\n    }\n    if (column) {\n      this.lexerState = lexer.save()\n    }\n\n    // Incrementally keep track of results\n    this.results = this.finish();\n\n    // Allow chaining, for whatever it's worth\n    return this;\n};\n\nParser.prototype.save = function() {\n    var column = this.table[this.current];\n    column.lexerState = this.lexerState;\n    return column;\n};\n\nParser.prototype.restore = function(column) {\n    var index = column.index;\n    this.current = index;\n    this.table[index] = column;\n    this.table.splice(index + 1);\n    this.lexerState = column.lexerState;\n\n    // Incrementally keep track of results\n    this.results = this.finish();\n};\n\n// nb. deprecated: use save/restore instead!\nParser.prototype.rewind = function(index) {\n    if (!this.options.keepHistory) {\n        throw new Error('set option `keepHistory` to enable rewinding')\n    }\n    // nb. recall column (table) indicies fall between token indicies.\n    //        col 0   --   token 0   --   col 1\n    this.restore(this.table[index]);\n};\n\nParser.prototype.finish = function() {\n    // Return the possible parsings\n    var considerations = [];\n    var start = this.grammar.start;\n    var column = this.table[this.table.length - 1]\n    column.states.forEach(function (t) {\n        if (t.rule.name === start\n                && t.dot === t.rule.symbols.length\n                && t.reference === 0\n                && t.data !== Parser.fail) {\n            considerations.push(t);\n        }\n    });\n    return considerations.map(function(c) {return c.data; });\n};\n\nreturn {\n    Parser: Parser,\n    Grammar: Grammar,\n    Rule: Rule,\n};\n\n}));\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction id(x) {\r\n    return x[0];\r\n}\r\nvar isNumber = function (x) {\r\n    return x.constructor === Number || (typeof x === \"object\" && x.type === \"number\");\r\n};\r\nvar tok_id = {\r\n    test: function (x) {\r\n        return typeof x === \"object\" && x.type === \"id\";\r\n    }\r\n};\r\nvar entry_type_bib = {\r\n    test: function (x) {\r\n        return typeof x === \"object\" && x.type === \"@bib\";\r\n    }\r\n};\r\nvar entry_type_string = {\r\n    test: function (x) {\r\n        return typeof x === \"object\" && x.type === \"@string\";\r\n    }\r\n};\r\nvar entry_type_preamble = {\r\n    test: function (x) {\r\n        return typeof x === \"object\" && x.type === \"@preamble\";\r\n    }\r\n};\r\nvar entry_type_comment = {\r\n    test: function (x) {\r\n        return typeof x === \"object\" && x.type === \"@comment\";\r\n    }\r\n};\r\nvar ws = {\r\n    test: function (x) {\r\n        return typeof x === \"object\" && x.type === \"ws\";\r\n    }\r\n};\r\nvar num = { test: isNumber };\r\nvar pound = { literal: \"#\" };\r\nvar eq = { literal: \"=\" };\r\nvar esc = { literal: \"\\\\\" };\r\nvar paren_l = { literal: \"(\" };\r\nvar paren_r = { literal: \")\" };\r\nvar brace_l = { literal: \"{\" };\r\nvar brace_r = { literal: \"}\" };\r\nvar quote_dbl = { literal: \"\\\"\" };\r\nvar comma = { literal: \",\" };\r\nfunction addToObj(obj, keyval) {\r\n    if (keyval.type !== \"keyval\")\r\n        throw new Error(\"Expected a keyval object\");\r\n    var key = keyval.key.toLowerCase();\r\n    if (obj.fields[key]) {\r\n        return;\r\n    }\r\n    else {\r\n        obj.fields[key] = keyval.value;\r\n        return obj;\r\n    }\r\n}\r\nfunction joinTokens(arr) {\r\n    var strs = [];\r\n    for (var i = 0; i < arr.length; i++) {\r\n        if (typeof arr[i] === \"object\") {\r\n            if (!arr[i].string)\r\n                throw new Error(\"Expected token to have a string field called 'string' in object \" + JSON.stringify(arr[i]));\r\n            strs.push(arr[i].string);\r\n        }\r\n        else if (typeof arr[i] === \"string\" || typeof arr[i] === \"number\") {\r\n            strs.push(arr[i]);\r\n        }\r\n        else\r\n            throw new Error(\"Could not handle token \" + JSON.stringify(arr[i]) + \" in array \" + JSON.stringify(arr));\r\n    }\r\n    return strs.join(\"\");\r\n}\r\nexports.grammar = {\r\n    Lexer: undefined,\r\n    ParserRules: [\r\n        { \"name\": \"main$ebnf$1\", \"symbols\": [\"non_entry\"], \"postprocess\": id },\r\n        {\r\n            \"name\": \"main$ebnf$1\", \"symbols\": [], \"postprocess\": function () {\r\n                return undefined;\r\n            }\r\n        },\r\n        { \"name\": \"main$ebnf$2\", \"symbols\": [] },\r\n        { \"name\": \"main$ebnf$2$subexpression$1$ebnf$1\", \"symbols\": [\"non_entry\"], \"postprocess\": id },\r\n        {\r\n            \"name\": \"main$ebnf$2$subexpression$1$ebnf$1\", \"symbols\": [], \"postprocess\": function () {\r\n                return undefined;\r\n            }\r\n        },\r\n        { \"name\": \"main$ebnf$2$subexpression$1\", \"symbols\": [\"entry\", \"main$ebnf$2$subexpression$1$ebnf$1\"] },\r\n        {\r\n            \"name\": \"main$ebnf$2\",\r\n            \"symbols\": [\"main$ebnf$2\", \"main$ebnf$2$subexpression$1\"],\r\n            \"postprocess\": function arrpush(d) {\r\n                return d[0].concat([d[1]]);\r\n            }\r\n        },\r\n        {\r\n            \"name\": \"main\",\r\n            \"symbols\": [\"main$ebnf$1\", \"main$ebnf$2\"],\r\n            \"postprocess\": function (data) {\r\n                var topLevelObjects = [];\r\n                if (data[0])\r\n                    topLevelObjects.push({ type: \"NON_ENTRY\", data: data[0] });\r\n                for (var i = 0; i < data[1].length; i++) {\r\n                    topLevelObjects.push({ type: \"ENTRY\", data: data[1][i][0] });\r\n                    if (data[1][i][1])\r\n                        topLevelObjects.push({ type: \"NON_ENTRY\", data: data[1][i][1] });\r\n                }\r\n                return topLevelObjects;\r\n            }\r\n        },\r\n        { \"name\": \"_$ebnf$1\", \"symbols\": [] },\r\n        {\r\n            \"name\": \"_$ebnf$1\", \"symbols\": [\"_$ebnf$1\", ws], \"postprocess\": function arrpush(d) {\r\n                return d[0].concat([d[1]]);\r\n            }\r\n        },\r\n        { \"name\": \"_\", \"symbols\": [\"_$ebnf$1\"] },\r\n        { \"name\": \"entry_decl$subexpression$1\", \"symbols\": [entry_type_bib] },\r\n        { \"name\": \"entry_decl$subexpression$1\", \"symbols\": [entry_type_string] },\r\n        { \"name\": \"entry_decl$subexpression$1\", \"symbols\": [entry_type_preamble] },\r\n        { \"name\": \"entry_decl$subexpression$1\", \"symbols\": [entry_type_comment] },\r\n        {\r\n            \"name\": \"entry_decl\",\r\n            \"symbols\": [\"entry_decl$subexpression$1\"],\r\n            \"postprocess\": function (data) {\r\n                return data[0][0];\r\n            }\r\n        },\r\n        { \"name\": \"entry$subexpression$1\", \"symbols\": [\"bib_entry\"] },\r\n        { \"name\": \"entry$subexpression$1\", \"symbols\": [\"string_entry\"] },\r\n        { \"name\": \"entry$subexpression$1\", \"symbols\": [\"preamble_entry\"] },\r\n        { \"name\": \"entry$subexpression$1\", \"symbols\": [\"comment_entry\"] },\r\n        {\r\n            \"name\": \"entry\", \"symbols\": [\"entry$subexpression$1\"], \"postprocess\": function (data) {\r\n                return data[0][0];\r\n            }\r\n        },\r\n        {\r\n            \"name\": \"comment\", \"symbols\": [\"main\"], \"postprocess\": function (data) {\r\n                return data[0];\r\n            }\r\n        },\r\n        { \"name\": \"comment_liberal$ebnf$1\", \"symbols\": [] },\r\n        { \"name\": \"comment_liberal$ebnf$1$subexpression$1\", \"symbols\": [/./] },\r\n        {\r\n            \"name\": \"comment_liberal$ebnf$1\",\r\n            \"symbols\": [\"comment_liberal$ebnf$1\", \"comment_liberal$ebnf$1$subexpression$1\"],\r\n            \"postprocess\": function arrpush(d) {\r\n                return d[0].concat([d[1]]);\r\n            }\r\n        },\r\n        {\r\n            \"name\": \"comment_liberal\",\r\n            \"symbols\": [\"comment_liberal$ebnf$1\"],\r\n            \"postprocess\": function (data) {\r\n                var toeknz = [];\r\n                for (var tk = 0; tk < data[0].length; tk++)\r\n                    toeknz.push(data[0][tk][0]);\r\n                return toeknz;\r\n            }\r\n        },\r\n        { \"name\": \"entry_body_comment$subexpression$1$macrocall$2\", \"symbols\": [\"comment\"] },\r\n        {\r\n            \"name\": \"entry_body_comment$subexpression$1$macrocall$1\",\r\n            \"symbols\": [paren_l, \"entry_body_comment$subexpression$1$macrocall$2\", paren_r],\r\n            \"postprocess\": function (data) {\r\n                return data[1];\r\n            }\r\n        },\r\n        { \"name\": \"entry_body_comment$subexpression$1\", \"symbols\": [\"entry_body_comment$subexpression$1$macrocall$1\"] },\r\n        { \"name\": \"entry_body_comment$subexpression$1$macrocall$4\", \"symbols\": [\"comment\"] },\r\n        {\r\n            \"name\": \"entry_body_comment$subexpression$1$macrocall$3\",\r\n            \"symbols\": [brace_l, \"entry_body_comment$subexpression$1$macrocall$4\", brace_r],\r\n            \"postprocess\": function (data) {\r\n                return data[1];\r\n            }\r\n        },\r\n        { \"name\": \"entry_body_comment$subexpression$1\", \"symbols\": [\"entry_body_comment$subexpression$1$macrocall$3\"] },\r\n        {\r\n            \"name\": \"entry_body_comment\",\r\n            \"symbols\": [\"entry_body_comment$subexpression$1\"],\r\n            \"postprocess\": function (data) {\r\n                return data[0][0][0];\r\n            }\r\n        },\r\n        { \"name\": \"entry_body_string$subexpression$1$macrocall$2\", \"symbols\": [\"keyval\"] },\r\n        {\r\n            \"name\": \"entry_body_string$subexpression$1$macrocall$1\",\r\n            \"symbols\": [paren_l, \"_\", \"entry_body_string$subexpression$1$macrocall$2\", \"_\", paren_r],\r\n            \"postprocess\": function (data) {\r\n                return data[2];\r\n            }\r\n        },\r\n        { \"name\": \"entry_body_string$subexpression$1\", \"symbols\": [\"entry_body_string$subexpression$1$macrocall$1\"] },\r\n        { \"name\": \"entry_body_string$subexpression$1$macrocall$4\", \"symbols\": [\"keyval\"] },\r\n        {\r\n            \"name\": \"entry_body_string$subexpression$1$macrocall$3\",\r\n            \"symbols\": [brace_l, \"_\", \"entry_body_string$subexpression$1$macrocall$4\", \"_\", brace_r],\r\n            \"postprocess\": function (data) {\r\n                return data[2];\r\n            }\r\n        },\r\n        { \"name\": \"entry_body_string$subexpression$1\", \"symbols\": [\"entry_body_string$subexpression$1$macrocall$3\"] },\r\n        {\r\n            \"name\": \"entry_body_string\",\r\n            \"symbols\": [\"entry_body_string$subexpression$1\"],\r\n            \"postprocess\": function (data) {\r\n                return data[0][0][0];\r\n            }\r\n        },\r\n        { \"name\": \"entry_body_bib$subexpression$1$macrocall$2\", \"symbols\": [\"bib_content\"] },\r\n        {\r\n            \"name\": \"entry_body_bib$subexpression$1$macrocall$1\",\r\n            \"symbols\": [paren_l, \"_\", \"entry_body_bib$subexpression$1$macrocall$2\", \"_\", paren_r],\r\n            \"postprocess\": function (data) {\r\n                return data[2];\r\n            }\r\n        },\r\n        { \"name\": \"entry_body_bib$subexpression$1\", \"symbols\": [\"entry_body_bib$subexpression$1$macrocall$1\"] },\r\n        { \"name\": \"entry_body_bib$subexpression$1$macrocall$4\", \"symbols\": [\"bib_content\"] },\r\n        {\r\n            \"name\": \"entry_body_bib$subexpression$1$macrocall$3\",\r\n            \"symbols\": [brace_l, \"_\", \"entry_body_bib$subexpression$1$macrocall$4\", \"_\", brace_r],\r\n            \"postprocess\": function (data) {\r\n                return data[2];\r\n            }\r\n        },\r\n        { \"name\": \"entry_body_bib$subexpression$1\", \"symbols\": [\"entry_body_bib$subexpression$1$macrocall$3\"] },\r\n        {\r\n            \"name\": \"entry_body_bib\",\r\n            \"symbols\": [\"entry_body_bib$subexpression$1\"],\r\n            \"postprocess\": function (data) {\r\n                return data[0][0][0];\r\n            }\r\n        },\r\n        { \"name\": \"bib_content$ebnf$1\", \"symbols\": [] },\r\n        { \"name\": \"bib_content$ebnf$1$subexpression$1\", \"symbols\": [\"keyval\", \"_\", comma, \"_\"] },\r\n        {\r\n            \"name\": \"bib_content$ebnf$1\",\r\n            \"symbols\": [\"bib_content$ebnf$1\", \"bib_content$ebnf$1$subexpression$1\"],\r\n            \"postprocess\": function arrpush(d) {\r\n                return d[0].concat([d[1]]);\r\n            }\r\n        },\r\n        { \"name\": \"bib_content$ebnf$2$subexpression$1\", \"symbols\": [\"_\", comma] },\r\n        { \"name\": \"bib_content$ebnf$2\", \"symbols\": [\"bib_content$ebnf$2$subexpression$1\"], \"postprocess\": id },\r\n        {\r\n            \"name\": \"bib_content$ebnf$2\", \"symbols\": [], \"postprocess\": function () {\r\n                return undefined;\r\n            }\r\n        },\r\n        {\r\n            \"name\": \"bib_content\",\r\n            \"symbols\": [\"key_string\", \"_\", comma, \"_\", \"bib_content$ebnf$1\", \"keyval\", \"bib_content$ebnf$2\"],\r\n            \"postprocess\": function (data) {\r\n                var obj = {\r\n                    _id: data[0],\r\n                    fields: []\r\n                };\r\n                var keyvals = data[4];\r\n                for (var kv = 0; kv < keyvals.length; kv++) {\r\n                    obj.fields.push(keyvals[kv][0]);\r\n                }\r\n                obj.fields.push(data[5]);\r\n                return obj;\r\n            }\r\n        },\r\n        {\r\n            \"name\": \"bib_entry\",\r\n            \"symbols\": [entry_type_bib, \"_\", \"entry_body_bib\"],\r\n            \"postprocess\": function (data) {\r\n                var obj = {\r\n                    _id: data[2]._id\r\n                };\r\n                obj[\"@type\"] = data[0].string;\r\n                obj.fields = {};\r\n                var keyvals = data[2].fields;\r\n                for (var kv = 0; kv < keyvals.length; kv++) {\r\n                    addToObj(obj, keyvals[kv]);\r\n                }\r\n                return obj;\r\n            }\r\n        },\r\n        {\r\n            \"name\": \"string_entry\",\r\n            \"symbols\": [entry_type_string, \"_\", \"entry_body_string\"],\r\n            \"postprocess\": function (data) {\r\n                return { type: \"string\", data: data[2] };\r\n            }\r\n        },\r\n        {\r\n            \"name\": \"preamble_entry\",\r\n            \"symbols\": [entry_type_preamble, \"_\", \"entry_body_comment\"],\r\n            \"postprocess\": function (data) {\r\n                return { type: \"preamble\", data: data[2] };\r\n            }\r\n        },\r\n        {\r\n            \"name\": \"comment_entry\",\r\n            \"symbols\": [entry_type_comment, \"_\", \"entry_body_comment\"],\r\n            \"postprocess\": function (data) {\r\n                return { type: \"comment\", data: data[2] };\r\n            }\r\n        },\r\n        {\r\n            \"name\": \"keyval\",\r\n            \"symbols\": [\"key_string\", \"_\", eq, \"_\", \"value_string\"],\r\n            \"postprocess\": function (data) {\r\n                return { type: \"keyval\", key: data[0], value: data[4] };\r\n            }\r\n        },\r\n        { \"name\": \"braced_string$ebnf$1\", \"symbols\": [] },\r\n        { \"name\": \"braced_string$ebnf$1$subexpression$1\", \"symbols\": [\"non_brace\"] },\r\n        { \"name\": \"braced_string$ebnf$1$subexpression$1\", \"symbols\": [\"braced_string\"] },\r\n        {\r\n            \"name\": \"braced_string$ebnf$1\",\r\n            \"symbols\": [\"braced_string$ebnf$1\", \"braced_string$ebnf$1$subexpression$1\"],\r\n            \"postprocess\": function arrpush(d) {\r\n                return d[0].concat([d[1]]);\r\n            }\r\n        },\r\n        {\r\n            \"name\": \"braced_string\",\r\n            \"symbols\": [brace_l, \"braced_string$ebnf$1\", brace_r],\r\n            \"postprocess\": function (data) {\r\n                var tkz = [];\r\n                for (var i in data[1])\r\n                    tkz.push(data[1][i][0]);\r\n                return { type: \"braced\", data: tkz };\r\n            }\r\n        },\r\n        { \"name\": \"quoted_string$ebnf$1\", \"symbols\": [] },\r\n        { \"name\": \"quoted_string$ebnf$1$subexpression$1\", \"symbols\": [\"escaped_quote\"] },\r\n        { \"name\": \"quoted_string$ebnf$1$subexpression$1\", \"symbols\": [\"non_quote_non_brace\"] },\r\n        { \"name\": \"quoted_string$ebnf$1$subexpression$1\", \"symbols\": [\"braced_string\"] },\r\n        {\r\n            \"name\": \"quoted_string$ebnf$1\",\r\n            \"symbols\": [\"quoted_string$ebnf$1\", \"quoted_string$ebnf$1$subexpression$1\"],\r\n            \"postprocess\": function arrpush(d) {\r\n                return d[0].concat([d[1]]);\r\n            }\r\n        },\r\n        {\r\n            \"name\": \"quoted_string\",\r\n            \"symbols\": [quote_dbl, \"quoted_string$ebnf$1\", quote_dbl],\r\n            \"postprocess\": function (data) {\r\n                var tks = [];\r\n                for (var i in data[1])\r\n                    tks.push(data[1][i][0]);\r\n                return { type: \"quotedstring\", data: tks };\r\n            }\r\n        },\r\n        { \"name\": \"escaped_quote\", \"symbols\": [esc, quote_dbl] },\r\n        { \"name\": \"non_quote_non_brace$subexpression$1\", \"symbols\": [tok_id] },\r\n        { \"name\": \"non_quote_non_brace$subexpression$1\", \"symbols\": [entry_type_bib] },\r\n        { \"name\": \"non_quote_non_brace$subexpression$1\", \"symbols\": [entry_type_string] },\r\n        { \"name\": \"non_quote_non_brace$subexpression$1\", \"symbols\": [entry_type_preamble] },\r\n        { \"name\": \"non_quote_non_brace$subexpression$1\", \"symbols\": [entry_type_comment] },\r\n        { \"name\": \"non_quote_non_brace$subexpression$1\", \"symbols\": [ws] },\r\n        { \"name\": \"non_quote_non_brace$subexpression$1\", \"symbols\": [num] },\r\n        { \"name\": \"non_quote_non_brace$subexpression$1\", \"symbols\": [pound] },\r\n        { \"name\": \"non_quote_non_brace$subexpression$1\", \"symbols\": [eq] },\r\n        { \"name\": \"non_quote_non_brace$subexpression$1\", \"symbols\": [esc] },\r\n        { \"name\": \"non_quote_non_brace$subexpression$1\", \"symbols\": [paren_l] },\r\n        { \"name\": \"non_quote_non_brace$subexpression$1\", \"symbols\": [paren_r] },\r\n        { \"name\": \"non_quote_non_brace$subexpression$1\", \"symbols\": [comma] },\r\n        { \"name\": \"non_quote_non_brace\", \"symbols\": [\"non_quote_non_brace$subexpression$1\"] },\r\n        { \"name\": \"key_string$ebnf$1\", \"symbols\": [\"stringreftoken\"] },\r\n        {\r\n            \"name\": \"key_string$ebnf$1\",\r\n            \"symbols\": [\"key_string$ebnf$1\", \"stringreftoken\"],\r\n            \"postprocess\": function arrpush(d) {\r\n                return d[0].concat([d[1]]);\r\n            }\r\n        },\r\n        {\r\n            \"name\": \"key_string\", \"symbols\": [\"key_string$ebnf$1\"], \"postprocess\": function (data) {\r\n                return joinTokens(data[0]).toLowerCase();\r\n            }\r\n        },\r\n        { \"name\": \"value_string$subexpression$1$ebnf$1\", \"symbols\": [] },\r\n        {\r\n            \"name\": \"value_string$subexpression$1$ebnf$1$subexpression$1\",\r\n            \"symbols\": [\"_\", pound, \"_\", \"quoted_string_or_ref\"]\r\n        },\r\n        {\r\n            \"name\": \"value_string$subexpression$1$ebnf$1\",\r\n            \"symbols\": [\"value_string$subexpression$1$ebnf$1\", \"value_string$subexpression$1$ebnf$1$subexpression$1\"],\r\n            \"postprocess\": function arrpush(d) {\r\n                return d[0].concat([d[1]]);\r\n            }\r\n        },\r\n        {\r\n            \"name\": \"value_string$subexpression$1\",\r\n            \"symbols\": [\"quoted_string_or_ref\", \"value_string$subexpression$1$ebnf$1\"]\r\n        },\r\n        { \"name\": \"value_string$subexpression$1\", \"symbols\": [\"braced_string\"] },\r\n        {\r\n            \"name\": \"value_string\",\r\n            \"symbols\": [\"value_string$subexpression$1\"],\r\n            \"postprocess\": function (data) {\r\n                var match = data[0];\r\n                if (match.length === 2) {\r\n                    var tokenz = [];\r\n                    tokenz.push(match[0]);\r\n                    for (var i = 0; i < match[1].length; i++)\r\n                        tokenz.push(match[1][i][3]);\r\n                    return { type: \"quotedstringwrapper\", data: tokenz };\r\n                }\r\n                else if (match[0].type === \"braced\")\r\n                    return { type: \"bracedstringwrapper\", data: match[0].data };\r\n                else\r\n                    throw new Error(\"Don't know how to handle value \" + JSON.stringify(match[0]));\r\n            }\r\n        },\r\n        { \"name\": \"quoted_string_or_ref$subexpression$1\", \"symbols\": [\"quoted_string\"] },\r\n        { \"name\": \"quoted_string_or_ref$subexpression$1\", \"symbols\": [\"string_ref\"] },\r\n        { \"name\": \"quoted_string_or_ref$subexpression$1\", \"symbols\": [num] },\r\n        {\r\n            \"name\": \"quoted_string_or_ref\",\r\n            \"symbols\": [\"quoted_string_or_ref$subexpression$1\"],\r\n            \"postprocess\": function (data) {\r\n                if (data[0][0].type === \"quotedstring\")\r\n                    return data[0][0];\r\n                else {\r\n                    return data[0][0];\r\n                }\r\n            }\r\n        },\r\n        { \"name\": \"string_ref$subexpression$1$ebnf$1\", \"symbols\": [] },\r\n        {\r\n            \"name\": \"string_ref$subexpression$1$ebnf$1\",\r\n            \"symbols\": [\"string_ref$subexpression$1$ebnf$1\", \"stringreftoken\"],\r\n            \"postprocess\": function arrpush(d) {\r\n                return d[0].concat([d[1]]);\r\n            }\r\n        },\r\n        {\r\n            \"name\": \"string_ref$subexpression$1\",\r\n            \"symbols\": [\"stringreftoken_n_num\", \"string_ref$subexpression$1$ebnf$1\"]\r\n        },\r\n        {\r\n            \"name\": \"string_ref\",\r\n            \"symbols\": [\"string_ref$subexpression$1\"],\r\n            \"postprocess\": function (data) {\r\n                var str = data[0][0] + joinTokens(data[0][1]);\r\n                return { stringref: str };\r\n            }\r\n        },\r\n        { \"name\": \"stringreftoken$subexpression$1\", \"symbols\": [esc] },\r\n        { \"name\": \"stringreftoken$subexpression$1\", \"symbols\": [paren_l] },\r\n        { \"name\": \"stringreftoken$subexpression$1\", \"symbols\": [paren_r] },\r\n        { \"name\": \"stringreftoken$subexpression$1\", \"symbols\": [tok_id] },\r\n        { \"name\": \"stringreftoken$subexpression$1\", \"symbols\": [num] },\r\n        { \"name\": \"stringreftoken$subexpression$1\", \"symbols\": [entry_type_bib] },\r\n        { \"name\": \"stringreftoken$subexpression$1\", \"symbols\": [entry_type_string] },\r\n        { \"name\": \"stringreftoken$subexpression$1\", \"symbols\": [entry_type_preamble] },\r\n        { \"name\": \"stringreftoken$subexpression$1\", \"symbols\": [entry_type_comment] },\r\n        {\r\n            \"name\": \"stringreftoken\",\r\n            \"symbols\": [\"stringreftoken$subexpression$1\"],\r\n            \"postprocess\": function (data) {\r\n                if (typeof data[0][0] === \"object\") {\r\n                    if (!data[0][0].string)\r\n                        throw new Error(\"Expected \" + data[0] + \"to have a 'string' field\");\r\n                    return data[0][0].string;\r\n                }\r\n                else {\r\n                    if ((!(typeof data[0][0] === \"string\" || typeof data[0][0] === \"number\")))\r\n                        throw new Error(\"Expected \" + data[0][0] + \" to be a string\");\r\n                    return data[0][0];\r\n                }\r\n            }\r\n        },\r\n        { \"name\": \"stringreftoken_n_num$subexpression$1\", \"symbols\": [esc] },\r\n        { \"name\": \"stringreftoken_n_num$subexpression$1\", \"symbols\": [paren_l] },\r\n        { \"name\": \"stringreftoken_n_num$subexpression$1\", \"symbols\": [paren_r] },\r\n        { \"name\": \"stringreftoken_n_num$subexpression$1\", \"symbols\": [tok_id] },\r\n        { \"name\": \"stringreftoken_n_num$subexpression$1\", \"symbols\": [entry_type_bib] },\r\n        { \"name\": \"stringreftoken_n_num$subexpression$1\", \"symbols\": [entry_type_string] },\r\n        { \"name\": \"stringreftoken_n_num$subexpression$1\", \"symbols\": [entry_type_preamble] },\r\n        { \"name\": \"stringreftoken_n_num$subexpression$1\", \"symbols\": [entry_type_comment] },\r\n        {\r\n            \"name\": \"stringreftoken_n_num\",\r\n            \"symbols\": [\"stringreftoken_n_num$subexpression$1\"],\r\n            \"postprocess\": function (data) {\r\n                if (typeof data[0][0] === \"object\") {\r\n                    if (!data[0][0].string)\r\n                        throw new Error(\"Expected \" + data[0] + \"to have a 'string' field\");\r\n                    return data[0][0].string;\r\n                }\r\n                else {\r\n                    if ((!(typeof data[0][0] === \"string\" || typeof data[0][0] === \"number\")))\r\n                        throw new Error(\"Expected \" + data[0][0] + \" to be a string\");\r\n                    return data[0][0];\r\n                }\r\n            }\r\n        },\r\n        { \"name\": \"non_brace$subexpression$1\", \"symbols\": [esc] },\r\n        { \"name\": \"non_brace$subexpression$1\", \"symbols\": [paren_l] },\r\n        { \"name\": \"non_brace$subexpression$1\", \"symbols\": [paren_r] },\r\n        { \"name\": \"non_brace$subexpression$1\", \"symbols\": [tok_id] },\r\n        { \"name\": \"non_brace$subexpression$1\", \"symbols\": [quote_dbl] },\r\n        { \"name\": \"non_brace$subexpression$1\", \"symbols\": [ws] },\r\n        { \"name\": \"non_brace$subexpression$1\", \"symbols\": [num] },\r\n        { \"name\": \"non_brace$subexpression$1\", \"symbols\": [comma] },\r\n        { \"name\": \"non_brace$subexpression$1\", \"symbols\": [entry_type_bib] },\r\n        { \"name\": \"non_brace$subexpression$1\", \"symbols\": [entry_type_string] },\r\n        { \"name\": \"non_brace$subexpression$1\", \"symbols\": [entry_type_preamble] },\r\n        { \"name\": \"non_brace$subexpression$1\", \"symbols\": [entry_type_comment] },\r\n        { \"name\": \"non_brace$subexpression$1\", \"symbols\": [pound] },\r\n        { \"name\": \"non_brace$subexpression$1\", \"symbols\": [eq] },\r\n        {\r\n            \"name\": \"non_brace\",\r\n            \"symbols\": [\"non_brace$subexpression$1\"],\r\n            \"postprocess\": function (data) {\r\n                return data[0][0];\r\n            }\r\n        },\r\n        { \"name\": \"non_bracket$subexpression$1\", \"symbols\": [esc] },\r\n        { \"name\": \"non_bracket$subexpression$1\", \"symbols\": [tok_id] },\r\n        { \"name\": \"non_bracket$subexpression$1\", \"symbols\": [quote_dbl] },\r\n        { \"name\": \"non_bracket$subexpression$1\", \"symbols\": [ws] },\r\n        { \"name\": \"non_bracket$subexpression$1\", \"symbols\": [num] },\r\n        { \"name\": \"non_bracket$subexpression$1\", \"symbols\": [comma] },\r\n        { \"name\": \"non_bracket$subexpression$1\", \"symbols\": [entry_type_bib] },\r\n        { \"name\": \"non_bracket$subexpression$1\", \"symbols\": [entry_type_string] },\r\n        { \"name\": \"non_bracket$subexpression$1\", \"symbols\": [entry_type_preamble] },\r\n        { \"name\": \"non_bracket$subexpression$1\", \"symbols\": [entry_type_comment] },\r\n        { \"name\": \"non_bracket$subexpression$1\", \"symbols\": [pound] },\r\n        { \"name\": \"non_bracket$subexpression$1\", \"symbols\": [eq] },\r\n        {\r\n            \"name\": \"non_bracket\",\r\n            \"symbols\": [\"non_bracket$subexpression$1\"],\r\n            \"postprocess\": function (data) {\r\n                return data[0][0];\r\n            }\r\n        },\r\n        { \"name\": \"non_entry$ebnf$1$subexpression$1\", \"symbols\": [\"escaped_entry\"] },\r\n        { \"name\": \"non_entry$ebnf$1$subexpression$1\", \"symbols\": [\"escaped_escape\"] },\r\n        { \"name\": \"non_entry$ebnf$1$subexpression$1\", \"symbols\": [\"escaped_non_esc_outside_entry\"] },\r\n        { \"name\": \"non_entry$ebnf$1$subexpression$1\", \"symbols\": [\"non_esc_outside_entry\"] },\r\n        { \"name\": \"non_entry$ebnf$1\", \"symbols\": [\"non_entry$ebnf$1$subexpression$1\"] },\r\n        { \"name\": \"non_entry$ebnf$1$subexpression$2\", \"symbols\": [\"escaped_entry\"] },\r\n        { \"name\": \"non_entry$ebnf$1$subexpression$2\", \"symbols\": [\"escaped_escape\"] },\r\n        { \"name\": \"non_entry$ebnf$1$subexpression$2\", \"symbols\": [\"escaped_non_esc_outside_entry\"] },\r\n        { \"name\": \"non_entry$ebnf$1$subexpression$2\", \"symbols\": [\"non_esc_outside_entry\"] },\r\n        {\r\n            \"name\": \"non_entry$ebnf$1\",\r\n            \"symbols\": [\"non_entry$ebnf$1\", \"non_entry$ebnf$1$subexpression$2\"],\r\n            \"postprocess\": function arrpush(d) {\r\n                return d[0].concat([d[1]]);\r\n            }\r\n        },\r\n        {\r\n            \"name\": \"non_entry\", \"symbols\": [\"non_entry$ebnf$1\"], \"postprocess\": function (data) {\r\n                var tokens = [];\r\n                for (var Ti = 0; Ti < data[0].length; Ti++)\r\n                    tokens.push(data[0][Ti][0]);\r\n                return tokens;\r\n            }\r\n        },\r\n        {\r\n            \"name\": \"escaped_escape\", \"symbols\": [esc, esc], \"postprocess\": function () {\r\n                return \"\\\\\";\r\n            }\r\n        },\r\n        {\r\n            \"name\": \"escaped_entry\", \"symbols\": [esc, \"entry_decl\"], \"postprocess\": function (data) {\r\n                return { type: \"escapedEntry\", data: data[1] };\r\n            }\r\n        },\r\n        {\r\n            \"name\": \"escaped_non_esc_outside_entry\",\r\n            \"symbols\": [esc, \"non_esc_outside_entry\"],\r\n            \"postprocess\": function (data) {\r\n                return data;\r\n            }\r\n        },\r\n        { \"name\": \"non_esc_outside_entry$subexpression$1\", \"symbols\": [tok_id] },\r\n        { \"name\": \"non_esc_outside_entry$subexpression$1\", \"symbols\": [ws] },\r\n        { \"name\": \"non_esc_outside_entry$subexpression$1\", \"symbols\": [num] },\r\n        { \"name\": \"non_esc_outside_entry$subexpression$1\", \"symbols\": [pound] },\r\n        { \"name\": \"non_esc_outside_entry$subexpression$1\", \"symbols\": [eq] },\r\n        { \"name\": \"non_esc_outside_entry$subexpression$1\", \"symbols\": [paren_l] },\r\n        { \"name\": \"non_esc_outside_entry$subexpression$1\", \"symbols\": [paren_r] },\r\n        { \"name\": \"non_esc_outside_entry$subexpression$1\", \"symbols\": [brace_l] },\r\n        { \"name\": \"non_esc_outside_entry$subexpression$1\", \"symbols\": [brace_r] },\r\n        { \"name\": \"non_esc_outside_entry$subexpression$1\", \"symbols\": [quote_dbl] },\r\n        { \"name\": \"non_esc_outside_entry$subexpression$1\", \"symbols\": [comma] },\r\n        {\r\n            \"name\": \"non_esc_outside_entry\",\r\n            \"symbols\": [\"non_esc_outside_entry$subexpression$1\"],\r\n            \"postprocess\": function (data) {\r\n                return data[0][0];\r\n            }\r\n        }\r\n    ],\r\n    ParserStart: \"main\"\r\n};\r\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Token_1 = __webpack_require__(14);\r\nvar WhitespaceToken_1 = __webpack_require__(15);\r\nvar NumericToken_1 = __webpack_require__(16);\r\nvar IdToken_1 = __webpack_require__(22);\r\nvar BibBlockTypes_1 = __webpack_require__(23);\r\nvar Lexer = (function () {\r\n    function Lexer(string) {\r\n        this.str = string;\r\n        this.len = string.length;\r\n        this.pos = 0;\r\n    }\r\n    Lexer.prototype.getStringUntilNonEscapedChar = function (terminalRegex) {\r\n        var chars = [];\r\n        for (var i = this.pos; i < this.len + 1; i++) {\r\n            this.pos = i;\r\n            if (this.str.charAt(i) == \"\\\\\" && this.str.charAt(i + 1).match(terminalRegex)) {\r\n                i++;\r\n                this.pos = i;\r\n            }\r\n            else if (this.str.charAt(i).match(terminalRegex)) {\r\n                break;\r\n            }\r\n            chars.push(this.str.charAt(i));\r\n        }\r\n        return chars.join(\"\");\r\n    };\r\n    Lexer.prototype.readTokens = function () {\r\n        var tokens = [];\r\n        var nextToken;\r\n        while (nextToken = this.readNextToken())\r\n            tokens.push(nextToken);\r\n        return tokens;\r\n    };\r\n    Lexer.prototype.readNextToken = function () {\r\n        if (this.pos >= this.str.length)\r\n            return undefined;\r\n        var currentChar = this.str.charAt(this.pos);\r\n        if (WhitespaceToken_1.isSingleWhiteSpaceCharacter(currentChar))\r\n            return this.eatWhiteSpace();\r\n        else if (Token_1.isSpecialChar(currentChar)) {\r\n            return this.eatSpecialChars(currentChar);\r\n        }\r\n        else if (NumericToken_1.isNum(currentChar)) {\r\n            return this.eatNumericString(currentChar);\r\n        }\r\n        else {\r\n            return this.eatIdString();\r\n        }\r\n    };\r\n    Lexer.prototype.eatIdString = function () {\r\n        var chars = [];\r\n        var pos2 = this.pos;\r\n        for (var i = pos2; i < this.len + 1; i++) {\r\n            this.pos = i;\r\n            var charAtI = this.str.charAt(i);\r\n            if (!IdToken_1.isIdChar(charAtI)) {\r\n                break;\r\n            }\r\n            else {\r\n                chars.push(charAtI);\r\n            }\r\n        }\r\n        return IdToken_1.newIdToken(chars.join(\"\").trim());\r\n    };\r\n    Lexer.prototype.eatNumericString = function (startAt) {\r\n        var nums = [startAt];\r\n        var nextPos = this.pos + 1;\r\n        for (var newPos = nextPos; newPos < this.len + 1; newPos++) {\r\n            this.pos = newPos;\r\n            var newChar = this.str.charAt(newPos);\r\n            if (NumericToken_1.isNum(newChar))\r\n                nums.push(newChar);\r\n            else\r\n                break;\r\n        }\r\n        var numericString = nums.join(\"\");\r\n        if (nums[0] === \"0\")\r\n            return NumericToken_1.newNumber(numericString);\r\n        else {\r\n            var number = Number.parseInt(numericString);\r\n            return Number.isFinite(number) ? number : NumericToken_1.newNumber(numericString);\r\n        }\r\n    };\r\n    Lexer.prototype.eatSpecialChars = function (startAt) {\r\n        this.pos++;\r\n        if (startAt === \"@\") {\r\n            var type = this.getStringUntilNonEscapedChar(\"{\").trim();\r\n            if (BibBlockTypes_1.isBibType(type))\r\n                return Token_1.newToken(BibBlockTypes_1.bibTypes[type], type);\r\n            else\r\n                return Token_1.newToken(\"@bib\", type);\r\n        }\r\n        return startAt;\r\n    };\r\n    Lexer.prototype.eatWhiteSpace = function () {\r\n        var chars = [];\r\n        while (this.pos < this.len + 1) {\r\n            var c = this.str.charAt(this.pos);\r\n            if (WhitespaceToken_1.isSingleWhiteSpaceCharacter(c)) {\r\n                chars.push(c);\r\n                this.pos++;\r\n            }\r\n            else\r\n                break;\r\n        }\r\n        return WhitespaceToken_1.newWhitespace(chars.join(\"\"));\r\n    };\r\n    return Lexer;\r\n}());\r\nexports.default = Lexer;\r\n\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Token_1 = __webpack_require__(14);\r\nvar WhitespaceToken_1 = __webpack_require__(15);\r\nvar NumericToken_1 = __webpack_require__(16);\r\nfunction newIdToken(string) {\r\n    return {\r\n        type: \"id\",\r\n        string: string\r\n    };\r\n}\r\nexports.newIdToken = newIdToken;\r\nfunction isIdToken(string) {\r\n    return string.type === \"id\" && typeof string.string === \"string\";\r\n}\r\nexports.isIdToken = isIdToken;\r\nfunction isIdChar(c) {\r\n    return !(Token_1.isSpecialChar(c) || NumericToken_1.isNum(c) || WhitespaceToken_1.isSingleWhiteSpaceCharacter(c));\r\n}\r\nexports.isIdChar = isIdChar;\r\n\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.bibTypes = {\r\n    string: \"@string\",\r\n    preamble: \"@preamble\",\r\n    comment: \"@comment\",\r\n    bib: \"@bib\"\r\n};\r\nexports.isBibType = function (c) {\r\n    return exports.bibTypes.hasOwnProperty(c);\r\n};\r\n\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// index.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 17);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap d37c0eded387c2549593","import {BibStringDatum} from \"./bibfile/datatype/string/BibStringData\";\nimport {isStringRef} from \"./bibfile/datatype/string/StringRef\";\nimport {isBibStringComponent} from \"./bibfile/datatype/string/bib-string-utils\";\n\nexport function mustBeString(str: any, o?: any): string {\n    if (typeof str !== \"string\")\n        throw new Error(\"Expected to be string: \" + JSON.stringify(o ? o : str));\n    return str;\n}\n\nexport function mustBeDefined<T>(t?: T, o?: any): T {\n    if (t === undefined)\n        throw new Error(\"Expected to be defined: \" + JSON.stringify(o ? o : t));\n    return t;\n}\n\nexport function mustBeArray(str: any, o?: any): any[] {\n    if (!isArray(str))\n        throw new Error(\"Expected to be array: \" + JSON.stringify(o ? o : str));\n    return str;\n}\n\nexport function isArray(data: any): data is any[] {\n    return !!data && data.constructor === Array;\n}\n\nexport function isNumber(data: any): data is number {\n    return typeof data === \"number\";\n}\n\n\nexport function isString(data: any): data is string {\n    return typeof data === \"string\";\n}\n\nexport const flattenMyArray = function (arr: any[], result?: any[]): any[] {\n    if (!result) result = [];\n    for (let i = 0, length = arr.length; i < length; i++) {\n        const value: any = arr[i];\n        if (Array.isArray(value)) {\n            for (let i = 0, length = value.length; i < length; i++) {\n                const value2: any = value[i];\n                if (Array.isArray(value2)) {\n                    flattenMyArray(value2, result);\n                } else {\n                    result.push(value2);\n                }\n            }\n        } else {\n            result.push(value);\n        }\n    }\n    return result;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/util.ts","import {\n    BibOuterStringComponent,\n    BibStringComponent\n} from \"./BibStringComponent\";\n\nimport {BibStringData} from \"./BibStringData\";\n\n/**\n * thisObject = \"A string between quotes\"\n */\nexport class QuotedString extends BibStringComponent {\n    constructor(braceDepth: number, data: BibStringData) {\n        super(\"quotedstring\", braceDepth, data);\n    }\n}\n\nexport class OuterQuotedString extends BibOuterStringComponent {\n    constructor(data: BibStringData) {\n        super(\"quotedstringwrapper\", data);\n    }\n}\n\nexport function isOuterQuotedString(x: any): x is OuterQuotedString {\n    return x.type === \"quotedstringwrapper\";\n}\n\nexport function isQuotedString(x: any): x is QuotedString {\n    return x.type === \"quotedstring\";\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/bibfile/datatype/string/QuotedString.ts","\nimport {BibOuterStringComponent, BibStringComponent} from \"./BibStringComponent\";\nimport {BibStringData} from \"./BibStringData\";\n\n/**\n * thisObject = {A string between braces}\n */\nexport class BracedString extends BibStringComponent {\n\n    /**\n     * A special character is a\n     * part of a field starting with a left brace being at brace depth 0 immediately followed with a backslash,\n     * and ending with the corresponding right brace.\n     * It should be noticed that anything in a special character is\n     * considered as being at brace depth 0, even if it is placed between another pair of braces.\n     */\n    readonly isSpecialCharacter: boolean;\n\n    constructor(braceDepth: number, data: BibStringData) {\n        super(\"bracedstring\", braceDepth, data);\n\n        // TODO braced strings inside a special character is treated as if it has brace depth 0. Maybe it's a good idea to mark these nested braces?\n        this.isSpecialCharacter = braceDepth === 0 && data[0] === \"\\\\\";\n    }\n\n}\n\nexport class OuterBracedString extends BibOuterStringComponent {\n    constructor(data: BibStringData) {\n        super(\"bracedstringwrapper\", data);\n    }\n}\n\nexport function isOuterBracedString(x: any): x is OuterBracedString {\n    return x.type === \"bracedstringwrapper\";\n}\n\nexport function isBracedString(x: any): x is BracedString {\n    return x.type === \"bracedstring\";\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/bibfile/datatype/string/BracedString.ts","import {isStringRef, StringRef} from \"./StringRef\";\nimport {isBracedString, isOuterBracedString, BracedString} from \"./BracedString\";\nimport {isOuterQuotedString, isQuotedString, QuotedString} from \"./QuotedString\";\nimport {flattenMyArray, isArray, isNumber, isString, mustBeString} from \"../../../util\";\nimport {BibStringComponent} from \"./BibStringComponent\";\nimport {BibStringData, BibStringDatum} from \"./BibStringData\";\n\nexport function isBibStringComponent(x: any): x is BibStringComponent {\n    return typeof x.braceDepth === \"number\" && typeof x.type === \"string\";\n}\n\nexport interface ContiguousSimpleString {\n    type: \"ContiguousSimpleString\";\n    data: (number | string)[];\n}\n\nexport function isContiguousSimpleString(x: any): x is ContiguousSimpleString {\n    return x.type === \"ContiguousSimpleString\" && isArray(x.data);\n}\n\nexport function joinContiguousSimpleStrings(x: ContiguousSimpleString): string {\n    return x.data.join(\"\");\n}\n\n\nexport function parseStringComponent(braceDepth: number, obj: any): BibStringComponent | string | number | StringRef {\n    if (isNumber(obj) || isString(obj))\n        return /*new BibStringComponent(typeof obj, braceDepth, [*/obj/*])*/;\n\n    if (isStringRef(obj))\n        return new StringRef(0, obj.stringref);\n    // if (isWhitespace(obj)) return obj;\n    // if (isIdToken(obj)) return obj.string;\n\n    switch (mustBeString(obj.type, obj)) {\n        case \"id\":\n        case \"ws\":\n        case \"number\":\n            return mustBeString(obj.string);\n        case \"bracedstring\":\n        case \"braced\":\n            if (!isArray(obj.data)) {\n                throw new Error(\"Expect array for data: \" + JSON.stringify(obj));\n            }\n            return new BracedString(braceDepth, flattenMyArray(obj.data).map(e => parseStringComponent(braceDepth + 1, e)));\n        case \"quotedstring\":\n            if (!isArray(obj.data)) {\n                throw new Error(\"Expect array for data: \" + JSON.stringify(obj));\n            }\n            const flattened = flattenMyArray(obj.data);\n            return new QuotedString(braceDepth, flattened.map(e => parseStringComponent(braceDepth, e)));\n        default:\n            throw new Error(\"Unexpected complex string type: \" + obj.type);\n    }\n}\n\nexport function toStringBibStringDatum(data: BibStringDatum): string {\n    if (isString(data))\n        return data;\n    if (isNumber(data))\n        return data + \"\";\n    if (\n        isBracedString(data)\n        || isQuotedString(data)\n        || isOuterQuotedString(data)\n        || isOuterBracedString(data)\n    )\n        return toStringBibStringData(data.data);\n\n    throw new Error(JSON.stringify(data));\n}\n\nexport function toStringBibStringData(data: BibStringData) {\n    return data.map(toStringBibStringDatum).join(\"\");\n}\n\nexport function flattenQuotedStrings(data: BibStringData, hideQuotes?: boolean): BibStringData {\n    let result: BibStringData = [];\n    for (const datum of data) {\n        const flattenned = flattenQuotedString(datum, hideQuotes);\n        if (isArray(flattenned)) {\n            result = result.concat(flattenned);\n        } else {\n            result.push(flattenned);\n        }\n    }\n    return result;\n}\n\nconst doubleQuotes: BibStringDatum[] = [\"\\\"\"];\n\nfunction flattenQuotedString(data: BibStringDatum, hideQuotes?: boolean): BibStringDatum | BibStringData {\n    if (isBracedString(data))\n        return data;\n    if (isQuotedString(data)) {\n        const flattenedQuotedString: BibStringData = flattenQuotedStrings(data.data, true);\n        if (isArray(flattenedQuotedString)) {\n            return hideQuotes\n                ? flattenedQuotedString\n                : doubleQuotes.concat(flattenedQuotedString).concat(doubleQuotes);\n        } else if (hideQuotes)\n            return flattenedQuotedString;\n        else\n            return [\"\\\"\", flattenedQuotedString, \"\\\"\"];\n    }\n    if (isOuterQuotedString(data))\n        return flattenQuotedStrings(data.data, true);\n    if (isOuterBracedString(data))\n        return flattenQuotedStrings(data.data, false);\n    if (isString(data) || isNumber(data))\n        return data;\n    if (isStringRef(data))\n        throw new Error(\"StringRef should be resolved at this point!\");\n    else\n        throw new Error();\n}\n\nexport function globContiguousStrings(data: BibStringData): (BibStringDatum | ContiguousSimpleString)[] {\n    const result: (BibStringDatum | ContiguousSimpleString)[] = [];\n    for (const element of data) {\n        if (isString(element) || isNumber(element)) {\n            if (result.length <= 0) {\n                const contiguousSimpleString: ContiguousSimpleString = {\n                    type: \"ContiguousSimpleString\",\n                    data: [element]\n                };\n                result.push(contiguousSimpleString);\n            }\n            else {\n                const lastElement = result[result.length - 1];\n                if (isContiguousSimpleString(lastElement)) {\n                    lastElement.data.push(element);\n                } else {\n                    const contiguousSimpleString: ContiguousSimpleString = {\n                        type: \"ContiguousSimpleString\",\n                        data: [element]\n                    };\n                    result.push(contiguousSimpleString);\n                }\n            }\n        } else {\n            result.push(element);\n        }\n    }\n    return result;\n}\n\nexport function splitOnAnd(data: BibStringData): BibStringData[] {\n    return splitOnPattern(data, /\\s+and\\s+/g);\n}\n\nexport function splitOnComma(data: BibStringData, limit = 2): BibStringData[] {\n    return splitOnPattern(data, /\\s*,\\s*/g, limit);\n}\n\nexport function splitOnPattern(data: BibStringData, pattern: RegExp, stopAfter?: number): BibStringData[] {\n    const splitted: BibStringData[] = [];\n\n    let buffer: BibStringData = [];\n    for (const datum of data) {\n        if (isString(datum) && (stopAfter === undefined || stopAfter > 0)) {\n            let match: RegExpExecArray | null | undefined = pattern.exec(datum);\n            let end = 0;\n            if (match) {\n                do {\n                    const prevEnd = end;\n                    end = match.index + match[0].length;\n                    // if(prevEnd !== match.index)\n                    buffer.push(datum.substring(prevEnd, match.index));\n\n                    if (stopAfter === undefined || stopAfter > 0) {\n                        splitted.push(buffer);\n                        buffer = [];\n                        if (stopAfter !== undefined && stopAfter > 0) stopAfter--;\n                    }\n\n                    if (stopAfter === undefined || stopAfter > 0)\n                        match = pattern.exec(datum);\n                    else\n                        match = undefined;\n                } while (match);\n\n                if (end > 0 && end < datum.length)\n                    buffer.push(datum.substring(end));\n            } else {\n                buffer.push(datum);\n            }\n        }\n        else\n            buffer.push(datum);\n    }\n\n    if (buffer.length > 0) splitted.push(buffer);\n    return splitted;\n}\n\n// TODO\n// /**\n//  * A special character is a\n//  part of a field starting with a left brace being at brace depth 0 immediately followed with a backslash,\n//  and ending with the corresponding right brace. For instance, in the above example, there is no special\n//  character, since \\LaTeX is at depth 2. It should be noticed that anything in a special character is\n//  considered as being at brace depth 0, even if it is placed between another pair of braces.\n//  */\n// export class SpecialCharacter extends BibStringComponent {\n//     constructor(data: BibStringData) {\n//         super(\"specialCharacter\", 0, data);\n//     }\n//\n//     copyWithResolvedStringReferences(alreadyResolved, refs): BibStringComponent {\n//         return new SpecialCharacter(resolveStringReferences(this,(alreadyResolved, refs));\n//     }\n// }\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/bibfile/datatype/string/bib-string-utils.ts","import {BibStringData, BibStringDatum} from \"./BibStringData\";\nimport {isNumber, isString} from \"../../../util\";\n\n/**\n * A fully formed string (between {braces} or \"quotes\").\n * Consists of 0 or many BibStringDatum\n */\nexport class BibStringComponent {\n    readonly data: BibStringData;\n    readonly type: string;\n\n    /**\n     * The brace depth of an item is the number of braces surrounding it (surrounding the field with braces instead of quotes does not modify the brace depth)\n     */\n    readonly braceDepth: number;\n\n    constructor(type: string, braceDepth: number, data: BibStringData) {\n        this.type = type;\n        this.braceDepth = braceDepth;\n        this.data = data;\n    }\n\n\n    stringify(): string {\n        return this.data.map(stringifyDatum).join(\"\");\n    }\n}\n\nfunction isBibStringComponent(x: any): x is BibStringComponent {\n    return typeof x.braceDepth === \"number\" && typeof x.type === \"string\";\n}\n\nexport function stringifyDatum(datum: BibStringDatum): string {\n    if (isString(datum)) return datum;\n    if (isNumber(datum)) return datum.toString();\n    if (isBibStringComponent(datum)) return datum.stringify();\n    // if (isStringRef(datum)) throw new Error(\"Unexpected state\");\n    else throw new Error(\"Unexpected state\");\n}\n\nexport class BibOuterStringComponent extends BibStringComponent {\n    constructor(type: string, data: BibStringData) {\n        super(type, 0, data);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/bibfile/datatype/string/BibStringComponent.ts","/**\n * A named reference to a string, eg. `{string1} # stringRef # {string2}`\n */\nexport class StringRef {\n    readonly stringref: string;\n    readonly braceDepth: number;\n\n    constructor(braceDepth: number, stringref: string) {\n        this.braceDepth = braceDepth;\n        this.stringref = stringref;\n    }\n}\n\nexport function isStringRef(stringref: any): stringref is StringRef {\n    return typeof stringref.stringref === \"string\";\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/bibfile/datatype/string/StringRef.ts","import {OuterBracedString} from \"./string/BracedString\";\nimport {OuterQuotedString} from \"./string/QuotedString\";\nimport {isNumber, mustBeArray} from \"../../util\";\nimport {parseStringComponent} from \"./string/bib-string-utils\";\nimport {BibOuterStringComponent} from \"./string/BibStringComponent\";\n\n/**\n * A key to value mapping such as `field = {name}`.\n */\nexport interface KeyVal {\n    readonly key: string;\n    readonly value: FieldValue;\n}\n\nexport function isKeyVal(data: any): data is KeyVal {\n    return typeof data.key === \"string\"\n        && data.value !== undefined;\n}\n\nexport function newKeyVal(data: any): KeyVal {\n    if (isKeyVal(data)) {\n        return {\n            key: data.key,\n            value: parseFieldValue(data.value),\n        };\n    } else {\n        throw new Error(\"Was not a KeyVal: \" + JSON.stringify(data));\n    }\n}\n\nexport function parseFieldValue(value: any): FieldValue {\n    if (isNumber(value)) {\n        return value;\n    }\n\n    const data = mustBeArray(value.data);\n    switch (value.type) {\n        case \"quotedstringwrapper\":\n            if (data.length === 1 && isNumber(data[0]))\n            // A single number is in a quoted string wrapper\n            // because the parser considered it part of a\n            // concatenated string\n                return data[0];\n\n            return new OuterQuotedString(data.map(e => parseStringComponent(0, e)));\n\n        case \"bracedstringwrapper\":\n            return new OuterBracedString(data.map(e => parseStringComponent(0, e)));\n\n        default:\n            throw new Error(\"Unexpected value: \" + JSON.stringify(value));\n    }\n}\n\n/**\n * Values (i.e. right hand sides of each assignment) can be either between curly braces or between\n * double quotes. The main difference is that you can write double quotes in the first case, and not\n * in the second case.\n *\n * For numerical values, curly braces and double quotes can be omitted.\n */\nexport type FieldValue = number | BibOuterStringComponent;\n\nexport function normalizeFieldValue(field?: FieldValue): string | number | undefined {\n    if(!field) return undefined;\n    if(isNumber(field)) return field;\n    else return field.stringify();\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/bibfile/datatype/KeyVal.ts","import {KeyVal, isKeyVal, newKeyVal, FieldValue} from \"../datatype/KeyVal\";\nimport {isStringRef, StringRef} from \"../datatype/string/StringRef\";\nimport {isOuterQuotedString, isQuotedString, OuterQuotedString, QuotedString} from \"../datatype/string/QuotedString\";\nimport {BracedString, isBracedString, isOuterBracedString, OuterBracedString} from \"../datatype/string/BracedString\";\nimport {isNumber, isString} from \"../../util\";\nimport {BibStringComponent} from \"../datatype/string/BibStringComponent\";\nimport {BibStringData} from \"../datatype/string/BibStringData\";\nimport {isBibStringComponent} from \"../datatype/string/bib-string-utils\";\n\n/**\n * An \"@string{}\" entry\n */\nexport class BibStringEntry {\n    readonly type: string;\n\n    readonly key: string;\n    readonly value: FieldValue;\n\n    public constructor(key: string, value: FieldValue) {\n        this.type = \"string\";\n        this.key = key;\n        this.value = value;\n    }\n}\n\nexport function newStringEntry(data: any): BibStringEntry {\n    const {key, value}: KeyVal = convertToKeyVal(data);\n    return new BibStringEntry(key, value);\n}\n\nfunction convertToKeyVal(data: any): KeyVal {\n    if (isKeyVal(data)) {\n        return newKeyVal(data);\n    } else {\n        if (data.type !== \"string\") {\n            throw new Error(\"Unexpected node: \" + JSON.stringify(data));\n        }\n        return convertToKeyVal(data.data);\n    }\n}\n\n// function resolveStringDeclarations(wrapper: FieldValue,\n//                                    compiledSoFar: { [key: string]: FieldValue },\n//                                    rawStrings: { [key: string]: FieldValue }) {\n//     if (isNumber(wrapper))\n//         return wrapper;\n//\n//     return copyWithResolvedStringReferences(wrapper, compiledSoFar, rawStrings);\n//\n//     //  else\n//     //    throw new Error(\"Unexpected object to resolve: \" + JSON.stringify(wrapper));\n// }\n\nexport function resolveStrings(strings: { [key: string]: FieldValue }): { [key: string]: FieldValue } {\n    const resolved: { [key: string]: FieldValue } = {};\n    Object.keys(strings).forEach(key => {\n        if (!resolved[key])\n            resolved[key] = resolveStringReference({}, resolved, strings, strings[key]);\n    });\n    return resolved;\n}\n\nexport function resolveStringReferences(o: BibStringComponent, seenBeforeStack: { [key: string]: boolean },\n                                        alreadyResolved: { [key: string]: /*Resolved*/FieldValue },\n                                        refs: { [key: string]: FieldValue }): BibStringData {\n    return o.data.map(datum => {\n        if (isString(datum) || isNumber(datum)) return datum;\n        else if (isStringRef(datum)) return resolveStringRef(seenBeforeStack, refs, datum, alreadyResolved);\n        else if (isBibStringComponent(datum)) return copyWithResolvedStringReferences(datum, seenBeforeStack, alreadyResolved, refs);\n        else throw new Error();\n    });\n}\n\nexport function resolveStringReference(seenBeforeStack: { [key: string]: boolean },\n                                       alreadyResolved: { [p: string]: FieldValue },\n                                       refs: { [p: string]: FieldValue },\n                                       data: FieldValue): FieldValue {\n    if (isNumber(data)) {\n        return data;\n    } else if (isOuterBracedString(data) || isOuterQuotedString(data)) {\n        return copyOuterWithResolvedStringReferences(data, seenBeforeStack, alreadyResolved, refs);\n    }\n    if (isStringRef(data)) {\n        return resolveStringRef(seenBeforeStack, refs, data, alreadyResolved);\n    }\n\n    // else if (isBibStringComponent(data))\n    //     return data.copyWithResolvedStringReferences(alreadyResolved, refs);\n    // else throw new Error();\n    return data;\n}\n\nfunction resolveStringRef(seenBeforeStack: { [key: string]: boolean },\n                          refs: { [key: string]: FieldValue },\n                          data: StringRef,\n                          alreadyResolved: { [key: string]: FieldValue }): FieldValue {\n    const refName = data.stringref;\n    if (seenBeforeStack[refName])\n        throw new Error(\"Cycle detected: \" + refName);\n    if (alreadyResolved[refName]) {\n        return alreadyResolved[refName];\n    }\n    if (!refs[refName])\n        throw new Error(`Unresolved reference: \"${data.stringref}\" (${JSON.stringify(data)})`);\n\n    alreadyResolved[refName] = resolveStringReference(\n        Object.assign({}, seenBeforeStack, {[refName]: true}),\n        alreadyResolved,\n        refs,\n        refs[refName]\n    );\n    return alreadyResolved[refName];\n}\n\n\nexport function copyWithResolvedStringReferences(obj: BibStringComponent,\n                                                 seenBeforeStack: { [key: string]: boolean },\n                                                 alreadyResolved: { [key: string]: /*Resolved*/FieldValue },\n                                                 refs: { [key: string]: FieldValue }): OuterQuotedString | OuterBracedString {\n    const newData = resolveStringReferences(obj, seenBeforeStack, alreadyResolved, refs);\n\n    const braceDepth: number = obj.braceDepth;\n    if (isQuotedString(obj))\n        return new QuotedString(braceDepth, newData);\n    if (isBracedString(obj))\n        return new BracedString(braceDepth, newData);\n    if (isOuterQuotedString(obj))\n        return new OuterQuotedString(newData);\n    if (isOuterBracedString(obj))\n        return new OuterBracedString(newData);\n    else\n        throw new Error();\n}\n\nexport function copyOuterWithResolvedStringReferences(obj: OuterQuotedString | OuterBracedString,\n                                                      seenBeforeStack: { [key: string]: boolean },\n                                                      alreadyResolved: { [key: string]: /*Resolved*/FieldValue },\n                                                      refs: { [key: string]: FieldValue }): OuterQuotedString | OuterBracedString {\n    const copied = copyWithResolvedStringReferences(\n        obj,\n        seenBeforeStack,\n        alreadyResolved,\n        refs\n    );\n    if (!isOuterBracedString(copied) && !isOuterQuotedString(copied)) throw new Error();\n    return copied;\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/bibfile/bib-entry/BibStringEntry.ts","import {BibStringData, BibStringDatum} from \"../../datatype/string/BibStringData\";\nimport {isString} from \"../../../util\";\nimport {isOuterQuotedString, isQuotedString} from \"../../datatype/string/QuotedString\";\nimport {isStringRef} from \"../../datatype/string/StringRef\";\nimport {isOuterBracedString} from \"../../datatype/string/BracedString\";\nimport {\n    splitOnAnd,\n    splitOnComma,\n    splitOnPattern,\n    toStringBibStringData,\n    toStringBibStringDatum\n} from \"../../datatype/string/bib-string-utils\";\n\nfunction word2string(obj) {\n    if (typeof obj === \"string\") return obj;\n    else if (obj.type == \"braced\") return word2string(obj.data);\n    else if (obj.unicode) return obj.unicode;\n    else if (obj.string) return obj.string;\n    else if (obj.constructor == Array) return obj.map(word2string).join(\"\");\n    else throw new Error(\"? \" + JSON.stringify(obj));\n}\n\nconst WHITESPACES = /\\s+/g;\n\nexport class AuthorName {\n    readonly firstNames$: BibStringData[];\n    readonly initials: string[];\n    readonly vons$: BibStringData[];\n    readonly lastNames$: BibStringData[];\n    readonly jrs$: BibStringData[];\n\n    readonly firstNames: string[];\n    readonly vons: string[];\n    readonly lastNames: string[];\n    readonly jrs: string[];\n\n    readonly id: string;\n\n    /**\n     * @param firstNames Array of word objects\n     * @param vons Array of word objects\n     * @param lastNames Array of word objects\n     * @param jrs Array of word objects\n     */\n    constructor(firstNames: BibStringData[], vons: BibStringData[], lastNames: BibStringData[], jrs: BibStringData[]) {\n        this.firstNames$ = firstNames;\n        this.vons$ = vons;\n        this.lastNames$ = lastNames;\n        this.jrs$ = jrs;\n\n        this.initials = firstNames.map(getFirstLetter);\n\n        this.firstNames = firstNames.map(toStringBibStringData);\n        this.vons = vons.map(toStringBibStringData);\n        this.lastNames = lastNames.map(toStringBibStringData);\n        this.jrs = jrs.map(toStringBibStringData);\n\n        this.id = this.firstNames.join(\"-\") + \"-\"\n            + this.vons.join(\"-\") + \"-\"\n            + this.lastNames.join(\"-\") + \"-\"\n            + this.jrs.join(\"-\");\n    }\n}\n\nfunction getFirstLetter(bsd: BibStringData): string {\n    const asString = toStringBibStringData(bsd);\n    return asString ? asString.charAt(0) : \"\";\n}\n\nfunction isPartOfName(char) {\n    return (char === \",\" || char.match(/\\s/));\n}\n\nfunction startsWithLowerCaseBSD(authorToken: BibStringData) {\n    if (authorToken.length > 0) return startsWithLowerCase(authorToken[0]);\n    else return false;\n}\n\nfunction startsWithLowerCase(authorToken: BibStringDatum) {\n    if (isString(authorToken)) {\n        if (!authorToken) return false;\n        const ch = authorToken.charAt(0);\n        return ch.toLowerCase() === ch && ch.toUpperCase() !== ch;\n    }\n\n    if (isQuotedString(authorToken)) {\n        // TODO must be flattened string...?\n        if (!authorToken.data || authorToken.data.length <= 0) return false;\n        return startsWithLowerCase(authorToken.data[0]);\n    }\n\n    if (isStringRef(authorToken)\n        || isOuterQuotedString(authorToken)\n        || isOuterBracedString(authorToken)\n    ) throw new Error(\"Should not do this test on this type\");\n\n    return false;\n}\n\nfunction firstVonLast(outer: BibStringData): AuthorName {\n    const authorTokens: BibStringData[] = splitOnPattern(outer, WHITESPACES);\n\n    let vonStartInclusive = -1;\n    let vonEndExclusive = -1;\n    let firstNameEndExclusive = -1;\n\n    for (let i = 0; i < authorTokens.length - 1; i++) {\n        if (startsWithLowerCaseBSD(authorTokens[i])) {\n            if (vonStartInclusive < 0)\n            // Start von if not already started\n                vonStartInclusive = i;\n            // End von at last word that starts with lowercase\n            vonEndExclusive = i + 1;\n        }\n    }\n    if (vonStartInclusive >= 0) firstNameEndExclusive = vonStartInclusive;\n    else firstNameEndExclusive = authorTokens.length - 1;\n\n    const von: BibStringData[] = vonStartInclusive >= 0 ? getSubStringAsArray(authorTokens, vonStartInclusive, vonEndExclusive) : [];\n    const firstName: BibStringData[] = getSubStringAsArray(authorTokens, 0, firstNameEndExclusive);\n    const lastName: BibStringData[] = getSubStringAsArray(authorTokens, Math.max(vonEndExclusive, firstNameEndExclusive), authorTokens.length);\n\n    return new AuthorName(\n        firstName,\n        von,\n        lastName,\n        []\n    );\n}\n\nfunction vonLastFirst(vonLastStr: BibStringData, firstStr: BibStringData) {\n    const vonLast = splitOnPattern(vonLastStr, WHITESPACES);\n    const first = splitOnPattern(firstStr, WHITESPACES);\n\n    let vonStartInclusive = -1;\n    let vonEndExclusive = -1;\n\n    for (let i = 0; i < vonLast.length - 1; i++)\n        if (startsWithLowerCaseBSD(vonLast[i])) {\n            if (vonStartInclusive < 0) vonStartInclusive = i;\n            vonEndExclusive = i + 1;\n        }\n\n    const von = vonStartInclusive >= 0 ? getSubStringAsArray(vonLast, 0, vonEndExclusive) : [];\n    const firstName = first;\n    const lastName = getSubStringAsArray(vonLast, Math.max(vonEndExclusive, 0));\n\n    return new AuthorName(\n        firstName,\n        von,\n        lastName,\n        []\n    );\n}\n\n\nfunction getSubStringAsArray<T>(tokens: T[], startIncl: number, endExcl?: number) {\n    const arr: T[] = [];\n    for (let i = startIncl; i < (endExcl === undefined ? tokens.length : endExcl); i++) {\n        arr.push(tokens[i]);\n    }\n    return arr;\n}\n\nfunction vonLastJrFirst(vonLastStr: BibStringData, jrStr: BibStringData, firstStr: BibStringData) {\n    const vonLast = splitOnPattern(vonLastStr, WHITESPACES);\n    const first = splitOnPattern(firstStr, WHITESPACES);\n    const jr = splitOnPattern(jrStr, WHITESPACES);\n\n    let vonStartInclusive = -1;\n    let vonEndExclusive = -1;\n\n    for (let i = 0; i < vonLast.length - 1; i++)\n        if (startsWithLowerCaseBSD(vonLast[i])) {\n            if (vonStartInclusive < 0) vonStartInclusive = i;\n            vonEndExclusive = i + 1;\n        }\n\n    const von = vonStartInclusive >= 0 ? getSubStringAsArray(vonLast, 0, vonEndExclusive) : [];\n    const lastName = getSubStringAsArray(vonLast, Math.max(vonEndExclusive, 0));\n\n    return new AuthorName(\n        first,\n        von,\n        lastName,\n        jr\n    );\n}\n\n/**\n * BibTEX must be able to distinguish between the different parts of the author field. To that\n * aim, BibTEX recognizes three possible formats:\n * • First von Last;\n * • von Last, First;\n * • von Last, Jr, First.\n *\n * The format to be considered is obtained by counting the number of commas in the name.\n */\nexport function parseAuthorName(normalizedFieldValue: BibStringData): AuthorName {\n    const partitions: BibStringData[] = splitOnComma(normalizedFieldValue);\n\n    switch (partitions.length) {\n        case 1:\n            return firstVonLast(partitions[0]);\n        case 2:\n            return vonLastFirst(mdbsd(partitions[0]), mdbsd(partitions[1]));\n        case 3:\n            return vonLastJrFirst(mdbsd(partitions[0]), mdbsd(partitions[1]), mdbsd(partitions[2]));\n        default:\n            throw new Error(`Could not parse author name: partitioned as ${JSON.stringify(partitions)} in ${JSON.stringify(normalizedFieldValue)}`);\n    }\n}\n\nfunction isdbsd(x: any): x is BibStringData {\n    return x !== undefined;\n}\n\nfunction mdbsd(x: any): BibStringData {\n    if (isdbsd(x)) return x; else throw new Error(\"???????\");\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/bibfile/bib-entry/bibliographic-entity/Author.ts","import {isArray, isNumber} from \"../../../util\";\nimport {AuthorName, parseAuthorName} from \"./Author\";\nimport {isOuterQuotedString} from \"../../datatype/string/QuotedString\";\nimport {BibOuterStringComponent} from \"../../datatype/string/BibStringComponent\";\nimport {BibStringData} from \"../../datatype/string/BibStringData\";\nimport {\n    flattenQuotedStrings,\n    globContiguousStrings,\n    isContiguousSimpleString,\n    joinContiguousSimpleStrings,\n    splitOnAnd\n} from \"../../datatype/string/bib-string-utils\";\nimport {FieldValue} from \"../../datatype/KeyVal\";\n\n\n/**\n * Represents a list of authors\n */\nexport class Authors extends BibOuterStringComponent {\n    readonly authors$: AuthorName[];\n\n    constructor(fieldValue: FieldValue) {\n        const data = isNumber(fieldValue) ? [fieldValue] : fieldValue.data;\n        super(\"authors\", data);\n\n        const authorNames = determineAuthorNames$(fieldValue);\n        this.authors$ = authorNames.map(name => parseAuthor(name));\n    }\n}\n\n\nfunction parseAuthor(data: BibStringData) {\n    return parseAuthorName(data);\n}\n\n\nexport function determineAuthorNames$(data: FieldValue): BibStringData[] {\n    if (isNumber(data)) {\n        return determineAuthorNames([data]);\n    } else {\n        return determineAuthorNames(data.data, isOuterQuotedString(data));\n    }\n}\n\n\nfunction determineAuthorNames(data: BibStringData, hideQuotes?: boolean): BibStringData[] {\n    const globbed = globContiguousStrings(\n        flattenQuotedStrings(data, hideQuotes)\n    );\n    const normalizedString: BibStringData = globbed.map(e => isContiguousSimpleString(e) ? joinContiguousSimpleStrings(e) : e);\n    return splitOnAnd(normalizedString);\n}\n\n\nexport function mustBeAuthors(x: any): Authors {\n    if (!isAuthors(x)) throw new Error();\n    return x;\n}\n\n\nexport function isAuthors(x: any): x is Authors {\n    return (isArray(x[\"authors$\"]) && x.type === \"authors\");\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/bibfile/bib-entry/bibliographic-entity/Authors.ts","import {flattenMyArray, isArray, isString, mustBeString} from \"../../util\";\n\nexport class BibComment {\n    readonly type: string;\n    readonly data: string[];\n    readonly string: string;\n\n    constructor(data: string[]) {\n        this.type = \"comment\";\n        this.data = data;\n        this.string = data.join(\"\");\n    }\n\n    toString() {\n        return this.string;\n    }\n}\n\nexport class CommentEntry {\n    readonly type: string;\n    readonly data: string[];\n    readonly string: string;\n\n    constructor(type: string, data: string[]) {\n        this.type = type;\n        this.data = data;\n        this.string = data.join(\"\");\n    }\n\n    toString() {\n        return this.string;\n    }\n}\n\nexport function isBibComment(n: any): n is BibComment {\n    return n.type === \"comment\" && isArray(n.data);\n}\n\nconst flattenO = (wrapper: any): string => isString(wrapper) ? wrapper\n    : typeof wrapper === \"number\" ? wrapper.toString()\n        // : (isString(wrapper.type) && wrapper.type === \"@bib\" && isString(wrapper.string)) ? \"@\" + wrapper.string\n        : wrapper[\"type\"] === \"@bib\" ? \"@\" + mustBeString(wrapper.string)\n            : wrapper[\"type\"] === \"escapedEntry\" ? \"\\\\\" + flattenO(wrapper.data)\n                : mustBeString(wrapper.string)\n;\n\nexport function flattenPlainText(data: any[]): string[] {\n    return flattenMyArray(data).map(flattenO);\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/bibfile/bib-entry/BibComment.ts","import {Authors, mustBeAuthors} from \"./bibliographic-entity/Authors\";\nimport {\n    findError,\n    hasMandatoryFields,\n    mandatoryFields\n} from \"./bibliographic-entity/mandatory-and-optional-fields\";\nimport {resolveStringReference} from \"./BibStringEntry\";\nimport {FieldValue, normalizeFieldValue, parseFieldValue} from \"../datatype/KeyVal\";\n\n/**\n * Represents a single \"@[entityName]\" entity, not a special entity such as @string\n */\nexport class BibEntry {\n    readonly type: string;\n    readonly _id: string;\n\n    readonly fields: EntryFields;\n    // noinspection JSUnusedGlobalSymbols\n    readonly fields$: EntryFields;\n\n    /**\n     * When sorting, BibTEX computes a string, named\n     sort.key$, for each entry. The sort.key$ string is an (often long) string defining the order\n     in which entries will be sorted. To avoid any ambiguity, sort.key$ should only contain alphanumeric\n     characters. Classical non-alphanumeric characters23, except special characters, will\n     be removed by a BibTEX function named purify$. For special characters, purify$ removes\n     spaces and LATEX commands (strings beginning with a backslash), even those placed between\n     brace pairs. Everything else is left unmodified. For instance, t\\^ete, t{\\^e}te and t{\\^{e}}te\n     are transformed into tete, while tête gives tête; Bib{\\TeX} gives Bib and Bib\\TeX becomes\n     BibTeX. There are thirteen LATEX commands that won’t follow the above rules: \\OE, \\ae, \\AE,\n     \\aa, \\AA, \\o, \\O, \\l, \\L, \\ss. Those commands correspond to ı, , œ, Œ, æ, Æ, å, Å, ø, Ø, ł, Ł,\n     ß, and purify$ transforms them (if they are in a special character, in i, j, oe, OE, ae, AE, aa,\n     AA, o, O, l, L, ss, respectively.\n     */\n    readonly sortkey$: string;\n\n    /**\n     the second transformation applied to a title is to be turned to lower case (except the first character).\n     The function named change.case$ does this job. But it only applies to letters that are\n     a brace depth 0, except within a special character. In a special character, brace depth is always\n     0, and letters are switched to lower case, except LATEX commands, that are left unmodified.\n     */\n    readonly title$: string;\n\n    constructor(type: string, id: string, fields: EntryFields) {\n        this.type = type;\n        this._id = id;\n\n        this.fields = fields;\n\n\n        // TODO implement; see above\n        this.sortkey$ = \"\";\n        this.title$ = \"\";\n    }\n\n    getField(key: string): FieldValue | undefined {\n        return this.fields[key];\n    }\n\n    getFieldAsString(key: string): string | number| undefined {\n        const field: FieldValue | undefined = this.getField(key);\n        return normalizeFieldValue(field);\n    }\n\n    getAuthors(): Authors | undefined {\n        const field = this.fields[\"author\"];\n        if (field === undefined) return field;\n        return mustBeAuthors(field);\n    }\n}\n\n\nexport interface EntryFields {\n    [k: string]: FieldValue;\n}\n\nexport function parseEntryFields(fields: any): EntryFields {\n    const fieldz: EntryFields = {};\n    Object.keys(fields).forEach(key => {\n        switch (key) {\n            default:\n                fieldz[key] = parseFieldValue(fields[key]);\n                break;\n        }\n    });\n    return fieldz;\n}\n\n\n\n\n// export function parseComplexStringOuter(obj: any): OuterQuotedString | OuterBracedString | number {\n//     if (isString(obj)) return [obj];\n//\n//     switch (mustBeString(obj.type)) {\n//         case \"quotedstringwrapper\":\n//         case \"bracedstringwrapper\":\n//             if (!isArray(obj.data))\n//                 throw new Error(\"Expect array for data: \" + JSON.stringify(obj));\n//\n//             return obj.data.map(parseStringy);\n//         default:\n//             throw new Error(\"Unexpected complex string type: \" + obj.type);\n//     }\n// }\n\n\nexport function isBibEntry(x: any): x is BibEntry {\n    return typeof x[\"type\"] === \"string\"\n        && typeof x[\"_id\"] === \"string\"\n        && !!x[\"fields\"];\n}\n\nexport function processEntry(entry: BibEntry, strings$: { [p: string]: FieldValue }) {\n    // TODO do something with this?\n    // if (hasMandatoryFields(entry.type))\n    //     mandatoryFields[entry.type]\n    //         .map(e => findError(entry, e))\n    //         .forEach(e => {\n    //             if (!!e) console.warn(e.message);\n    //         })\n    //     ;\n\n    const processedFields: EntryFields = {};\n\n    const fields$ = entry.fields;\n\n    Object.keys(entry.fields).forEach((key: string) => {\n        const field$ = resolveStringReference({}, processedFields, strings$, fields$[key]);\n        switch (key) {\n            case \"author\":\n                processedFields[key] = new Authors(field$);\n                break;\n            case \"title\":\n                processedFields[key] = (field$);\n                break;\n            case \"incollection\":\n                // TODO cross reference\n            default:\n                processedFields[key] = field$;\n                break;\n        }\n    });\n\n\n    return new BibEntry(\n        entry.type,\n        entry._id,\n        processedFields\n    );\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/bibfile/bib-entry/BibEntry.ts","import {mustBeArray} from \"../../util\";\nimport {parseBibEntriesAndNonEntries} from \"../BibFile\";\n\nexport class Preamble {\n    readonly type: string;\n    readonly data: any[];\n    readonly string: string;\n\n    // TODO\n    constructor(data: any[]) {\n        this.type = (\"preamble\");\n        this.data = data;\n        this.string = data.join(\"\");\n    }\n\n    toString() {\n        return this.string;\n    }\n}\n\nexport function isPreamble(x: any): x is Preamble {\n    return x.type === \"preamble\" && !!x.data;\n}\n\n\n// function parsePreambleContents(data: any) {\n//     if (isString(data)) return data;\n//     if (isString(data.type) && data.type === \"@bib\")\n//         return \"@\" + data.string;\n//     // if (isString(data.type) && data.type === \"NON_ENTRY\")\n//     //     return ;\n//     if (isString(data.string)) return data.string;\n//     return data;\n// }\n\nexport function newPreambleNode(data: any): Preamble {\n    const flattened = parseBibEntriesAndNonEntries(mustBeArray(data.data));\n    return new Preamble(flattened);\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/bibfile/bib-entry/BibPreamble.ts","import * as nearley from \"nearley\";\n\nimport {grammar} from \"../parser/ts-parser\";\n\nimport {isArray, mustBeString} from \"../util\";\nimport {FieldValue, isKeyVal} from \"./datatype/KeyVal\";\nimport {BibEntry, isBibEntry, parseEntryFields, processEntry} from \"./bib-entry/BibEntry\";\nimport {BibComment, CommentEntry, flattenPlainText, isBibComment} from \"./bib-entry/BibComment\";\nimport {isPreamble, Preamble, newPreambleNode} from \"./bib-entry/BibPreamble\";\nimport {newStringEntry, resolveStrings, BibStringEntry} from \"./bib-entry/BibStringEntry\";\nimport Lexer from \"../lexer/Lexer\";\n\n\nexport type NonBibComment = BibEntry | CommentEntry | BibStringEntry | Preamble;\n\n/**\n * A bibfile is a sequence of entries, with comments interspersed\n */\nexport class BibFilePresenter {\n    readonly content: (NonBibComment | BibComment)[];\n    readonly comments: BibComment[];\n\n    readonly entries_raw: BibEntry[];\n    readonly entries$: { [key: string]: BibEntry };\n\n    /**\n     * Anything declared in a @preamble command will be concatenated and put in a variable\n     named preamble$, for being used in the bibliography style and, generally, inserted at the beginning of\n     the .bbl file, just before the thebibliography environment. This is useful for defining new commands\n     used in the bibliography. Here is a small example:\n\n     \\@preamble{ \"\\makeatletter\" }\n     \\@preamble{ \"\\@ifundefined{url}{\\def\\url#1{\\texttt{#1}}}{}\" }\n     \\@preamble{ \"\\makeatother\" }\n\n     This way, you may safely use the \\url command in your entries. If it is not defined at the beginning\n     of the bibliography, the default command defined in the @preamble will be used.\n     Please note that you should never define style settings in the @preamble of a bibliography database,\n     since it would be applied to any bibliography built from this database.\n     */\n    readonly preambles_raw: Preamble[];\n    readonly preamble$: string;\n\n    readonly strings_raw: { [k: string]: FieldValue };\n    /**\n     * `strings`, but with all references resolved\n     */\n    readonly strings$: { [k: string]: FieldValue };\n\n\n    constructor(content: (NonBibComment | BibComment)[]) {\n        this.content = content;\n        this.comments = content.filter(isBibComment).map(c => {\n            if (isBibComment(c))return c; else throw new Error();\n        });\n\n\n\n        this.preambles_raw = content.filter(c => isPreamble(c)).map(c => {\n            if (isPreamble(c)) return c; else throw new Error();\n        });\n        this.preamble$ = this.preambles_raw.map(p => p.toString()).join(\"\\n\");\n\n        const strings: { [k: string]: FieldValue } = {};\n        this.content.forEach(entry => {\n                if (isKeyVal(entry)) {\n                    if (!!strings[entry.key])\n                        throw new Error(\"String with id \" + entry.key + \" was defined more than once\");\n                    strings[entry.key] = entry.value;\n                }\n            }\n        );\n\n        this.strings_raw = strings;\n        this.strings$ = resolveStrings(strings);\n\n        this.entries_raw = content.filter(c => isBibEntry(c)).map(c => {\n            if (isBibEntry(c)) return c;\n            else throw new Error();\n        });\n\n        const entryMap: { [k: string]: BibEntry } = {};\n        this.entries_raw.forEach((entry: BibEntry) => {\n            const key = entry._id;\n            /**\n             * BibTEX will complain if two entries have the same internal key, even if they aren’t capitalized in the same\n             * way. For instance, you cannot have two entries named Example and example.\n             * In the same way, if you cite both example and Example, BibTEX will complain. Indeed, it would\n             * have to include the same entry twice, which probably is not what you want\n             */\n            if (!!entryMap[key]) throw new Error(\"Entry with id \" + key + \" was defined more than once\");\n            entryMap[key] = processEntry(entry, this.strings$);\n        });\n        this.entries$ = entryMap;\n    }\n\n    getEntry(id: string): BibEntry | undefined {\n        return this.entries$[id];\n    }\n}\n\nfunction parseNonEntry(nonEntry: any): BibComment {\n    if (!isArray(nonEntry.data) || nonEntry.type !== \"NON_ENTRY\") throw new Error();\n    return new BibComment(flattenPlainText(nonEntry.data));\n}\n\n\nfunction parseEntry(entry: any): NonBibComment {\n    switch (typeof entry) {\n        case \"object\":\n            const data = entry.data;\n            if (typeof data[\"@type\"] === \"string\") {\n                return new BibEntry(\n                    data[\"@type\"],\n                    data._id,\n                    parseEntryFields(data.fields)\n                );\n            }\n\n            const type = mustBeString(data.type);\n            switch (type) {\n                case \"string\":\n                    return newStringEntry(data);\n                case \"preamble\":\n                    return newPreambleNode(data);\n                // case \"bracedstringwrapper\":\n                //     return new BracedString(parseComplexStringOuter(data));\n                // case \"quotedstringwrapper\":\n                //     return new QuotedString(parseComplexStringOuter(data));\n                // case \"braced\":\n                // case \"quotedstring\":\n                default:\n                    throw new Error(\"Unexpected entry parsed: \" + data.type);\n            }\n        default:\n            throw new Error(\"Expected object as data for entry\");\n    }\n}\n\nexport const parseBibEntriesAndNonEntries = function (parse: any): (BibComment | NonBibComment)[] {\n    return parse.map((entity: any) => {\n        switch (entity.type) {\n            case \"NON_ENTRY\":\n                return (parseNonEntry(entity));\n            case \"ENTRY\":\n                return (parseEntry(entity));\n            default:\n                throw new Error(\"Expected ENTRY or NON_ENTRY\");\n        }\n    });\n};\n\nexport function parseBibFile(input: string): BibFilePresenter {\n    const p = new nearley.Parser(grammar.ParserRules, grammar.ParserStart);\n    p.feed(new Lexer(input).readTokens());\n    const res = p.results;\n    const parse = res[0];\n\n    return new BibFilePresenter(parseBibEntriesAndNonEntries(parse));\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/bibfile/BibFile.ts","export type Token = TypedToken | string | number;\n\nexport interface TypedToken {\n    type: string;\n    string?: string;\n}\n\nexport function newToken(type: string, string: string): TypedToken {\n    return {\n        type,\n        string\n    };\n}\n\n\nexport const specialChars = {\n    \"@\": true,\n    \"(\": true,\n    \")\": true,\n    \"{\": true,\n    \"}\": true,\n    \"#\": true,\n    \"=\": true,\n    \",\": true,\n    \"\\\\\": true,\n    \"\\\"\": true,\n};\n\nexport type SpecialChar = keyof typeof specialChars;\n\nexport function isSpecialChar(c: string): c is SpecialChar {\n    return specialChars.hasOwnProperty(c);\n}\n\n\nexport const escapableChars = {\n    \"\\\\\": true,\n    \"@\": true,\n    \"{\": true,\n    \"}\": true\n};\n\nexport type EscapableChar = keyof typeof escapableChars;\n\nexport function isEscapableChar(c: string): c is EscapableChar {\n    return escapableChars.hasOwnProperty(c);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/lexer/Token.ts","import {TypedToken} from \"./Token\";\n\nexport const WS = \"ws\";\n\nexport function newWhitespace(string: string): WhitespaceToken {\n    return {\n        type: \"ws\",\n        string\n    };\n}\n\n//noinspection JSUnusedGlobalSymbols\nexport function isWhitespace(token: any): token is WhitespaceToken {\n    return typeof token.string === \"string\" && token.type === WS;\n}\n\n\nexport interface WhitespaceToken extends TypedToken {\n    type: \"ws\";\n}\n\nexport const singleWhitespaces = {\n    \" \": true,\n    \"\\t\": true,\n    \"\\r\": true,\n    \"\\n\": true\n};\n\nexport type SingleWhitespace = keyof typeof singleWhitespaces;\n\nexport function isSingleWhiteSpaceCharacter(c: string): c is SingleWhitespace {\n    return singleWhitespaces.hasOwnProperty(c);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/lexer/WhitespaceToken.ts","// export const NUMBER = \"number\";\n\nimport {TypedToken} from \"./Token\";\n\nexport function newNumber(string: string): NumberToken {\n    return {\n        type: \"number\",\n        string\n    };\n}\n\nexport interface NumberToken extends TypedToken {\n    type: \"number\";\n}\n\nexport const numericChars = {\n    \"0\": true,\n    \"1\": true,\n    \"2\": true,\n    \"3\": true,\n    \"4\": true,\n    \"5\": true,\n    \"6\": true,\n    \"7\": true,\n    \"8\": true,\n    \"9\": true\n};\n\nexport type NumericChar = keyof typeof numericChars;\n\nexport function isNum(c: string): c is NumericChar {\n    return numericChars.hasOwnProperty(c);\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/lexer/NumericToken.ts","export * from \"./bibfile/bib-entry/bibliographic-entity/Author\";\nexport * from \"./bibfile/bib-entry/bibliographic-entity/Authors\";\nexport * from \"./bibfile/bib-entry/bibliographic-entity/mandatory-and-optional-fields\";\nexport * from \"./bibfile/bib-entry/BibComment\";\nexport * from \"./bibfile/bib-entry/BibEntry\";\nexport * from \"./bibfile/bib-entry/BibPreamble\";\nexport * from \"./bibfile/bib-entry/BibStringEntry\";\nexport * from \"./bibfile/datatype/string/bib-string-utils\";\nexport * from \"./bibfile/datatype/string/BibStringComponent\";\nexport * from \"./bibfile/datatype/string/BibStringData\";\nexport * from \"./bibfile/datatype/string/BracedString\";\nexport * from \"./bibfile/datatype/string/QuotedString\";\nexport * from \"./bibfile/datatype/string/StringRef\";\nexport * from \"./bibfile/datatype/KeyVal\";\nexport * from \"./bibfile/BibFile\";\nexport * from \"./util\";\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/index.ts","import {isArray, isString} from \"../../../util\";\nimport {BibEntry} from \"../BibEntry\";\n\n/**\n * From Taming the BeaST: http://ctan.cs.uu.nl/info/bibtex/tamethebeast/ttb_en.pdf\n *\n <dl>\n\n <dt>address</dt>\n <dd>Generally the city or complete address of the publisher.\n </dd>\n\n <dt>author</dt>\n <dd>For author names. The input format is quite special, since BibTEX has to be\n able to distinguish between the first and last names. Section 11 and 18 are\n completely dedicated to this topic.\n </dd>\n\n <dt>booktitle</dt>\n <dd>For the title of a book one part of which is cited.\n </dd>\n\n <dt>chapter</dt>\n <dd>The number of the chapter (or any part) of a book being cited. If not a chapter,\n the type field might be used for precising the type of sectioning.\n </dd>\n\n <dt>crossref</dt>\n <dd>This one is quite peculiar. It’s used to cross-reference within the bibliography.\n For instance, you might cite a document, and a part of it. In that case, the\n second one can reference the first one, or at least inherit some of its fields from\n the first one. This deserves some more comments, see section 12.\n </dd>\n\n <dt>edition</dt>\n <dd>The edition number. Or in fact its ordinal, for instance edition = \"First\".\n This might raise problems when trying to export a bibliography into another\n language.\n </dd>\n\n <dt>editor</dt>\n <dd>The name of the editor(s) of the entry. The format is the same as for authors.\n </dd>\n\n <dt>howpublished</dt>\n <dd>Only used in rare cases where the document being cited is not a classical type\n such as a @book, an @article or an @inproceedings publication.\n </dd>\n\n <dt>institution</dt>\n <dd>For a technical report, the name of the institution that published it.\n </dd>\n\n <dt>journal</dt>\n <dd>The name of the journal in which the cited article has been published.\n key Used for defining the label, in case it cannot be computed by BibTEX. It does\n not force the label, but defines the label when BibTEX needs one but can’t\n compute it.\n </dd>\n\n <dt>month</dt>\n <dd>Well... The month during which the document has been published. This also\n raises the problem of the translation of the bibliography: It’s better having\n a numerical value, or an abbreviation, instead of the complete name of the\n month. Having the number would also allow BibTEX to sort the entries more\n precisely (even though, as far as I know, no bibliography style does this at the\n present time).\n </dd>\n\n <dt>note</dt>\n <dd>For any additional data you would want to add. Since classical styles were\n written in 1985, they don’t have a url field, and note is often used for this\n purpose, together with the url.sty package.</dd>\n\n <dt>number</dt>\n <dd>A number... Not whichever, but the number of a report. For volume numbers,\n a special volume field exists.\n organization The organizing institution of a conference.\n </dd>\n\n <dt>pages</dt>\n <dd>The relevant pages of the document. Useful for the reader when you cite a huge\n book; Note that such a precision could be added through the optional argument\n of \\cite (see page 6), in which case it would appear in the document but not\n in the bibliography.\n </dd>\n\n <dt>publisher</dt>\n <dd>The institution that published the document.\n </dd>\n\n <dt>school</dt>\n <dd>For theses, the name of the school the thesis has been prepared in.\n </dd>\n\n <dt>series</dt>\n <dd>The name of a collection of series or books.\n </dd>\n\n <dt>title</dt>\n <dd>The title of the document being cited. There are some rules to be observed\n when entering this field, see section 10.\n </dd>\n\n <dt>type</dt>\n <dd>The type. Which type? It depends... The type of publication, if needed. For\n </dd>\n\n <dt>thesi</dt>\n <dd>s, for instance, in order to distinguish between a masters thesis and a PhD.\n Or the type of section being cited (see chapter above).\n </dd>\n\n <dt>volume</dt>\n <dd>The volume number in a series or collection of books.\n </dd>\n\n <dt>year</dt>\n <dd>The publication year.</dd>\n\n </dl>\n **/\nexport const address = \"address\";\nexport const author = \"author\";\nexport const booktitle = \"booktitle\";\nexport const chapter = \"chapter\";\nexport const edition = \"edition\";\nexport const editor = \"editor\";\nexport const howpublished = \"howpublished\";\nexport const institution = \"institution\";\nexport const journal = \"journal\";\nexport const month = \"month\";\nexport const note = \"note\";\nexport const number = \"number\";\nexport const organization = \"organization\";\nexport const pages = \"pages\";\nexport const publisher = \"publisher\";\nexport const school = \"school\";\nexport const series = \"series\";\nexport const title = \"title\";\nexport const type = \"type\";\nexport const volume = \"volume\";\nexport const year = \"year\";\n\nexport type KnownField = \"address\" |\n    \"author\" |\n    \"booktitle\" |\n    \"chapter\" |\n    \"edition\" |\n    \"editor\" |\n    \"howpublished\" |\n    \"institution\" |\n    \"journal\" |\n    \"month\" |\n    \"note\" |\n    \"number\" |\n    \"organization\" |\n    \"pages\" |\n    \"publisher\" |\n    \"school\" |\n    \"series\" |\n    \"title\" |\n    \"type\" |\n    \"volume\" |\n    \"year\";\n\nexport type MandatoryFields = KnownField | KnownField[];\nexport type OptionalFields = KnownField | KnownField[];\n\nexport const optionalFields: { [k: string]: (KnownField | KnownField[])[] } = {\n    \"book\": [[\"volume\", \"number\"], \"series\", \"address\", \"edition\", \"month\", \"note\"],\n    \"booklet\": [\"author\", \"howpublished\", \"address\", \"address\", \"month\", \"year\", \"note\"],\n    \"conference\": [\"editor\", [\"volume\", \"number\"], \"series\", \"pages\", \"address\", \"month\", \"organization\", \"publisher\", \"note\"],\n    \"inproceedings\": [\"editor\", [\"volume\", \"number\"], series, \"pages\", \"address\", \"month\", \"organization\", \"publisher\", \"note\"],\n    \"inbook\": [\"volume\", \"number\", \"series\", \"type\", \"address\", \"edition\", \"month\", \"note\"],\n    \"incollection\": [\"editor\", [\"volume\", \"number\"], \"series\", \"type\", \"chapter\", \"pages\", \"address\", \"edition\", \"month\", \"note\"],\n    \"manual\": [\"author\", \"organization\", \"year\", \"address\", \"edition\", \"month\", \"note\"],\n    \"mastersthesis\": [\"type\", \"address\", \"month\", \"note\"],\n    \"misc\": [],\n    \"phdthesis\": [\"type\", \"address\", \"month\", \"note\"],\n    \"proceedings\": [\"editor\", [\"volume\", \"number\"], \"series\", \"address\", \"month\", \"organization\", \"publisher\", \"note\"],\n    \"techreport\": [\"type\", \"address\", \"number\", \"month\", \"note\"],\n    \"unpublished\": [\"month\", \"year\"]\n};\n\nexport const mandatoryFields: { [k: string]: (KnownField | KnownField[])[] } = {\n    \"article\": [\"author\", \"title\", \"year\", \"journal\"],\n    \"book\": [[\"author\", \"editor\"], \"title\", \"publisher\", \"year\"],\n    \"booklet\": [\"title\"],\n    \"conference\": [\"author\", \"title\", \"booktitle\", \"year\"],\n    \"inproceedings\": [\"author\", \"title\", \"booktitle\", \"year\"],\n    \"inbook\": [[\"author\", \"editor\"], \"title\", [\"chapter\", \"pages\"]],\n    \"incollection\": [\"author\", \"title\", \"booktitle\", \"publisher\", \"year\"],\n    \"manual\": [\"title\"],\n    \"mastersthesis\": [\"author\", \"title\", \"school\", \"year\"],\n    \"misc\": [[\"author\", \"title\", \"howpublished\", \"year\", \"month\", \"note\"]],\n    \"phdthesis\": [\"author\", \"title\", \"school\", \"year\"],\n    \"proceedings\": [\"year\", \"title\"],\n    \"techreport\": [\"author\", \"title\", \"institution\", \"year\"],\n    \"unpublished\": [\"author\", \"title\", \"note\"]\n};\n\nexport function hasOptionalFields(s: any): s is (keyof typeof optionalFields) {\n    return optionalFields.hasOwnProperty(s);\n}\n\nexport function hasMandatoryFields(s: any): s is (keyof typeof mandatoryFields) {\n    return mandatoryFields.hasOwnProperty(s);\n}\n\nexport function getMandatoryFields(s: string): MandatoryFields[] {\n    if (hasMandatoryFields(s)) {\n        return mandatoryFields[s];\n    } else {\n        return [];\n    }\n}\n\nexport function getOptionalFields(s: string): OptionalFields[] {\n    if (hasOptionalFields(s)) {\n        return optionalFields[s];\n    } else {\n        return [];\n    }\n}\n\nexport const findError = (entry: BibEntry, field: MandatoryFields): (Error | undefined) => {\n    const fields = entry.fields;\n    if (isString(field)) {\n        if (!fields[field])\n            return new Error(\"Warning: expected \" + entry.type + \" with id \" + entry._id\n                + \" to have the field: \" + field);\n    } else if (isArray(field)) {\n        const hasAllFields: boolean = field.reduce(\n            (acc: boolean, fieldName: KnownField): boolean => {\n                if (isString(fieldName)) {\n                    return (acc && fields.hasOwnProperty(fieldName));\n                }\n                else\n                    throw new Error();\n            }, true\n        );\n        if (!hasAllFields) {\n            // not one of a list of options\n            return new Error(\"Expected \" + entry.type + \" with id \" + entry._id\n                + \" to have one of the following fields: \" + field);\n        }\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/bibfile/bib-entry/bibliographic-entity/mandatory-and-optional-fields.ts","(function(root, factory) {\n    if (typeof module === 'object' && module.exports) {\n        module.exports = factory();\n    } else {\n        root.nearley = factory();\n    }\n}(this, function() {\n\nfunction Rule(name, symbols, postprocess) {\n    this.id = ++Rule.highestId;\n    this.name = name;\n    this.symbols = symbols;        // a list of literal | regex class | nonterminal\n    this.postprocess = postprocess;\n    return this;\n}\nRule.highestId = 0;\n\nRule.prototype.toString = function(withCursorAt) {\n    function stringifySymbolSequence (e) {\n        return e.literal ? JSON.stringify(e.literal) :\n               e.type ? '%' + e.type : e.toString();\n    }\n    var symbolSequence = (typeof withCursorAt === \"undefined\")\n                         ? this.symbols.map(stringifySymbolSequence).join(' ')\n                         : (   this.symbols.slice(0, withCursorAt).map(stringifySymbolSequence).join(' ')\n                             + \" ● \"\n                             + this.symbols.slice(withCursorAt).map(stringifySymbolSequence).join(' ')     );\n    return this.name + \" → \" + symbolSequence;\n}\n\n\n// a State is a rule at a position from a given starting point in the input stream (reference)\nfunction State(rule, dot, reference, wantedBy) {\n    this.rule = rule;\n    this.dot = dot;\n    this.reference = reference;\n    this.data = [];\n    this.wantedBy = wantedBy;\n    this.isComplete = this.dot === rule.symbols.length;\n}\n\nState.prototype.toString = function() {\n    return \"{\" + this.rule.toString(this.dot) + \"}, from: \" + (this.reference || 0);\n};\n\nState.prototype.nextState = function(child) {\n    var state = new State(this.rule, this.dot + 1, this.reference, this.wantedBy);\n    state.left = this;\n    state.right = child;\n    if (state.isComplete) {\n        state.data = state.build();\n    }\n    return state;\n};\n\nState.prototype.build = function() {\n    var children = [];\n    var node = this;\n    do {\n        children.push(node.right.data);\n        node = node.left;\n    } while (node.left);\n    children.reverse();\n    return children;\n};\n\nState.prototype.finish = function() {\n    if (this.rule.postprocess) {\n        this.data = this.rule.postprocess(this.data, this.reference, Parser.fail);\n    }\n};\n\n\nfunction Column(grammar, index) {\n    this.grammar = grammar;\n    this.index = index;\n    this.states = [];\n    this.wants = {}; // states indexed by the non-terminal they expect\n    this.scannable = []; // list of states that expect a token\n    this.completed = {}; // states that are nullable\n}\n\n\nColumn.prototype.process = function(nextColumn) {\n    var states = this.states;\n    var wants = this.wants;\n    var completed = this.completed;\n\n    for (var w = 0; w < states.length; w++) { // nb. we push() during iteration\n        var state = states[w];\n\n        if (state.isComplete) {\n            state.finish();\n            if (state.data !== Parser.fail) {\n                // complete\n                var wantedBy = state.wantedBy;\n                for (var i = wantedBy.length; i--; ) { // this line is hot\n                    var left = wantedBy[i];\n                    this.complete(left, state);\n                }\n\n                // special-case nullables\n                if (state.reference === this.index) {\n                    // make sure future predictors of this rule get completed.\n                    var exp = state.rule.name;\n                    (this.completed[exp] = this.completed[exp] || []).push(state);\n                }\n            }\n\n        } else {\n            // queue scannable states\n            var exp = state.rule.symbols[state.dot];\n            if (typeof exp !== 'string') {\n                this.scannable.push(state);\n                continue;\n            }\n\n            // predict\n            if (wants[exp]) {\n                wants[exp].push(state);\n\n                if (completed.hasOwnProperty(exp)) {\n                    var nulls = completed[exp];\n                    for (var i = 0; i < nulls.length; i++) {\n                        var right = nulls[i];\n                        this.complete(state, right);\n                    }\n                }\n            } else {\n                wants[exp] = [state];\n                this.predict(exp);\n            }\n        }\n    }\n}\n\nColumn.prototype.predict = function(exp) {\n    var rules = this.grammar.byName[exp] || [];\n\n    for (var i = 0; i < rules.length; i++) {\n        var r = rules[i];\n        var wantedBy = this.wants[exp];\n        var s = new State(r, 0, this.index, wantedBy);\n        this.states.push(s);\n    }\n}\n\nColumn.prototype.complete = function(left, right) {\n    var inp = right.rule.name;\n    if (left.rule.symbols[left.dot] === inp) {\n        var copy = left.nextState(right);\n        this.states.push(copy);\n    }\n}\n\n\nfunction Grammar(rules, start) {\n    this.rules = rules;\n    this.start = start || this.rules[0].name;\n    var byName = this.byName = {};\n    this.rules.forEach(function(rule) {\n        if (!byName.hasOwnProperty(rule.name)) {\n            byName[rule.name] = [];\n        }\n        byName[rule.name].push(rule);\n    });\n}\n\n// So we can allow passing (rules, start) directly to Parser for backwards compatibility\nGrammar.fromCompiled = function(rules, start) {\n    var lexer = rules.Lexer;\n    if (rules.ParserStart) {\n      start = rules.ParserStart;\n      rules = rules.ParserRules;\n    }\n    var rules = rules.map(function (r) { return (new Rule(r.name, r.symbols, r.postprocess)); });\n    var g = new Grammar(rules, start);\n    g.lexer = lexer; // nb. storing lexer on Grammar is iffy, but unavoidable\n    return g;\n}\n\n\nfunction StreamLexer() {\n  this.reset(\"\");\n}\n\nStreamLexer.prototype.reset = function(data, state) {\n    this.buffer = data;\n    this.index = 0;\n    this.line = state ? state.line : 1;\n    this.lastLineBreak = state ? -state.col : 0;\n}\n\nStreamLexer.prototype.next = function() {\n    if (this.index < this.buffer.length) {\n        var ch = this.buffer[this.index++];\n        if (ch === '\\n') {\n          this.line += 1;\n          this.lastLineBreak = this.index;\n        }\n        return {value: ch};\n    }\n}\n\nStreamLexer.prototype.save = function() {\n  return {\n    line: this.line,\n    col: this.index - this.lastLineBreak,\n  }\n}\n\nStreamLexer.prototype.formatError = function(token, message) {\n    // nb. this gets called after consuming the offending token,\n    // so the culprit is index-1\n    var buffer = this.buffer;\n    if (typeof buffer === 'string') {\n        var nextLineBreak = buffer.indexOf('\\n', this.index);\n        if (nextLineBreak === -1) nextLineBreak = buffer.length;\n        var line = buffer.substring(this.lastLineBreak, nextLineBreak)\n        var col = this.index - this.lastLineBreak;\n        message += \" at line \" + this.line + \" col \" + col + \":\\n\\n\";\n        message += \"  \" + line + \"\\n\"\n        message += \"  \" + Array(col).join(\" \") + \"^\"\n        return message;\n    } else {\n        return message + \" at index \" + (this.index - 1);\n    }\n}\n\n\nfunction Parser(rules, start, options) {\n    if (rules instanceof Grammar) {\n        var grammar = rules;\n        var options = start;\n    } else {\n        var grammar = Grammar.fromCompiled(rules, start);\n    }\n    this.grammar = grammar;\n\n    // Read options\n    this.options = {\n        keepHistory: false,\n        lexer: grammar.lexer || new StreamLexer,\n    };\n    for (var key in (options || {})) {\n        this.options[key] = options[key];\n    }\n\n    // Setup lexer\n    this.lexer = this.options.lexer;\n    this.lexerState = undefined;\n\n    // Setup a table\n    var column = new Column(grammar, 0);\n    var table = this.table = [column];\n\n    // I could be expecting anything.\n    column.wants[grammar.start] = [];\n    column.predict(grammar.start);\n    // TODO what if start rule is nullable?\n    column.process();\n    this.current = 0; // token index\n}\n\n// create a reserved token for indicating a parse fail\nParser.fail = {};\n\nParser.prototype.feed = function(chunk) {\n    var lexer = this.lexer;\n    lexer.reset(chunk, this.lexerState);\n\n    var token;\n    while (token = lexer.next()) {\n        // We add new states to table[current+1]\n        var column = this.table[this.current];\n\n        // GC unused states\n        if (!this.options.keepHistory) {\n            delete this.table[this.current - 1];\n        }\n\n        var n = this.current + 1;\n        var nextColumn = new Column(this.grammar, n);\n        this.table.push(nextColumn);\n\n        // Advance all tokens that expect the symbol\n        var literal = token.value;\n        var value = lexer.constructor === StreamLexer ? token.value : token;\n        var scannable = column.scannable;\n        for (var w = scannable.length; w--; ) {\n            var state = scannable[w];\n            var expect = state.rule.symbols[state.dot];\n            // Try to consume the token\n            // either regex or literal\n            if (expect.test ? expect.test(value) :\n                expect.type ? expect.type === token.type\n                            : expect.literal === literal) {\n                // Add it\n                var next = state.nextState({data: value, token: token, isToken: true, reference: n - 1});\n                nextColumn.states.push(next);\n            }\n        }\n\n        // Next, for each of the rules, we either\n        // (a) complete it, and try to see if the reference row expected that\n        //     rule\n        // (b) predict the next nonterminal it expects by adding that\n        //     nonterminal's start state\n        // To prevent duplication, we also keep track of rules we have already\n        // added\n\n        nextColumn.process();\n\n        // If needed, throw an error:\n        if (nextColumn.states.length === 0) {\n            // No states at all! This is not good.\n            var message = this.lexer.formatError(token, \"invalid syntax\") + \"\\n\";\n            message += \"Unexpected \" + (token.type ? token.type + \" token: \" : \"\");\n            message += JSON.stringify(token.value !== undefined ? token.value : token) + \"\\n\";\n            var err = new Error(message);\n            err.offset = this.current;\n            err.token = token;\n            throw err;\n        }\n\n        // maybe save lexer state\n        if (this.options.keepHistory) {\n          column.lexerState = lexer.save()\n        }\n\n        this.current++;\n    }\n    if (column) {\n      this.lexerState = lexer.save()\n    }\n\n    // Incrementally keep track of results\n    this.results = this.finish();\n\n    // Allow chaining, for whatever it's worth\n    return this;\n};\n\nParser.prototype.save = function() {\n    var column = this.table[this.current];\n    column.lexerState = this.lexerState;\n    return column;\n};\n\nParser.prototype.restore = function(column) {\n    var index = column.index;\n    this.current = index;\n    this.table[index] = column;\n    this.table.splice(index + 1);\n    this.lexerState = column.lexerState;\n\n    // Incrementally keep track of results\n    this.results = this.finish();\n};\n\n// nb. deprecated: use save/restore instead!\nParser.prototype.rewind = function(index) {\n    if (!this.options.keepHistory) {\n        throw new Error('set option `keepHistory` to enable rewinding')\n    }\n    // nb. recall column (table) indicies fall between token indicies.\n    //        col 0   --   token 0   --   col 1\n    this.restore(this.table[index]);\n};\n\nParser.prototype.finish = function() {\n    // Return the possible parsings\n    var considerations = [];\n    var start = this.grammar.start;\n    var column = this.table[this.table.length - 1]\n    column.states.forEach(function (t) {\n        if (t.rule.name === start\n                && t.dot === t.rule.symbols.length\n                && t.reference === 0\n                && t.data !== Parser.fail) {\n            considerations.push(t);\n        }\n    });\n    return considerations.map(function(c) {return c.data; });\n};\n\nreturn {\n    Parser: Parser,\n    Grammar: Grammar,\n    Rule: Rule,\n};\n\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/nearley/lib/nearley.js\n// module id = 19\n// module chunks = 0","function id(x) {\n    return x[0];\n}\n\nconst isNumber = function (x) {\n    return x.constructor === Number || (typeof x === \"object\" && x.type === \"number\");\n};\nconst tok_id = {\n    test: function (x) {\n        return typeof x === \"object\" && x.type === \"id\";\n    }\n};\nconst entry_type_bib = {\n    test: function (x) {\n        return typeof x === \"object\" && x.type === \"@bib\";\n    }\n};\nconst entry_type_string = {\n    test: function (x) {\n        return typeof x === \"object\" && x.type === \"@string\";\n    }\n};\nconst entry_type_preamble = {\n    test: function (x) {\n        return typeof x === \"object\" && x.type === \"@preamble\";\n    }\n};\nconst entry_type_comment = {\n    test: function (x) {\n        return typeof x === \"object\" && x.type === \"@comment\";\n    }\n};\nconst ws: any = {\n    test: function (x) {\n        return typeof x === \"object\" && x.type === \"ws\";\n    }\n};\nconst num: any = {test: isNumber};\nconst pound: any = {literal: \"#\"};\nconst eq: any = {literal: \"=\"};\nconst esc: any = {literal: \"\\\\\"};\nconst paren_l = {literal: \"(\"};\nconst paren_r = {literal: \")\"};\nconst brace_l = {literal: \"{\"};\nconst brace_r = {literal: \"}\"};\nconst quote_dbl = {literal: \"\\\"\"};\nconst comma: any = {literal: \",\"};\n\n\nfunction addToObj(obj, keyval) {\n    if (keyval.type !== \"keyval\") throw new Error(\"Expected a keyval object\");\n    const key = keyval.key.toLowerCase();\n    if (obj.fields[key]) {\n        // TODO error?\n        // console.log(\"WARNING: field '\" + key + \"' was already defined on \" + obj[\"@type\"] + \" object with id '\" + obj._id + \"'. Ignoring this value.\");\n        return;\n    } else {\n        obj.fields[key] = keyval.value;\n        return obj;\n    }\n}\n\nfunction joinTokens(arr) {\n    const strs: any = [];\n    for (let i = 0; i < arr.length; i++) {\n        if (typeof arr[i] === \"object\") {\n            if (!arr[i].string) throw new Error(\"Expected token to have a string field called 'string' in object \" + JSON.stringify(arr[i]));\n            strs.push(arr[i].string);\n        } else if (typeof arr[i] === \"string\" || typeof arr[i] === \"number\") {\n            strs.push(arr[i]);\n        } else throw new Error(\"Could not handle token \" + JSON.stringify(arr[i]) + \" in array \" + JSON.stringify(arr));\n    }\n    return strs.join(\"\");\n}\n\nexport const grammar: any = {\n    Lexer: undefined,\n    ParserRules: [\n        {\"name\": \"main$ebnf$1\", \"symbols\": [\"non_entry\"], \"postprocess\": id},\n        {\n            \"name\": \"main$ebnf$1\", \"symbols\": [], \"postprocess\": function () {\n            return undefined;\n        }\n        },\n        {\"name\": \"main$ebnf$2\", \"symbols\": []},\n        {\"name\": \"main$ebnf$2$subexpression$1$ebnf$1\", \"symbols\": [\"non_entry\"], \"postprocess\": id},\n        {\n            \"name\": \"main$ebnf$2$subexpression$1$ebnf$1\", \"symbols\": [], \"postprocess\": function () {\n            return undefined;\n        }\n        },\n        {\"name\": \"main$ebnf$2$subexpression$1\", \"symbols\": [\"entry\", \"main$ebnf$2$subexpression$1$ebnf$1\"]},\n        {\n            \"name\": \"main$ebnf$2\",\n            \"symbols\": [\"main$ebnf$2\", \"main$ebnf$2$subexpression$1\"],\n            \"postprocess\": function arrpush(d) {\n                return d[0].concat([d[1]]);\n            }\n        },\n        {\n            \"name\": \"main\",\n            \"symbols\": [\"main$ebnf$1\", \"main$ebnf$2\"],\n            \"postprocess\": function (data) {\n                const topLevelObjects: any = [];\n                // console.log(JSON.stringify(data));\n                if (data[0])\n                    topLevelObjects.push({type: \"NON_ENTRY\", data: data[0]});\n\n                for (let i = 0; i < data[1].length; i++) {\n\n                    topLevelObjects.push({type: \"ENTRY\", data: data[1][i][0]});\n\n                    if (data[1][i][1])\n                        topLevelObjects.push({type: \"NON_ENTRY\", data: data[1][i][1]});\n                }\n                return topLevelObjects;\n            }\n        },\n        {\"name\": \"_$ebnf$1\", \"symbols\": []},\n        {\n            \"name\": \"_$ebnf$1\", \"symbols\": [\"_$ebnf$1\", ws], \"postprocess\": function arrpush(d) {\n            return d[0].concat([d[1]]);\n        }\n        },\n        {\"name\": \"_\", \"symbols\": [\"_$ebnf$1\"]},\n        {\"name\": \"entry_decl$subexpression$1\", \"symbols\": [entry_type_bib]},\n        {\"name\": \"entry_decl$subexpression$1\", \"symbols\": [entry_type_string]},\n        {\"name\": \"entry_decl$subexpression$1\", \"symbols\": [entry_type_preamble]},\n        {\"name\": \"entry_decl$subexpression$1\", \"symbols\": [entry_type_comment]},\n        {\n            \"name\": \"entry_decl\",\n            \"symbols\": [\"entry_decl$subexpression$1\"],\n            \"postprocess\": function (data) {\n                return data[0][0];\n            }\n        },\n        {\"name\": \"entry$subexpression$1\", \"symbols\": [\"bib_entry\"]},\n        {\"name\": \"entry$subexpression$1\", \"symbols\": [\"string_entry\"]},\n        {\"name\": \"entry$subexpression$1\", \"symbols\": [\"preamble_entry\"]},\n        {\"name\": \"entry$subexpression$1\", \"symbols\": [\"comment_entry\"]},\n        {\n            \"name\": \"entry\", \"symbols\": [\"entry$subexpression$1\"], \"postprocess\": function (data) {\n            return data[0][0];\n        }\n        },\n        {\n            \"name\": \"comment\", \"symbols\": [\"main\"], \"postprocess\": function (data) {\n            return data[0];\n        }\n        },\n        {\"name\": \"comment_liberal$ebnf$1\", \"symbols\": []},\n        {\"name\": \"comment_liberal$ebnf$1$subexpression$1\", \"symbols\": [/./]},\n        {\n            \"name\": \"comment_liberal$ebnf$1\",\n            \"symbols\": [\"comment_liberal$ebnf$1\", \"comment_liberal$ebnf$1$subexpression$1\"],\n            \"postprocess\": function arrpush(d) {\n                return d[0].concat([d[1]]);\n            }\n        },\n        {\n            \"name\": \"comment_liberal\",\n            \"symbols\": [\"comment_liberal$ebnf$1\"],\n            \"postprocess\": function (data) {\n                const toeknz: any = [];\n                for (let tk = 0; tk < data[0].length; tk++)\n                    toeknz.push(data[0][tk][0]);\n                return toeknz;\n            }\n        },\n        {\"name\": \"entry_body_comment$subexpression$1$macrocall$2\", \"symbols\": [\"comment\"]},\n        {\n            \"name\": \"entry_body_comment$subexpression$1$macrocall$1\",\n            \"symbols\": [paren_l, \"entry_body_comment$subexpression$1$macrocall$2\", paren_r],\n            \"postprocess\": function (data) {\n                return data[1];\n            }\n        },\n        {\"name\": \"entry_body_comment$subexpression$1\", \"symbols\": [\"entry_body_comment$subexpression$1$macrocall$1\"]},\n        {\"name\": \"entry_body_comment$subexpression$1$macrocall$4\", \"symbols\": [\"comment\"]},\n        {\n            \"name\": \"entry_body_comment$subexpression$1$macrocall$3\",\n            \"symbols\": [brace_l, \"entry_body_comment$subexpression$1$macrocall$4\", brace_r],\n            \"postprocess\": function (data) {\n                return data[1];\n            }\n        },\n        {\"name\": \"entry_body_comment$subexpression$1\", \"symbols\": [\"entry_body_comment$subexpression$1$macrocall$3\"]},\n        {\n            \"name\": \"entry_body_comment\",\n            \"symbols\": [\"entry_body_comment$subexpression$1\"],\n            \"postprocess\": function (data) {\n                return data[0][0][0];\n            }\n        },\n        {\"name\": \"entry_body_string$subexpression$1$macrocall$2\", \"symbols\": [\"keyval\"]},\n        {\n            \"name\": \"entry_body_string$subexpression$1$macrocall$1\",\n            \"symbols\": [paren_l, \"_\", \"entry_body_string$subexpression$1$macrocall$2\", \"_\", paren_r],\n            \"postprocess\": function (data) {\n                return data[2];\n            }\n        },\n        {\"name\": \"entry_body_string$subexpression$1\", \"symbols\": [\"entry_body_string$subexpression$1$macrocall$1\"]},\n        {\"name\": \"entry_body_string$subexpression$1$macrocall$4\", \"symbols\": [\"keyval\"]},\n        {\n            \"name\": \"entry_body_string$subexpression$1$macrocall$3\",\n            \"symbols\": [brace_l, \"_\", \"entry_body_string$subexpression$1$macrocall$4\", \"_\", brace_r],\n            \"postprocess\": function (data) {\n                return data[2];\n            }\n        },\n        {\"name\": \"entry_body_string$subexpression$1\", \"symbols\": [\"entry_body_string$subexpression$1$macrocall$3\"]},\n        {\n            \"name\": \"entry_body_string\",\n            \"symbols\": [\"entry_body_string$subexpression$1\"],\n            \"postprocess\": function (data) {\n                return data[0][0][0];\n            }\n        },\n        {\"name\": \"entry_body_bib$subexpression$1$macrocall$2\", \"symbols\": [\"bib_content\"]},\n        {\n            \"name\": \"entry_body_bib$subexpression$1$macrocall$1\",\n            \"symbols\": [paren_l, \"_\", \"entry_body_bib$subexpression$1$macrocall$2\", \"_\", paren_r],\n            \"postprocess\": function (data) {\n                return data[2];\n            }\n        },\n        {\"name\": \"entry_body_bib$subexpression$1\", \"symbols\": [\"entry_body_bib$subexpression$1$macrocall$1\"]},\n        {\"name\": \"entry_body_bib$subexpression$1$macrocall$4\", \"symbols\": [\"bib_content\"]},\n        {\n            \"name\": \"entry_body_bib$subexpression$1$macrocall$3\",\n            \"symbols\": [brace_l, \"_\", \"entry_body_bib$subexpression$1$macrocall$4\", \"_\", brace_r],\n            \"postprocess\": function (data) {\n                return data[2];\n            }\n        },\n        {\"name\": \"entry_body_bib$subexpression$1\", \"symbols\": [\"entry_body_bib$subexpression$1$macrocall$3\"]},\n        {\n            \"name\": \"entry_body_bib\",\n            \"symbols\": [\"entry_body_bib$subexpression$1\"],\n            \"postprocess\": function (data) {\n                return data[0][0][0];\n            }\n        },\n        {\"name\": \"bib_content$ebnf$1\", \"symbols\": []},\n        {\"name\": \"bib_content$ebnf$1$subexpression$1\", \"symbols\": [\"keyval\", \"_\", comma, \"_\"]},\n        {\n            \"name\": \"bib_content$ebnf$1\",\n            \"symbols\": [\"bib_content$ebnf$1\", \"bib_content$ebnf$1$subexpression$1\"],\n            \"postprocess\": function arrpush(d) {\n                return d[0].concat([d[1]]);\n            }\n        },\n        {\"name\": \"bib_content$ebnf$2$subexpression$1\", \"symbols\": [\"_\", comma]},\n        {\"name\": \"bib_content$ebnf$2\", \"symbols\": [\"bib_content$ebnf$2$subexpression$1\"], \"postprocess\": id},\n        {\n            \"name\": \"bib_content$ebnf$2\", \"symbols\": [], \"postprocess\": function () {\n            return undefined;\n        }\n        },\n        {\n            \"name\": \"bib_content\",\n            \"symbols\": [\"key_string\", \"_\", comma, \"_\", \"bib_content$ebnf$1\", \"keyval\", \"bib_content$ebnf$2\"],\n            \"postprocess\": function (data) {\n                const obj: any = {\n                    _id: data[0],\n                    fields: []\n                };\n                const keyvals = data[4];\n                for (let kv = 0; kv < keyvals.length; kv++) {\n                    obj.fields.push(keyvals[kv][0]);\n                }\n                obj.fields.push(data[5]);\n                return obj;\n            }\n        },\n        {\n            \"name\": \"bib_entry\",\n            \"symbols\": [entry_type_bib, \"_\", \"entry_body_bib\"],\n            \"postprocess\": function (data) {\n                const obj: any = {\n                    _id: data[2]._id\n                };\n                obj[\"@type\"] = data[0].string;\n                obj.fields = {};\n\n                const keyvals = data[2].fields;\n                for (let kv = 0; kv < keyvals.length; kv++) {\n                    addToObj(obj, keyvals[kv]);\n                }\n                return obj;\n            }\n        },\n        {\n            \"name\": \"string_entry\",\n            \"symbols\": [entry_type_string, \"_\", \"entry_body_string\"],\n            \"postprocess\": function (data) {\n                return {type: \"string\", data: data[2]};\n            }\n        },\n        {\n            \"name\": \"preamble_entry\",\n            \"symbols\": [entry_type_preamble, \"_\", \"entry_body_comment\"],\n            \"postprocess\": function (data) {\n                return {type: \"preamble\", data: data[2]};\n            }\n        },\n        {\n            \"name\": \"comment_entry\",\n            \"symbols\": [entry_type_comment, \"_\", \"entry_body_comment\"],\n            \"postprocess\": function (data) {\n                return {type: \"comment\", data: data[2]};\n            }\n        },\n        {\n            \"name\": \"keyval\",\n            \"symbols\": [\"key_string\", \"_\", eq, \"_\", \"value_string\"],\n            \"postprocess\": function (data) {\n                return {type: \"keyval\", key: data[0], value: data[4]};\n            }\n        },\n        {\"name\": \"braced_string$ebnf$1\", \"symbols\": []},\n        {\"name\": \"braced_string$ebnf$1$subexpression$1\", \"symbols\": [\"non_brace\"]},\n        {\"name\": \"braced_string$ebnf$1$subexpression$1\", \"symbols\": [\"braced_string\"]},\n        {\n            \"name\": \"braced_string$ebnf$1\",\n            \"symbols\": [\"braced_string$ebnf$1\", \"braced_string$ebnf$1$subexpression$1\"],\n            \"postprocess\": function arrpush(d) {\n                return d[0].concat([d[1]]);\n            }\n        },\n        {\n            \"name\": \"braced_string\",\n            \"symbols\": [brace_l, \"braced_string$ebnf$1\", brace_r],\n            \"postprocess\": function (data) {\n                const tkz: any = [];\n                for (const i in data[1]) tkz.push(data[1][i][0]);\n                return {type: \"braced\", data: tkz};\n            }\n\n        },\n        {\"name\": \"quoted_string$ebnf$1\", \"symbols\": []},\n        {\"name\": \"quoted_string$ebnf$1$subexpression$1\", \"symbols\": [\"escaped_quote\"]},\n        {\"name\": \"quoted_string$ebnf$1$subexpression$1\", \"symbols\": [\"non_quote_non_brace\"]},\n        {\"name\": \"quoted_string$ebnf$1$subexpression$1\", \"symbols\": [\"braced_string\"]},\n        {\n            \"name\": \"quoted_string$ebnf$1\",\n            \"symbols\": [\"quoted_string$ebnf$1\", \"quoted_string$ebnf$1$subexpression$1\"],\n            \"postprocess\": function arrpush(d) {\n                return d[0].concat([d[1]]);\n            }\n        },\n        {\n            \"name\": \"quoted_string\",\n            \"symbols\": [quote_dbl, \"quoted_string$ebnf$1\", quote_dbl],\n            \"postprocess\": function (data) {\n                const tks: any = [];\n                for (const i in data[1]) tks.push(data[1][i][0]);\n                return {type: \"quotedstring\", data: tks};\n            }\n        },\n        {\"name\": \"escaped_quote\", \"symbols\": [esc, quote_dbl]},\n        {\"name\": \"non_quote_non_brace$subexpression$1\", \"symbols\": [tok_id]},\n        {\"name\": \"non_quote_non_brace$subexpression$1\", \"symbols\": [entry_type_bib]},\n        {\"name\": \"non_quote_non_brace$subexpression$1\", \"symbols\": [entry_type_string]},\n        {\"name\": \"non_quote_non_brace$subexpression$1\", \"symbols\": [entry_type_preamble]},\n        {\"name\": \"non_quote_non_brace$subexpression$1\", \"symbols\": [entry_type_comment]},\n        {\"name\": \"non_quote_non_brace$subexpression$1\", \"symbols\": [ws]},\n        {\"name\": \"non_quote_non_brace$subexpression$1\", \"symbols\": [num]},\n        {\"name\": \"non_quote_non_brace$subexpression$1\", \"symbols\": [pound]},\n        {\"name\": \"non_quote_non_brace$subexpression$1\", \"symbols\": [eq]},\n        {\"name\": \"non_quote_non_brace$subexpression$1\", \"symbols\": [esc]},\n        {\"name\": \"non_quote_non_brace$subexpression$1\", \"symbols\": [paren_l]},\n        {\"name\": \"non_quote_non_brace$subexpression$1\", \"symbols\": [paren_r]},\n        {\"name\": \"non_quote_non_brace$subexpression$1\", \"symbols\": [comma]},\n        {\"name\": \"non_quote_non_brace\", \"symbols\": [\"non_quote_non_brace$subexpression$1\"]},\n        {\"name\": \"key_string$ebnf$1\", \"symbols\": [\"stringreftoken\"]},\n        {\n            \"name\": \"key_string$ebnf$1\",\n            \"symbols\": [\"key_string$ebnf$1\", \"stringreftoken\"],\n            \"postprocess\": function arrpush(d) {\n                return d[0].concat([d[1]]);\n            }\n        },\n        {\n            \"name\": \"key_string\", \"symbols\": [\"key_string$ebnf$1\"], \"postprocess\": function (data) {\n            return joinTokens(data[0]).toLowerCase();\n        }\n        },\n        {\"name\": \"value_string$subexpression$1$ebnf$1\", \"symbols\": []},\n        {\n            \"name\": \"value_string$subexpression$1$ebnf$1$subexpression$1\",\n            \"symbols\": [\"_\", pound, \"_\", \"quoted_string_or_ref\"]\n        },\n        {\n            \"name\": \"value_string$subexpression$1$ebnf$1\",\n            \"symbols\": [\"value_string$subexpression$1$ebnf$1\", \"value_string$subexpression$1$ebnf$1$subexpression$1\"],\n            \"postprocess\": function arrpush(d) {\n                return d[0].concat([d[1]]);\n            }\n        },\n        {\n            \"name\": \"value_string$subexpression$1\",\n            \"symbols\": [\"quoted_string_or_ref\", \"value_string$subexpression$1$ebnf$1\"]\n        },\n        {\"name\": \"value_string$subexpression$1\", \"symbols\": [\"braced_string\"]},\n        {\n            \"name\": \"value_string\",\n            \"symbols\": [\"value_string$subexpression$1\"],\n            \"postprocess\": function (data) {\n                // console.log(\"DATA\",JSON.stringify(data));\n                const match = data[0];\n                if (match.length === 2) {\n                    // quoted string\n                    const tokenz: any = [];\n                    tokenz.push(match[0]);\n                    for (let i = 0; i < match[1].length; i++) tokenz.push(match[1][i][3]);\n                    return {type: \"quotedstringwrapper\", data: tokenz};\n                } else if (match[0].type === \"braced\")\n                    return {type: \"bracedstringwrapper\", data: match[0].data};\n                // else if(isNumber(match[0]) return [match[0]];\n                else throw new Error(\"Don't know how to handle value \" + JSON.stringify(match[0]));\n            }\n        },\n        {\"name\": \"quoted_string_or_ref$subexpression$1\", \"symbols\": [\"quoted_string\"]},\n        {\"name\": \"quoted_string_or_ref$subexpression$1\", \"symbols\": [\"string_ref\"]},\n        {\"name\": \"quoted_string_or_ref$subexpression$1\", \"symbols\": [num]},\n        {\n            \"name\": \"quoted_string_or_ref\",\n            \"symbols\": [\"quoted_string_or_ref$subexpression$1\"],\n            \"postprocess\": function (data) {\n                // console.log(data);\n                if (data[0][0].type === \"quotedstring\") return data[0][0];\n                else {\n                    return data[0][0];\n                }\n            }\n        },\n        {\"name\": \"string_ref$subexpression$1$ebnf$1\", \"symbols\": []},\n        {\n            \"name\": \"string_ref$subexpression$1$ebnf$1\",\n            \"symbols\": [\"string_ref$subexpression$1$ebnf$1\", \"stringreftoken\"],\n            \"postprocess\": function arrpush(d) {\n                return d[0].concat([d[1]]);\n            }\n        },\n        {\n            \"name\": \"string_ref$subexpression$1\",\n            \"symbols\": [\"stringreftoken_n_num\", \"string_ref$subexpression$1$ebnf$1\"]\n        },\n        {\n            \"name\": \"string_ref\",\n            \"symbols\": [\"string_ref$subexpression$1\"],\n            \"postprocess\": function (data) {\n                const str = data[0][0] + joinTokens(data[0][1]);\n                return {stringref: str};\n            }\n        },\n        {\"name\": \"stringreftoken$subexpression$1\", \"symbols\": [esc]},\n        {\"name\": \"stringreftoken$subexpression$1\", \"symbols\": [paren_l]},\n        {\"name\": \"stringreftoken$subexpression$1\", \"symbols\": [paren_r]},\n        {\"name\": \"stringreftoken$subexpression$1\", \"symbols\": [tok_id]},\n        {\"name\": \"stringreftoken$subexpression$1\", \"symbols\": [num]},\n        {\"name\": \"stringreftoken$subexpression$1\", \"symbols\": [entry_type_bib]},\n        {\"name\": \"stringreftoken$subexpression$1\", \"symbols\": [entry_type_string]},\n        {\"name\": \"stringreftoken$subexpression$1\", \"symbols\": [entry_type_preamble]},\n        {\"name\": \"stringreftoken$subexpression$1\", \"symbols\": [entry_type_comment]},\n        {\n            \"name\": \"stringreftoken\",\n            \"symbols\": [\"stringreftoken$subexpression$1\"],\n            \"postprocess\": function (data) {\n                if (typeof data[0][0] === \"object\") {\n                    if (!data[0][0].string) throw new Error(\"Expected \" + data[0] + \"to have a 'string' field\");\n                    return data[0][0].string;\n                } else {\n                    if ((!(typeof data[0][0] === \"string\" || typeof data[0][0] === \"number\")))\n                        throw new Error(\"Expected \" + data[0][0] + \" to be a string\");\n                    return data[0][0];\n                }\n            }\n        },\n        {\"name\": \"stringreftoken_n_num$subexpression$1\", \"symbols\": [esc]},\n        {\"name\": \"stringreftoken_n_num$subexpression$1\", \"symbols\": [paren_l]},\n        {\"name\": \"stringreftoken_n_num$subexpression$1\", \"symbols\": [paren_r]},\n        {\"name\": \"stringreftoken_n_num$subexpression$1\", \"symbols\": [tok_id]},\n        {\"name\": \"stringreftoken_n_num$subexpression$1\", \"symbols\": [entry_type_bib]},\n        {\"name\": \"stringreftoken_n_num$subexpression$1\", \"symbols\": [entry_type_string]},\n        {\"name\": \"stringreftoken_n_num$subexpression$1\", \"symbols\": [entry_type_preamble]},\n        {\"name\": \"stringreftoken_n_num$subexpression$1\", \"symbols\": [entry_type_comment]},\n        {\n            \"name\": \"stringreftoken_n_num\",\n            \"symbols\": [\"stringreftoken_n_num$subexpression$1\"],\n            \"postprocess\": function (data) {\n                if (typeof data[0][0] === \"object\") {\n                    if (!data[0][0].string) throw new Error(\"Expected \" + data[0] + \"to have a 'string' field\");\n                    return data[0][0].string;\n                } else {\n                    if ((!(typeof data[0][0] === \"string\" || typeof data[0][0] === \"number\")))\n                        throw new Error(\"Expected \" + data[0][0] + \" to be a string\");\n                    return data[0][0];\n                }\n            }\n        },\n        {\"name\": \"non_brace$subexpression$1\", \"symbols\": [esc]},\n        {\"name\": \"non_brace$subexpression$1\", \"symbols\": [paren_l]},\n        {\"name\": \"non_brace$subexpression$1\", \"symbols\": [paren_r]},\n        {\"name\": \"non_brace$subexpression$1\", \"symbols\": [tok_id]},\n        {\"name\": \"non_brace$subexpression$1\", \"symbols\": [quote_dbl]},\n        {\"name\": \"non_brace$subexpression$1\", \"symbols\": [ws]},\n        {\"name\": \"non_brace$subexpression$1\", \"symbols\": [num]},\n        {\"name\": \"non_brace$subexpression$1\", \"symbols\": [comma]},\n        {\"name\": \"non_brace$subexpression$1\", \"symbols\": [entry_type_bib]},\n        {\"name\": \"non_brace$subexpression$1\", \"symbols\": [entry_type_string]},\n        {\"name\": \"non_brace$subexpression$1\", \"symbols\": [entry_type_preamble]},\n        {\"name\": \"non_brace$subexpression$1\", \"symbols\": [entry_type_comment]},\n        {\"name\": \"non_brace$subexpression$1\", \"symbols\": [pound]},\n        {\"name\": \"non_brace$subexpression$1\", \"symbols\": [eq]},\n        {\n            \"name\": \"non_brace\",\n            \"symbols\": [\"non_brace$subexpression$1\"],\n            \"postprocess\": function (data) {\n                return data[0][0];\n            }\n        },\n        {\"name\": \"non_bracket$subexpression$1\", \"symbols\": [esc]},\n        {\"name\": \"non_bracket$subexpression$1\", \"symbols\": [tok_id]},\n        {\"name\": \"non_bracket$subexpression$1\", \"symbols\": [quote_dbl]},\n        {\"name\": \"non_bracket$subexpression$1\", \"symbols\": [ws]},\n        {\"name\": \"non_bracket$subexpression$1\", \"symbols\": [num]},\n        {\"name\": \"non_bracket$subexpression$1\", \"symbols\": [comma]},\n        {\"name\": \"non_bracket$subexpression$1\", \"symbols\": [entry_type_bib]},\n        {\"name\": \"non_bracket$subexpression$1\", \"symbols\": [entry_type_string]},\n        {\"name\": \"non_bracket$subexpression$1\", \"symbols\": [entry_type_preamble]},\n        {\"name\": \"non_bracket$subexpression$1\", \"symbols\": [entry_type_comment]},\n        {\"name\": \"non_bracket$subexpression$1\", \"symbols\": [pound]},\n        {\"name\": \"non_bracket$subexpression$1\", \"symbols\": [eq]},\n        {\n            \"name\": \"non_bracket\",\n            \"symbols\": [\"non_bracket$subexpression$1\"],\n            \"postprocess\": function (data) {\n                return data[0][0];\n            }\n        },\n        {\"name\": \"non_entry$ebnf$1$subexpression$1\", \"symbols\": [\"escaped_entry\"]},\n        {\"name\": \"non_entry$ebnf$1$subexpression$1\", \"symbols\": [\"escaped_escape\"]},\n        {\"name\": \"non_entry$ebnf$1$subexpression$1\", \"symbols\": [\"escaped_non_esc_outside_entry\"]},\n        {\"name\": \"non_entry$ebnf$1$subexpression$1\", \"symbols\": [\"non_esc_outside_entry\"]},\n        {\"name\": \"non_entry$ebnf$1\", \"symbols\": [\"non_entry$ebnf$1$subexpression$1\"]},\n        {\"name\": \"non_entry$ebnf$1$subexpression$2\", \"symbols\": [\"escaped_entry\"]},\n        {\"name\": \"non_entry$ebnf$1$subexpression$2\", \"symbols\": [\"escaped_escape\"]},\n        {\"name\": \"non_entry$ebnf$1$subexpression$2\", \"symbols\": [\"escaped_non_esc_outside_entry\"]},\n        {\"name\": \"non_entry$ebnf$1$subexpression$2\", \"symbols\": [\"non_esc_outside_entry\"]},\n        {\n            \"name\": \"non_entry$ebnf$1\",\n            \"symbols\": [\"non_entry$ebnf$1\", \"non_entry$ebnf$1$subexpression$2\"],\n            \"postprocess\": function arrpush(d) {\n                return d[0].concat([d[1]]);\n            }\n        },\n        {\n            \"name\": \"non_entry\", \"symbols\": [\"non_entry$ebnf$1\"], \"postprocess\": function (data) {\n            // console.log(\"non_entry\",data);\n            const tokens: any = [];\n            for (let Ti = 0; Ti < data[0].length; Ti++) tokens.push(data[0][Ti][0]);\n            return tokens;\n        }\n        },\n        {\n            \"name\": \"escaped_escape\", \"symbols\": [esc, esc], \"postprocess\": function () {\n            return \"\\\\\";\n        }\n        },\n        {\n            \"name\": \"escaped_entry\", \"symbols\": [esc, \"entry_decl\"], \"postprocess\": function (data) {\n            return {type: \"escapedEntry\", data: data[1]};\n        }\n        },\n        {\n            \"name\": \"escaped_non_esc_outside_entry\",\n            \"symbols\": [esc, \"non_esc_outside_entry\"],\n            \"postprocess\": function (data) {\n                return data; // [\"\\\\\", data[1]];\n            }\n        },\n        {\"name\": \"non_esc_outside_entry$subexpression$1\", \"symbols\": [tok_id]},\n        {\"name\": \"non_esc_outside_entry$subexpression$1\", \"symbols\": [ws]},\n        {\"name\": \"non_esc_outside_entry$subexpression$1\", \"symbols\": [num]},\n        {\"name\": \"non_esc_outside_entry$subexpression$1\", \"symbols\": [pound]},\n        {\"name\": \"non_esc_outside_entry$subexpression$1\", \"symbols\": [eq]},\n        {\"name\": \"non_esc_outside_entry$subexpression$1\", \"symbols\": [paren_l]},\n        {\"name\": \"non_esc_outside_entry$subexpression$1\", \"symbols\": [paren_r]},\n        {\"name\": \"non_esc_outside_entry$subexpression$1\", \"symbols\": [brace_l]},\n        {\"name\": \"non_esc_outside_entry$subexpression$1\", \"symbols\": [brace_r]},\n        {\"name\": \"non_esc_outside_entry$subexpression$1\", \"symbols\": [quote_dbl]},\n        {\"name\": \"non_esc_outside_entry$subexpression$1\", \"symbols\": [comma]},\n        {\n            \"name\": \"non_esc_outside_entry\",\n            \"symbols\": [\"non_esc_outside_entry$subexpression$1\"],\n            \"postprocess\": function (data) {\n                // console.log(\"ooutside_entry\",data[0][0]);\n                return data[0][0];\n            }\n        }\n    ]\n    , ParserStart: \"main\"\n};\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/parser/ts-parser.ts","import {TypedToken, isSpecialChar, newToken, Token} from \"./Token\";\nimport {isSingleWhiteSpaceCharacter, WhitespaceToken, SingleWhitespace, newWhitespace} from \"./WhitespaceToken\";\nimport {isNum, NumericChar, NumberToken, newNumber} from \"./NumericToken\";\nimport {IdToken, isIdChar, newIdToken} from \"./IdToken\";\nimport {isBibType, bibTypes} from \"./BibBlockTypes\";\n\nexport default class Lexer {\n    private str: string;\n    private len: number;\n    private pos: number;\n\n    constructor(string: string) {\n        this.str = string;\n        this.len = string.length;\n        this.pos = 0;\n    }\n\n    getStringUntilNonEscapedChar(terminalRegex: RegExp | string): string {\n        // if (typeof terminalRegex === 'string') {\n        // }\n        const chars: string[] = [];\n        for (let i = this.pos; i < this.len + 1; i++) {\n            this.pos = i;\n            if (this.str.charAt(i) == \"\\\\\" && this.str.charAt(i + 1).match(terminalRegex)) {\n                i++;\n                this.pos = i;\n            } else if (this.str.charAt(i).match(terminalRegex)) {\n                break;\n            }\n            chars.push(this.str.charAt(i));\n        }\n        return chars.join(\"\");\n    }\n    readTokens(): Token[] {\n        const tokens: Token[] = [];\n        let nextToken;\n        while (nextToken = this.readNextToken())\n            tokens.push(nextToken);\n        return tokens;\n    }\n\n    readNextToken(): Token | undefined {\n        if (this.pos >= this.str.length)\n            return undefined;\n\n        const currentChar: string = this.str.charAt(this.pos);\n\n        if (isSingleWhiteSpaceCharacter(currentChar))\n            return this.eatWhiteSpace();\n        else if (isSpecialChar(currentChar)) {\n            return this.eatSpecialChars(currentChar);\n        } else if (isNum(currentChar)) {\n            return this.eatNumericString(currentChar);\n        } else {\n            return this.eatIdString();\n        }\n    }\n\n    // NOTE: not needed? delete?\n    // isEscapeChar(i: number): boolean {\n    //     if (this.str.charAt(i) == '\\\\') {\n    //         // Might be an escaped character\n    //         const nextChar = this.str.charAt(i + 1);\n    //\n    //         // We've escaped a special character\n    //         return isEscapableChar(nextChar);\n    //     } else return false;\n    // }\n\n    private eatIdString(): IdToken {\n        // id\n        const chars: string[] = [];\n        const pos2 = this.pos;\n        for (let i = pos2; i < this.len + 1; i++) {\n            this.pos = i;\n            // console.log(this.pos, i);\n            // console.log(this.pos, this.str.charAt(i));\n            const charAtI = this.str.charAt(i);\n            if (!isIdChar(charAtI)) {\n                break;\n                // else if (charAtI == '\\\\' && (this.str.charAt(i + 1) == '\\\\' || isSpecialChar(this.str.charAt(i + 1)))) {\n                //  i++;\n                //  this.pos = i;\n                //  chars.push(this.str.charAt(i));\n            } else {\n                chars.push(charAtI);\n            }\n        }\n\n        return newIdToken(chars.join(\"\").trim());\n    }\n\n    private eatNumericString(startAt: NumericChar): number | NumberToken {\n        const nums: NumericChar[] = [startAt];\n\n        const nextPos = this.pos + 1;\n        for (let newPos = nextPos; newPos < this.len + 1; newPos++) {\n            this.pos = newPos;\n\n            const newChar = this.str.charAt(newPos);\n            if (isNum(newChar))\n                nums.push(newChar);\n            else\n                break;\n        }\n\n        const numericString: string = nums.join(\"\");\n\n        if (nums[0] === \"0\")  // If it starts with 0, return as a string\n            return newNumber(numericString);\n        else {\n            const number = Number.parseInt(numericString);\n            return Number.isFinite(number) ? number : newNumber(numericString);\n        }\n    }\n\n    private eatSpecialChars(startAt: string): string | TypedToken {\n        this.pos++;\n        if (startAt === \"@\") {\n            const type = this.getStringUntilNonEscapedChar(\"{\").trim();\n            if (isBibType(type))\n                return newToken(bibTypes[type], type);\n            else\n                return newToken(\"@bib\", type);\n        }\n        return startAt;\n    }\n\n    private eatWhiteSpace(): WhitespaceToken {\n        const chars: SingleWhitespace[] = [];\n        while (this.pos < this.len + 1) {\n            const c = this.str.charAt(this.pos);\n            // ignore whitespaces\n            if (isSingleWhiteSpaceCharacter(c)) {\n                chars.push(c);\n                this.pos++;\n            } else break;\n        }\n        return newWhitespace(chars.join(\"\"));\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/lexer/Lexer.ts","import {TypedToken, SpecialChar, isSpecialChar} from \"./Token\";\n\nimport {SingleWhitespace, isSingleWhiteSpaceCharacter} from \"./WhitespaceToken\";\nimport {isNum, NumericChar} from \"./NumericToken\";\n\nexport interface IdToken extends TypedToken {\n    type: \"id\";\n    string: string;\n}\n\nexport function newIdToken(string: string): IdToken {\n    return {\n        type: \"id\",\n        string\n    };\n}\n\nexport function isIdToken(string: any): string is IdToken {\n    return string.type === \"id\" && typeof string.string === \"string\";\n}\n\nexport function isIdChar(c: string): c is IdChar {\n    return !(isSpecialChar(c) || isNum(c) || isSingleWhiteSpaceCharacter(c));\n}\n\nexport type IdChar = SpecialChar | NumericChar | SingleWhitespace;\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/lexer/IdToken.ts","export const bibTypes = {\n    string: \"@string\",\n    preamble: \"@preamble\",\n    comment: \"@comment\",\n    bib: \"@bib\"\n};\n\nexport type BibType = keyof typeof bibTypes;\n\nexport const isBibType = function (c: string): c is BibType {\n    return bibTypes.hasOwnProperty(c);\n};\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/lexer/BibBlockTypes.ts"],"sourceRoot":""}